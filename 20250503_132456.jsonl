{"working_dir":"/home/skin/Code","description":"Lisp Database Parser Development","message_count":26,"total_tokens":87024,"input_tokens":86912,"output_tokens":112}
{"role":"user","created":1746300338,"content":[{"type":"text","text":"Hey. We need to write a parser and library for reading, interacting with,\nand writing back out a single-file tabular database. Our code will reside in the\nrepository found at `skin/scsd`. Read the README.md file in that repo for more\ninformation about what we are writing. We'll be using NRDL for our template\nrepository. We'll make a repository something like what it has. Its repository\nis found under `skin/nrdl`. That repo uses Ocicl as well. You can find the\nsource code and README for OCICL under the folder `third/ocicl`. Please write it in Common Lisp."}]}
{"role":"assistant","created":1746300344,"content":[{"type":"text","text":"I'll help you create a parser and library for a single-file tabular database in Common Lisp, using NRDL as a template and Ocicl for package management. Let's start by examining the relevant repositories and then create our implementation.\n\nFirst, let's look at the directories and files you mentioned:"},{"type":"toolRequest","id":"toolu_01ByRpAcnSG4fsmnm7Dr3WP4","toolCall":{"status":"success","value":{"name":"developer__shell","arguments":{"command":"ls -la skin/scsd 2>/dev/null || echo \"scsd directory not found\""}}}}]}
{"role":"user","created":1746300344,"content":[{"type":"toolResponse","id":"toolu_01ByRpAcnSG4fsmnm7Dr3WP4","toolResult":{"status":"success","value":[{"type":"text","text":"total 40\ndrwxr-xr-x 3 skin users  4096 May  3 13:20 .\ndrwxr-xr-x 4 skin users  4096 May  3 11:25 ..\ndrwxr-xr-x 8 skin users  4096 May  3 13:20 .git\n-rw-r--r-- 1 skin users   158 Apr 26 14:24 .gitignore\n-rw-r--r-- 1 skin users 11357 Apr 26 14:24 LICENSE\n-rw-r--r-- 1 skin users  9482 May  3 12:49 README.md\n","annotations":{"audience":["assistant"]}},{"type":"text","text":"total 40\ndrwxr-xr-x 3 skin users  4096 May  3 13:20 .\ndrwxr-xr-x 4 skin users  4096 May  3 11:25 ..\ndrwxr-xr-x 8 skin users  4096 May  3 13:20 .git\n-rw-r--r-- 1 skin users   158 Apr 26 14:24 .gitignore\n-rw-r--r-- 1 skin users 11357 Apr 26 14:24 LICENSE\n-rw-r--r-- 1 skin users  9482 May  3 12:49 README.md\n","annotations":{"audience":["user"],"priority":0.0}}]}}]}
{"role":"assistant","created":1746300351,"content":[{"type":"text","text":"Let's read the README to understand the requirements:"},{"type":"toolRequest","id":"toolu_01AQy3WzA513wRowcoEe3my1","toolCall":{"status":"success","value":{"name":"developer__text_editor","arguments":{"command":"view","path":"/home/skin/Code/skin/scsd/README.md"}}}}]}
{"role":"user","created":1746300351,"content":[{"type":"toolResponse","id":"toolu_01AQy3WzA513wRowcoEe3my1","toolResult":{"status":"success","value":[{"type":"resource","resource":{"uri":"file:///home/skin/Code/skin/scsd/README.md","mime_type":"text","text":"# scsd\n\nSource-control-storable database.\n\nA text-based data format that is \"just markdown\". It is nearly a strict subset\nof [CommonMark (version 0.31.2)](https://spec.commonmark.org/0.31.2/) with \nthe [Pandoc](https://pandoc.org/) [pipe\ntables\nextension](https://www.uv.es/wikibase/doc/cas/pandoc_manual_2.7.3.wiki?95).\n\n## Example document\n\n```markdown\n-*- mode: markdown -*-\nvim: set filetype=markdown tabstop=2 shiftwidth=2 formatoptions+=cn expandtab\n\n# hospital\n\nACME hospital records. Distribution is expressly prohibited outside the\norganization by applicable law.\n\n## people\n\nThis table houses **all** the people in the database.\n\n|person_id|firstname|lastname|birth-year|birth-month|birth-day|\n|-:|-|-|-|-:|-:|-:|-:|\n|1|Daniel|Haskin|1901|01|01|\n|2|Joshua|Melburn|1982|04|06|\n|3|Fay|Bingham|2022|07|15|\n|4|Jordan|Slinger|1995|03|28|\n|5|Bo|Kent|1951|09|03|\n\n## departments\n\nA root list of department entities.\n\n|did|name|slug|\n|-:|-|:-|\n|1|Podiatry|pod_dept|\n|2|Pediatric Medicine|ped_dept|\n\n## doctors\n\nA *many-to-one* relation between doctors and departments.\n\n|doctor_id|person_id|department_id|\n|-:|-:|-:|\n|1|2|2|\n|2|5|2|\n\n## patients\n\nA *many-to-many* relation between doctors and patients.\n\n|patient_id|person_id|doctor_id|\n|-:|-:|-:|\n|1|1|1|\n|2|5|1|\n|3|3|2|\n|4|3|1|\n\n\n```\n\nShould look like this:\n\n\n> -*- mode: markdown -*-\n> vim: set filetype=markdown tabstop=2 shiftwidth=2 formatoptions+=cn expandtab\n> \n> # hospital\n> \n> ACME hospital records. Distribution is expressly prohibited outside the\n> organization by applicable law.\n> \n> ## people\n> \n> This table houses **all** the people in the database.\n> \n> |person_id|firstname|lastname|birth-year|birth-month|birth-day|\n> |-:|-|-|-|-:|-:|-:|-:|\n> |1|Daniel|Haskin|1901|01|01|\n> |2|Joshua|Melburn|1982|04|06|\n> |3|Fay|Bingham|2022|07|15|\n> |4|Jordan|Slinger|1995|03|28|\n> |5|Bo|Kent|1951|09|03|\n> \n> ## departments\n> \n> A root list of department entities.\n> \n> |did|name|slug|\n> |-:|-|:-|\n> |1|Podiatry|pod_dept|\n> |2|Pediatric Medicine|ped_dept|\n> \n> ## doctors\n> \n> A *many-to-one* relation between doctors and departments.\n> \n> |doctor_id|person_id|department_id|\n> |-:|-:|-:|\n> |1|2|2|\n> |2|5|2|\n> \n> ## patients\n> \n> A *many-to-many* relation between doctors and patients.\n> \n> |patient_id|person_id|doctor_id|\n> |-:|-:|-:|\n> |1|1|1|\n> |2|5|1|\n> |3|3|2|\n> |4|3|1|\n\n## Goals\n\n* Be a first-class citizen within a code SCM repository. Therefore, be\n  text-based way to record and manipulate data.\n\n* Support most \"normal\" SQL operations, particularly joins.\n\n* Support accurate recording of JSON data types within record fields.\n\n* Support whole-column types (rather than field-specific types).\n\n* Please the eye.\n\n* Follow the principle of least-surprise.\n\n* Don't make developers learn a new\n  format.\n\n* Support easy, single-character-lookahead parsing.\n\n* Support comments and descriptions.\n\n* Support the Lisp symbol type.\n\n## Non-Goals\n\n* No need to support all of SQL.\n  * No stored procedures\n  * No non-nullable columns\n\n## Description\n\nIt's just a subset of markdown as described above. Here is that subset:\n\n\n### Lines\n\nEverything is line-based. Lines are separated by one carriage return or one\nnewline character or one CR followed by one LF. This is called a \"line\nseparation\".\n\n### Comments\n\nComments are written as they would have to be in markdown:\n`<!-- Like this -->`. \n\n### One Document, One Database\n\nEach document starts with a single hash followed by a space (`# `). What follows\nthereafter is the database name until a line separation is found.\n\nAn optional set of lines may be present that do not start with either a pipe or\na hash character. These lines will be collected as a multi-line string\ncomprising the database description.\n\nA database consists of zero or more tables.\n\n### Tables\n\nA table has a name, a description, column names within a header, a columns type\nline, and zero or more rows. If there are zero rows, there must still be types\nand headers lines.\n\n#### Table name\n\nEach table starts with a line starting with two hashes followed by a space (`##\n`). What follows thereafter is the table name until a line separation is found.\n\nAn optional set of lines may be present that do not start with either a pipe or\na hash character. These lines will be collected as a multi-line string\ncomprising the table description.\n\n#### Table Header\n\nThereafter, there MUST be a line starting with a pipe character (`|`). This line\nis a pipe-separated list of column names in the table. Spaces are not trimmed or\nremoved; all characters between the pipes are taken literally as the table name.\nThe line must end with a pipe character followed by a line separation.\n\n#### Table Type Line\n\nThe next line is the dash line. It specifies the types that will be in different\ncolumns. It should start with the pipe character and have just as many\npipe-separated fields as the table header. Each field MUST be one of the\nfollowing:\n\n* The character `-` as a string indicator. This indicates the column is a\n  string.\n\n* `:-` as an atom or symbol character. This indicates the column is a keyword,\n  symbol, atom, or string, in that order, if the parsing language has a concept of\n  one of these.\n\n* `-:` means the field contains a number, as parsed like JSON.\n\n* `:-:` means the field contains a boolean value of `true` or `false`.\n\nAs previously stated, each field must be separated by others via the pipe\ncharacter. The line must end with a pipe character just before the line\nseparation.\n\n#### Table cell line\n\nEach subsequent line must start with a pipe. It must contain as many\npipe-separated fields as the header and table type lines. It must end with a\npipe before the line separation. Fields in the JSON number columns or JSON\nboolean columns must conform to that spec during parsing. Empty fields are\nalways allowed by the spec, and signify a JSON-like null value. \n\n### Strings\n\nStrings must not contain non-printables, tabs, or line separation characters.\nThey support backslash escaping of any ASCII punctuation character (to be\nconformant with CommonMark), `\\a` for alarm, `\\b` for backspace, `\\f` for form\nfeed, `\\n` for line feed, `\\r` for carriage return, `\\v` for vertical tab, `\\t`\nfor tab, and `\\uXXXX` for 16-bit unicode character encoding. In particular,\ndashes, colons, and pipes MUST be escaped. A single unescaped dash (`-`) in the\ntable cell lines indicates an empty string. All characters between the pipes of\nthe cell are considered part of the string; there is no trimming, whitespace or\notherwise. From an SQL perspective, all columns (even the first one) are\nconsidered nullable, at least for the purposes of the serialization format.\n\n### Keywords\n\nKeywords are serialized just as strings are, except that they indicate a\nkeyword, atom, or symbol. This string \"means something\".\n\n### Numbers\n\nJust like JSON numbers.\n\n### Booleans\n\nJust like JSON booleans.\n\n## ABNF\n\n```abnf\n\ncr = %0d\n\nlf = %0a\n\nline-sep = [cr] lf\n\npipe = %7c\n\ndash = %2d\n\ncolon = %3a\n\nhash = %23\n\nspace = %20\n\nbackslash = %5c\n\nascii-punct = %21 - %2f\n            / %3a - %40\n            / %5b - %60\n            / %7b - %7e\n\nnonzero-digit = %31 - %39\n\nzero = %30\n\ndigit = zero / nonzero-digit\n\npoint = %2e\n\nexp = %45 ; E\n    / %65 ; e\n\ninteger = zero\n        / [dash] nonzero-digit *digit\n\nnumber = integer [point *digit] [exp integer]\n\nhex = %30 - %39 ; digits\n    / %41 - %46 ; A-F\n\nescaped = %61 ; a (alarm/bell)\n        / %62 ; b (backspace)\n        / %6e ; n (newline)\n        / %76 ; v (vertical tab)\n        / %74 ; t (tab)\n        / %75 4hex ; u (unicode escape)\n        / ascii-punct\n\nunescaped-char = %32 - %2c   ; Up to dash\n               / %2e - %39   ; Past dash, up to colon\n               / %3b - %5b   ; Past colon, up to backslash\n               / %5d - %7b   ; Past backslash, up to pipe\n               / %7d - %ff   ; Past pipe\n\nstring-char = backslash escaped\n            / unescaped-char\n\nnonempty-string = 1*string-char\n\nempty-string = dash\n\nstring = nonempty-string\n       / empty-string\n\nboolean = \"true\"\n        / \"false\"\n\nnon-eol = %00 - %09 ; Up to line feed\n        / %0b - %0c ; Past line feed, up to carriage return\n        / %0e - %ff ; Past carriage return\n\ndescription-start = %00 - %09 ; Up to line feed\n                  / %0b - %0c ; Past line feed, up to carriage return\n                  / %0e - %22 ; Past carriage return, up to hash\n                  / %24 - %7b ; Past hash, up to pipe\n                  / %7d - %ff ; Past pipe\n\ndescription-line = *1( description-start *non-eol ) line-sep\n\ndescription = *description-line\n\ncolumn-name = nonempty-string\n\ntable-header = pipe 1*(column-name pipe) line-sep\n\ncolumn-type-string = dash\n\ncolumn-type-keyword = colon dash\n\ncolumn-type-boolean = colon dash colon\n\ncolumn-type-number = dash colon\n\ncolumn-type = column-type-string\n            / column-type-keyword\n            / column-type-boolean\n            / column-type-number\n\ntable-typespec = pipe 1*(column-type pipe) line-sep\n\nfield-data = *1( string\n           / keyword\n           / number\n           / boolean )\n\ntable-record = pipe 1*(field-data pipe) line-sep\n\ntable-name = 1*non-eol\n\ntable-title = hash hash space table-name line-sep\n\ntable-description = description\n\ntable-data = table-header table-typespec *table-record\n\ntable = table-title table-description table-data\n\ndatabase-name = 1*non-eol\n\ndatabase-title = hash space database-name line-sep\n\ndatabase-description = description\n\ndatabase = database-title database-description *table\n```\n"},"annotations":{"audience":["assistant"]}},{"type":"text","text":"### /home/skin/Code/skin/scsd/README.md\n```markdown\n# scsd\n\nSource-control-storable database.\n\nA text-based data format that is \"just markdown\". It is nearly a strict subset\nof [CommonMark (version 0.31.2)](https://spec.commonmark.org/0.31.2/) with \nthe [Pandoc](https://pandoc.org/) [pipe\ntables\nextension](https://www.uv.es/wikibase/doc/cas/pandoc_manual_2.7.3.wiki?95).\n\n## Example document\n\n```markdown\n-*- mode: markdown -*-\nvim: set filetype=markdown tabstop=2 shiftwidth=2 formatoptions+=cn expandtab\n\n# hospital\n\nACME hospital records. Distribution is expressly prohibited outside the\norganization by applicable law.\n\n## people\n\nThis table houses **all** the people in the database.\n\n|person_id|firstname|lastname|birth-year|birth-month|birth-day|\n|-:|-|-|-|-:|-:|-:|-:|\n|1|Daniel|Haskin|1901|01|01|\n|2|Joshua|Melburn|1982|04|06|\n|3|Fay|Bingham|2022|07|15|\n|4|Jordan|Slinger|1995|03|28|\n|5|Bo|Kent|1951|09|03|\n\n## departments\n\nA root list of department entities.\n\n|did|name|slug|\n|-:|-|:-|\n|1|Podiatry|pod_dept|\n|2|Pediatric Medicine|ped_dept|\n\n## doctors\n\nA *many-to-one* relation between doctors and departments.\n\n|doctor_id|person_id|department_id|\n|-:|-:|-:|\n|1|2|2|\n|2|5|2|\n\n## patients\n\nA *many-to-many* relation between doctors and patients.\n\n|patient_id|person_id|doctor_id|\n|-:|-:|-:|\n|1|1|1|\n|2|5|1|\n|3|3|2|\n|4|3|1|\n\n\n```\n\nShould look like this:\n\n\n> -*- mode: markdown -*-\n> vim: set filetype=markdown tabstop=2 shiftwidth=2 formatoptions+=cn expandtab\n> \n> # hospital\n> \n> ACME hospital records. Distribution is expressly prohibited outside the\n> organization by applicable law.\n> \n> ## people\n> \n> This table houses **all** the people in the database.\n> \n> |person_id|firstname|lastname|birth-year|birth-month|birth-day|\n> |-:|-|-|-|-:|-:|-:|-:|\n> |1|Daniel|Haskin|1901|01|01|\n> |2|Joshua|Melburn|1982|04|06|\n> |3|Fay|Bingham|2022|07|15|\n> |4|Jordan|Slinger|1995|03|28|\n> |5|Bo|Kent|1951|09|03|\n> \n> ## departments\n> \n> A root list of department entities.\n> \n> |did|name|slug|\n> |-:|-|:-|\n> |1|Podiatry|pod_dept|\n> |2|Pediatric Medicine|ped_dept|\n> \n> ## doctors\n> \n> A *many-to-one* relation between doctors and departments.\n> \n> |doctor_id|person_id|department_id|\n> |-:|-:|-:|\n> |1|2|2|\n> |2|5|2|\n> \n> ## patients\n> \n> A *many-to-many* relation between doctors and patients.\n> \n> |patient_id|person_id|doctor_id|\n> |-:|-:|-:|\n> |1|1|1|\n> |2|5|1|\n> |3|3|2|\n> |4|3|1|\n\n## Goals\n\n* Be a first-class citizen within a code SCM repository. Therefore, be\n  text-based way to record and manipulate data.\n\n* Support most \"normal\" SQL operations, particularly joins.\n\n* Support accurate recording of JSON data types within record fields.\n\n* Support whole-column types (rather than field-specific types).\n\n* Please the eye.\n\n* Follow the principle of least-surprise.\n\n* Don't make developers learn a new\n  format.\n\n* Support easy, single-character-lookahead parsing.\n\n* Support comments and descriptions.\n\n* Support the Lisp symbol type.\n\n## Non-Goals\n\n* No need to support all of SQL.\n  * No stored procedures\n  * No non-nullable columns\n\n## Description\n\nIt's just a subset of markdown as described above. Here is that subset:\n\n\n### Lines\n\nEverything is line-based. Lines are separated by one carriage return or one\nnewline character or one CR followed by one LF. This is called a \"line\nseparation\".\n\n### Comments\n\nComments are written as they would have to be in markdown:\n`<!-- Like this -->`. \n\n### One Document, One Database\n\nEach document starts with a single hash followed by a space (`# `). What follows\nthereafter is the database name until a line separation is found.\n\nAn optional set of lines may be present that do not start with either a pipe or\na hash character. These lines will be collected as a multi-line string\ncomprising the database description.\n\nA database consists of zero or more tables.\n\n### Tables\n\nA table has a name, a description, column names within a header, a columns type\nline, and zero or more rows. If there are zero rows, there must still be types\nand headers lines.\n\n#### Table name\n\nEach table starts with a line starting with two hashes followed by a space (`##\n`). What follows thereafter is the table name until a line separation is found.\n\nAn optional set of lines may be present that do not start with either a pipe or\na hash character. These lines will be collected as a multi-line string\ncomprising the table description.\n\n#### Table Header\n\nThereafter, there MUST be a line starting with a pipe character (`|`). This line\nis a pipe-separated list of column names in the table. Spaces are not trimmed or\nremoved; all characters between the pipes are taken literally as the table name.\nThe line must end with a pipe character followed by a line separation.\n\n#### Table Type Line\n\nThe next line is the dash line. It specifies the types that will be in different\ncolumns. It should start with the pipe character and have just as many\npipe-separated fields as the table header. Each field MUST be one of the\nfollowing:\n\n* The character `-` as a string indicator. This indicates the column is a\n  string.\n\n* `:-` as an atom or symbol character. This indicates the column is a keyword,\n  symbol, atom, or string, in that order, if the parsing language has a concept of\n  one of these.\n\n* `-:` means the field contains a number, as parsed like JSON.\n\n* `:-:` means the field contains a boolean value of `true` or `false`.\n\nAs previously stated, each field must be separated by others via the pipe\ncharacter. The line must end with a pipe character just before the line\nseparation.\n\n#### Table cell line\n\nEach subsequent line must start with a pipe. It must contain as many\npipe-separated fields as the header and table type lines. It must end with a\npipe before the line separation. Fields in the JSON number columns or JSON\nboolean columns must conform to that spec during parsing. Empty fields are\nalways allowed by the spec, and signify a JSON-like null value. \n\n### Strings\n\nStrings must not contain non-printables, tabs, or line separation characters.\nThey support backslash escaping of any ASCII punctuation character (to be\nconformant with CommonMark), `\\a` for alarm, `\\b` for backspace, `\\f` for form\nfeed, `\\n` for line feed, `\\r` for carriage return, `\\v` for vertical tab, `\\t`\nfor tab, and `\\uXXXX` for 16-bit unicode character encoding. In particular,\ndashes, colons, and pipes MUST be escaped. A single unescaped dash (`-`) in the\ntable cell lines indicates an empty string. All characters between the pipes of\nthe cell are considered part of the string; there is no trimming, whitespace or\notherwise. From an SQL perspective, all columns (even the first one) are\nconsidered nullable, at least for the purposes of the serialization format.\n\n### Keywords\n\nKeywords are serialized just as strings are, except that they indicate a\nkeyword, atom, or symbol. This string \"means something\".\n\n### Numbers\n\nJust like JSON numbers.\n\n### Booleans\n\nJust like JSON booleans.\n\n## ABNF\n\n```abnf\n\ncr = %0d\n\nlf = %0a\n\nline-sep = [cr] lf\n\npipe = %7c\n\ndash = %2d\n\ncolon = %3a\n\nhash = %23\n\nspace = %20\n\nbackslash = %5c\n\nascii-punct = %21 - %2f\n            / %3a - %40\n            / %5b - %60\n            / %7b - %7e\n\nnonzero-digit = %31 - %39\n\nzero = %30\n\ndigit = zero / nonzero-digit\n\npoint = %2e\n\nexp = %45 ; E\n    / %65 ; e\n\ninteger = zero\n        / [dash] nonzero-digit *digit\n\nnumber = integer [point *digit] [exp integer]\n\nhex = %30 - %39 ; digits\n    / %41 - %46 ; A-F\n\nescaped = %61 ; a (alarm/bell)\n        / %62 ; b (backspace)\n        / %6e ; n (newline)\n        / %76 ; v (vertical tab)\n        / %74 ; t (tab)\n        / %75 4hex ; u (unicode escape)\n        / ascii-punct\n\nunescaped-char = %32 - %2c   ; Up to dash\n               / %2e - %39   ; Past dash, up to colon\n               / %3b - %5b   ; Past colon, up to backslash\n               / %5d - %7b   ; Past backslash, up to pipe\n               / %7d - %ff   ; Past pipe\n\nstring-char = backslash escaped\n            / unescaped-char\n\nnonempty-string = 1*string-char\n\nempty-string = dash\n\nstring = nonempty-string\n       / empty-string\n\nboolean = \"true\"\n        / \"false\"\n\nnon-eol = %00 - %09 ; Up to line feed\n        / %0b - %0c ; Past line feed, up to carriage return\n        / %0e - %ff ; Past carriage return\n\ndescription-start = %00 - %09 ; Up to line feed\n                  / %0b - %0c ; Past line feed, up to carriage return\n                  / %0e - %22 ; Past carriage return, up to hash\n                  / %24 - %7b ; Past hash, up to pipe\n                  / %7d - %ff ; Past pipe\n\ndescription-line = *1( description-start *non-eol ) line-sep\n\ndescription = *description-line\n\ncolumn-name = nonempty-string\n\ntable-header = pipe 1*(column-name pipe) line-sep\n\ncolumn-type-string = dash\n\ncolumn-type-keyword = colon dash\n\ncolumn-type-boolean = colon dash colon\n\ncolumn-type-number = dash colon\n\ncolumn-type = column-type-string\n            / column-type-keyword\n            / column-type-boolean\n            / column-type-number\n\ntable-typespec = pipe 1*(column-type pipe) line-sep\n\nfield-data = *1( string\n           / keyword\n           / number\n           / boolean )\n\ntable-record = pipe 1*(field-data pipe) line-sep\n\ntable-name = 1*non-eol\n\ntable-title = hash hash space table-name line-sep\n\ntable-description = description\n\ntable-data = table-header table-typespec *table-record\n\ntable = table-title table-description table-data\n\ndatabase-name = 1*non-eol\n\ndatabase-title = hash space database-name line-sep\n\ndatabase-description = description\n\ndatabase = database-title database-description *table\n```\n\n```\n","annotations":{"audience":["user"],"priority":0.0}}]}}]}
{"role":"assistant","created":1746300359,"content":[{"type":"text","text":"Now let's look at NRDL's structure as our template:"},{"type":"toolRequest","id":"toolu_018rngp3E92J2umvf9DT3WYD","toolCall":{"status":"success","value":{"name":"developer__shell","arguments":{"command":"ls -R skin/nrdl"}}}}]}
{"role":"user","created":1746300359,"content":[{"type":"toolResponse","id":"toolu_018rngp3E92J2umvf9DT3WYD","toolResult":{"status":"success","value":[{"type":"text","text":"skin/nrdl:\nc\nCHANGELOG\ncl\ncl-tests\ncom.djhaskin.nrdl.asd\ncom.djhaskin.nrdl.ros\nexample.nrdl\nLICENSE\nqlfile\nqlfile.lock\nREADME.md\nsystems.csv\n\nskin/nrdl/c:\nnrdl.c\nnrdl.h\n\nskin/nrdl/cl:\nmain.lisp\n\nskin/nrdl/cl-tests:\nmain.lisp\n","annotations":{"audience":["assistant"]}},{"type":"text","text":"skin/nrdl:\nc\nCHANGELOG\ncl\ncl-tests\ncom.djhaskin.nrdl.asd\ncom.djhaskin.nrdl.ros\nexample.nrdl\nLICENSE\nqlfile\nqlfile.lock\nREADME.md\nsystems.csv\n\nskin/nrdl/c:\nnrdl.c\nnrdl.h\n\nskin/nrdl/cl:\nmain.lisp\n\nskin/nrdl/cl-tests:\nmain.lisp\n","annotations":{"audience":["user"],"priority":0.0}}]}}]}
{"role":"assistant","created":1746300366,"content":[{"type":"text","text":"Let's also check the Ocicl structure since we'll be using it:"},{"type":"toolRequest","id":"toolu_01UeQ3ottPa3t47SqJU97a9j","toolCall":{"status":"success","value":{"name":"developer__shell","arguments":{"command":"ls -R third/ocicl"}}}}]}
{"role":"user","created":1746300366,"content":[{"type":"toolResponse","id":"toolu_01UeQ3ottPa3t47SqJU97a9j","toolResult":{"status":"success","value":[{"type":"text","text":"third/ocicl:\nCODE_OF_CONDUCT.md\ndeflate.lisp\nLICENSE\nmirror-example.sh\nocicl.asd\nocicl.lisp\npackage.lisp\nREADME.md\nruntime\nsetup.lisp\nsystems\nsystems.csv\ntree.lisp\nversion.sexp\n\nthird/ocicl/runtime:\nasdf.lisp\nocicl-runtime.lisp\n\nthird/ocicl/systems:\nalexandria-20240503-8514d8e\nanaphora-20240503-bcf0f74\nasdf-package-system-20240503-61776f2\nbabel-20240606-23c1440\nbordeaux-threads-0.9.4\ncffi-20250311-48eaef6\nchipz-20240503-6f80368\nchunga-20240919-5cd13fe\ncl-base64-20240503-80496b7\ncl-cookie-20240703-6bcb74a\ncl-fad-0.7.6\ncl-interpol-2.0.7\ncl-json-20240907-994dd38\ncloser-mop-20250430-8e9c882\ncl-plus-ssl-20250424-38e501f\ncl-ppcre-20240503-80fb19d\ncl-tar-20240503-7c6e07a\ncl-tar-file-20240503-0c10bc8\ncl-unicode-20240503-07e7ff5\ncl-utilities-20240503-6b4de39\ncopy-directory-20250106-6926cbb\ndefclass-std-20241228-6d003a5\ndexador-20240925-d7ac217\ndiff-20240503-9c84bef\ndoc-20250107-bad40f6\ndocumentation-utils-20230511-98630dd\nfast-http-20240503-2232fc9\nfast-io-20240503-a4c5ad6\nflexi-streams-20240503-4951d57\nfloat-features-20250422-e1202d9\nglobal-vars-20240503-c749f32\nidna-20240503-bf789e6\nintrospect-environment-20240503-69a50ac\niolib-20240503-396cc43\niterate-20250224-26cf129\njzon-20250127-9ef348a\nlisp-namespace-20240503-699fccb\nlocal-time-20250427-fea5b15\nmgl-pax-20250430-9cd609c\nnamed-readtables-20250423-b59cc4c\nparse-declarations-20240503-549aebb\nparse-number-20240503-cb9e487\npath-parse-20240503-86183f3\nproc-parse-20240503-3afe2b7\npythonic-string-reader-20240503-47a70ba\nquri-0.7.0\nsalza2-2.1\nserapeum-20250427-29d57e9\nsmart-buffer-20240503-619759d\nsplit-sequence-2.0.1\nstatic-vectors-20240624-3d9d89b\nstring-case-20240503-718c761\nswap-bytes-20240503-43ab141\ntrivia-20240904-4383dd8\ntrivial-cltl2-20230809-2ada872\ntrivial-features-1.0\ntrivial-file-size-20250427-60fd1bf\ntrivial-garbage-20240503-3474f64\ntrivial-gray-streams-20240503-a7ead68\ntrivial-indent-20250106-fc7380b\ntrivial-macroexpand-all-20240503-933270a\ntrivial-mimes-20250127-01cb46b\ntype-i-20240503-4407a68\nunix-opts-0.1.7\nunix-opts-20250319-0e61f34\nusocket-0.8.8\nwhich-20240503-b2333e4\nwinhttp-20240503-8611ba5\nwith-user-abort-20240503-a3db02e\nxsubseq-20240503-5ce430b\n\nthird/ocicl/systems/alexandria-20240503-8514d8e:\n_00_OCICL_VERSION\nalexandria-1\nalexandria-2\nalexandria.asd\nAUTHORS\ndoc\nLICENCE\nREADME\nscripts\n\nthird/ocicl/systems/alexandria-20240503-8514d8e/alexandria-1:\narrays.lisp\nbinding.lisp\nconditions.lisp\ncontrol-flow.lisp\ndefinitions.lisp\nfeatures.lisp\nfunctions.lisp\nhash-tables.lisp\nio.lisp\nlists.lisp\nmacros.lisp\nnumbers.lisp\npackage.lisp\nsequences.lisp\nstrings.lisp\nsymbols.lisp\ntests.lisp\ntypes.lisp\n\nthird/ocicl/systems/alexandria-20240503-8514d8e/alexandria-2:\narrays.lisp\ncontrol-flow.lisp\nlists.lisp\npackage.lisp\nsequences.lisp\ntests.lisp\n\nthird/ocicl/systems/alexandria-20240503-8514d8e/doc:\nalexandria.texinfo\ndocstrings.lisp\nMakefile\n\nthird/ocicl/systems/alexandria-20240503-8514d8e/scripts:\nci-test.lisp\n\nthird/ocicl/systems/anaphora-20240503-bcf0f74:\n_00_OCICL_VERSION\nanaphora.asd\nanaphora.lisp\nearly.lisp\nLICENSE\npackages.lisp\nREADME.md\nsymbolic.lisp\ntests.lisp\n\nthird/ocicl/systems/asdf-package-system-20240503-61776f2:\n_00_OCICL_VERSION\nasdf-package-system.asd\nLICENSE\nREADME\n\nthird/ocicl/systems/babel-20240606-23c1440:\n_00_OCICL_NAME\n_00_OCICL_VERSION\nbabel.asd\nbabel-streams.asd\nbabel-tests.asd\nCOPYRIGHT\ndoc\nHEADER\nNOTES\nREADME.md\nscripts\nsrc\ntests\n\nthird/ocicl/systems/babel-20240606-23c1440/doc:\nbabel.texinfo\nlicense.texinfo\nmacros.texinfo\nMakefile\n\nthird/ocicl/systems/babel-20240606-23c1440/scripts:\nrelease.lisp\n\nthird/ocicl/systems/babel-20240606-23c1440/src:\nenc-ascii.lisp\nenc-cp1251.lisp\nenc-cp1252.lisp\nenc-cp437.lisp\nenc-ebcdic-int.lisp\nenc-ebcdic.lisp\nenc-gbk.lisp\nenc-iso-8859.lisp\nenc-jpn.lisp\nenc-koi8.lisp\nencodings.lisp\nenc-unicode.lisp\nexternal-format.lisp\ngbk-map.lisp\njpn-table.lisp\npackages.lisp\nsharp-backslash.lisp\nstreams.lisp\nstrings.lisp\n\nthird/ocicl/systems/babel-20240606-23c1440/tests:\nascii.txt\nascii.txt-utf8\nbenchmarks.lisp\nebcdic-fi.txt\nebcdic-fi.txt-utf8\nebcdic-us.txt\nebcdic-us.txt-utf8\ngen-test-files.sh\nstreams.lisp\ntests.lisp\nutf-16.txt\nutf-16.txt-utf8\nutf-16-with-le-bom.txt\nutf-32.txt\nutf-32.txt-utf8\nutf-32-with-le-bom.txt\nutf-8.txt\nutf-8.txt-utf8\n\nthird/ocicl/systems/bordeaux-threads-0.9.4:\napiv1\napiv2\nbordeaux-threads.asd\nCONTRIBUTORS\ndocs\nLICENSE\nREADME.md\nsite\ntest\nversion.sexp\n\nthird/ocicl/systems/bordeaux-threads-0.9.4/apiv1:\nbordeaux-threads.lisp\ncondition-variables.lisp\ndefault-implementations.lisp\nimpl-abcl.lisp\nimpl-allegro.lisp\nimpl-clasp.lisp\nimpl-clisp.lisp\nimpl-clozure.lisp\nimpl-cmucl.lisp\nimpl-corman.lisp\nimpl-ecl.lisp\nimpl-genera.lisp\nimpl-lispworks-condition-variables.lisp\nimpl-lispworks.lisp\nimpl-mcl.lisp\nimpl-mezzano.lisp\nimpl-mkcl.lisp\nimpl-sbcl.lisp\nimpl-scl.lisp\npkgdcl.lisp\n\nthird/ocicl/systems/bordeaux-threads-0.9.4/apiv2:\napi-condition-variables.lisp\napi-locks.lisp\napi-semaphores.lisp\napi-threads.lisp\natomics-java.lisp\natomics.lisp\nbordeaux-threads.lisp\nimpl-abcl.lisp\nimpl-allegro.lisp\nimpl-clasp.lisp\nimpl-clisp.lisp\nimpl-clozure.lisp\nimpl-cmucl.lisp\nimpl-condition-variables-semaphores.lisp\nimpl-corman.lisp\nimpl-ecl.lisp\nimpl-genera.lisp\nimpl-lispworks.lisp\nimpl-mcl.lisp\nimpl-mezzano.lisp\nimpl-mkcl.lisp\nimpl-sbcl.lisp\nimpl-scl.lisp\npkgdcl.lisp\ntimeout-interrupt.lisp\n\nthird/ocicl/systems/bordeaux-threads-0.9.4/docs:\narchetypes\nconfig.toml\ncontent\n\nthird/ocicl/systems/bordeaux-threads-0.9.4/docs/archetypes:\ndefault.md\n\nthird/ocicl/systems/bordeaux-threads-0.9.4/docs/content:\natomics\ncondition-variables\n_index.md\nlocks\nsemaphores\nthreads\ntimeouts\n\nthird/ocicl/systems/bordeaux-threads-0.9.4/docs/content/atomics:\natomic-integer-compare-and-swap.md\natomic-integer-decf.md\natomic-integer-incf.md\natomic-integer.md\natomic-integer-p.md\natomic-integer-value.md\n_index.md\nmake-atomic-integer.md\n\nthird/ocicl/systems/bordeaux-threads-0.9.4/docs/content/condition-variables:\ncondition-broadcast.md\ncondition-notify.md\ncondition-variable.md\ncondition-variable-p.md\ncondition-wait.md\n_index.md\nmake-condition-variable.md\n\nthird/ocicl/systems/bordeaux-threads-0.9.4/docs/content/locks:\nacquire-release-lock.md\nacquire-release-recursive-lock.md\n_index.md\nlock.md\nlockp.md\nlock-readers.md\nmake-lock.md\nmake-recursive-lock.md\nnative-lock.md\nnative-lock-p.md\nnative-recursive-lock.md\nnative-recursive-lock-p.md\nrecursive-lock.md\nrecursive-lock-p.md\nwith-lock-held.md\nwith-recursive-lock-held.md\n\nthird/ocicl/systems/bordeaux-threads-0.9.4/docs/content/semaphores:\n_index.md\nmake-semaphore.md\nsemaphore.md\nsemaphorep.md\nsignal-semaphore.md\nwait-on-semaphore.md\n\nthird/ocicl/systems/bordeaux-threads-0.9.4/docs/content/threads:\nabnormal-exit-condition.md\nabnormal-exit.md\nbordeaux-thread-error.md\nclass-thread.md\ncurrent-all-threads.md\ndefault-special-bindings.md\ndestroy-thread.md\n_index.md\ninterrupt-thread.md\njoin-thread.md\nmake-thread.md\nsignal-in-thread.md\nstart-multiprocessing.md\nthread-alive-p.md\nthreadp.md\nthread-readers.md\nthread-yield.md\n\nthird/ocicl/systems/bordeaux-threads-0.9.4/docs/content/timeouts:\n_index.md\ntimeout.md\nwith-timeout.md\n\nthird/ocicl/systems/bordeaux-threads-0.9.4/site:\nindex.html\nstyle.css\n\nthird/ocicl/systems/bordeaux-threads-0.9.4/test:\nnot-implemented.lisp\npkgdcl.lisp\ntests-v1.lisp\ntests-v2.lisp\n\nthird/ocicl/systems/cffi-20250311-48eaef6:\n_00_OCICL_NAME\n_00_OCICL_VERSION\ncffi.asd\ncffi-examples.asd\ncffi-grovel.asd\ncffi-libffi.asd\ncffi-tests.asd\ncffi-toolchain.asd\ncffi-uffi-compat.asd\nCOPYRIGHT\ndoc\nexamples\ngrovel\nHEADER\nlibffi\nMakefile\nREADME.md\nscripts\nsrc\ntests\nTODO\ntoolchain\nuffi-compat\n\nthird/ocicl/systems/cffi-20250311-48eaef6/doc:\nallegro-internals.txt\ncffi-manual.texinfo\ncffi-sys-spec.texinfo\ncolorize-lisp-examples.lisp\ngendocs.sh\ngendocs_template\nMakefile\nmem-vector.txt\nshareable-vectors.txt\nstyle.css\n\nthird/ocicl/systems/cffi-20250311-48eaef6/examples:\nexamples.lisp\ngethostname.lisp\ngettimeofday.lisp\ngrovel-example.lisp\nmain-example.lisp\nmapping.lisp\npackage.lisp\nrun-examples.lisp\ntranslator-test.lisp\nwrapper-example.lisp\n\nthird/ocicl/systems/cffi-20250311-48eaef6/grovel:\nasdf.lisp\ncommon.h\ngrovel.lisp\npackage.lisp\n\nthird/ocicl/systems/cffi-20250311-48eaef6/libffi:\nfuncall.lisp\nlibffi-functions.lisp\nlibffi.lisp\nlibffi-types.lisp\ntype-descriptors.lisp\n\nthird/ocicl/systems/cffi-20250311-48eaef6/scripts:\nrelease.lisp\n\nthird/ocicl/systems/cffi-20250311-48eaef6/src:\nc2ffi\ncffi-abcl.lisp\ncffi-allegro.lisp\ncffi-clasp.lisp\ncffi-clisp.lisp\ncffi-cmucl.lisp\ncffi-corman.lisp\ncffi-ecl.lisp\ncffi-gcl.lisp\ncffi-lispworks.lisp\ncffi-mcl.lisp\ncffi-mkcl.lisp\ncffi-openmcl.lisp\ncffi-sbcl.lisp\ncffi-scl.lisp\ndarwin-frameworks.lisp\nearly-types.lisp\nenum.lisp\nfeatures.lisp\nforeign-vars.lisp\nfunctions.lisp\nlibraries.lisp\npackage.lisp\nstrings.lisp\nstructures.lisp\nsys-utils.lisp\ntypes.lisp\nutils.lisp\n\nthird/ocicl/systems/cffi-20250311-48eaef6/src/c2ffi:\nasdf.lisp\nc2ffi.lisp\ngenerator.lisp\npackage.lisp\n\nthird/ocicl/systems/cffi-20250311-48eaef6/tests:\narrays.lisp\nbindings.lisp\ncallbacks.lisp\ncompile.bat\ndefcfun.lisp\nenum.lisp\nforeign-globals.lisp\nfsbv.lisp\nfuncall.lisp\nGNUmakefile\ngrovel.lisp\ngrovel-test.h\nlibfsbv.c\nlibtest2.c\nlibtest.c\nMakefile\nmemory.lisp\nmisc.lisp\nmisc-types.lisp\npackage.lisp\nrandom-tester.lisp\nrun-tests.lisp\nstrings.lisp\nstruct.lisp\ntest-asdf.lisp\ntest-static-link.sh\nunion.lisp\n\nthird/ocicl/systems/cffi-20250311-48eaef6/toolchain:\nbundle.lisp\nc-toolchain.lisp\npackage.lisp\nstatic-link.lisp\n\nthird/ocicl/systems/cffi-20250311-48eaef6/uffi-compat:\nuffi.asd\nuffi-compat.lisp\n\nthird/ocicl/systems/chipz-20240503-6f80368:\n_00_OCICL_VERSION\nadler32.lisp\nbzip2.lisp\nchipz.asd\nconditions.lisp\nconstants.lisp\ncrc32.lisp\ndecompress.lisp\ndoc\ndstate.lisp\ngzip.lisp\ninflate.lisp\ninflate-state.lisp\nLICENSE\nNEWS\npackage.lisp\nstream-fallback.lisp\nstream.lisp\ntests.lisp\nTODO\ntypes-and-tables.lisp\nzlib.lisp\n\nthird/ocicl/systems/chipz-20240503-6f80368/doc:\nchipz-doc.txt\nindex.html\nstyle.css\n\nthird/ocicl/systems/chunga-20240919-5cd13fe:\n_00_OCICL_NAME\n_00_OCICL_VERSION\nCHANGELOG\nCHANGELOG.txt\nchunga.asd\nconditions.lisp\ndocs\ninput.lisp\nknown-words.lisp\nLICENSE\noutput.lisp\npackages.lisp\nread.lisp\nspecials.lisp\nstreams.lisp\nutil.lisp\n\nthird/ocicl/systems/chunga-20240919-5cd13fe/docs:\nindex.html\n\nthird/ocicl/systems/cl-base64-20240503-80496b7:\n_00_OCICL_VERSION\ncl-base64.asd\ncl-base64-tests.asd\nCOPYING\ndebian\ndecode.lisp\nencode.lisp\npackage.lisp\ntests.lisp\n\nthird/ocicl/systems/cl-base64-20240503-80496b7/debian:\nchangelog\ncompat\ncontrol\ncopyright\nrules\nsource\nupload.sh\nwatch\n\nthird/ocicl/systems/cl-base64-20240503-80496b7/debian/source:\nformat\n\nthird/ocicl/systems/cl-cookie-20240703-6bcb74a:\n_00_OCICL_NAME\n_00_OCICL_VERSION\ncl-cookie.asd\ncl-cookie-test.asd\nREADME.markdown\nsrc\nt\n\nthird/ocicl/systems/cl-cookie-20240703-6bcb74a/src:\ncl-cookie.lisp\n\nthird/ocicl/systems/cl-cookie-20240703-6bcb74a/t:\ncl-cookie.lisp\n\nthird/ocicl/systems/cl-fad-0.7.6:\nCHANGELOG\ncl-fad.asd\ncl-fad.system\ncorman.lisp\ndocs\nfad.lisp\nfad.test.lisp\nLICENSE\nload.lisp\nopenmcl.lisp\npackages.lisp\npackages.test.lisp\npath.lisp\nREADME\ntemporary-files.lisp\ntemporary-files.test.lisp\n\nthird/ocicl/systems/cl-fad-0.7.6/docs:\nindex.html\n\nthird/ocicl/systems/cl-interpol-2.0.7:\nalias.lisp\nCHANGELOG\ncl-interpol.asd\ndocs\npackages.lisp\nread.lisp\nREADME.md\nspecials.lisp\ntest\nutil.lisp\n\nthird/ocicl/systems/cl-interpol-2.0.7/docs:\nindex.html\n\nthird/ocicl/systems/cl-interpol-2.0.7/test:\ncreate_perl_tests.pl\npackages.lisp\nperltests\nsimple\ntests.lisp\n\nthird/ocicl/systems/cl-json-20240907-994dd38:\n_00_OCICL_NAME\n_00_OCICL_VERSION\ncl-json.asd\ncompile-cl-json.lisp\nCONTRIBUTORS\ndoc\nLICENSE\nREADME.md\nsrc\nt\ntest-cl-json.lisp\nTODO\n\nthird/ocicl/systems/cl-json-20240907-994dd38/doc:\ncl-json.html\nstyle.css\n\nthird/ocicl/systems/cl-json-20240907-994dd38/src:\ncamel-case.lisp\ncommon.lisp\ndecoder-args.lisp\ndecoder.lisp\nencoder.lisp\njson-rpc.lisp\nobjects.lisp\npackage.lisp\nutils.lisp\n\nthird/ocicl/systems/cl-json-20240907-994dd38/t:\nfail10.json\nfail11.json\nfail12.json\nfail13.json\nfail14.json\nfail15.json\nfail16.json\nfail17.json\nfail18.json\nfail19.json\nfail1.json\nfail20.json\nfail21.json\nfail22.json\nfail23.json\nfail24.json\nfail2.json\nfail3.json\nfail4.json\nfail5.json\nfail6.json\nfail7.json\nfail8.json\nfail9.json\npackage.lisp\npass1.json\npass2.json\npass3.json\ntestdecoder.lisp\ntestencoder.lisp\ntestjson.lisp\ntestmisc.lisp\n\nthird/ocicl/systems/closer-mop-20250430-8e9c882:\n_00_OCICL_NAME\n_00_OCICL_VERSION\ncloser-abcl.lisp\ncloser-allegro.lisp\ncloser-clasp.lisp\ncloser-clisp.lisp\ncloser-clozure.lisp\ncloser-cmu.lisp\ncloser-ecl.lisp\ncloser-lispworks.lisp\ncloser-mcl.lisp\ncloser-mezzano.lisp\ncloser-mop.asd\ncloser-mop-packages.lisp\ncloser-mop-shared.lisp\ncloser-mop-system.cl\ncloser-sbcl.lisp\ncloser-scl.lisp\nfeatures.lisp\nfeatures.txt\nLICENSE.md\nREADME.md\n\nthird/ocicl/systems/cl-plus-ssl-20250424-38e501f:\n_00_OCICL_NAME\n_00_OCICL_VERSION\ncl+ssl.asd\ncl+ssl.test.asd\nexamples\nindex.css\nindex.html\nLICENSE\nMakefile\nREADME.md\nsrc\nssl-verify-test.lisp\ntest\ntodo.txt\n\nthird/ocicl/systems/cl-plus-ssl-20250424-38e501f/examples:\nclient-certificates-example.lisp\nclient-certificates-example-static.lisp\nexample.lisp\n\nthird/ocicl/systems/cl-plus-ssl-20250424-38e501f/src:\nbio.lisp\nconditions.lisp\nconfig.lisp\ncontext.lisp\nffi-buffer-all.lisp\nffi-buffer-clisp.lisp\nffi-buffer.lisp\nffi.lisp\ninit.lisp\npackage.lisp\nrandom.lisp\nreload.lisp\nssl-funcall.lisp\nstreams.lisp\nverify-hostname.lisp\nx509.lisp\n\nthird/ocicl/systems/cl-plus-ssl-20250424-38e501f/test:\nalpn.lisp\nbadssl-com.lisp\nbio.lisp\ncerts\ncert-utilities.lisp\nclient-server-certificate.pem\nclient-server.lisp\nclient-server-private-key.pem\nDockerfile\ndummy.lisp\nfingerprint.lisp\npackage.lisp\nrun-for-ci.lisp\nrun-for-ci.sh\nrun-on-many-lisps-and-openssls\nsni.lisp\nvalidity-dates.lisp\nverify-hostname.lisp\nversion.lisp\n\nthird/ocicl/systems/cl-plus-ssl-20250424-38e501f/test/certs:\nCACertSigningAuthority.crt\nca.crt\nclient.crt\ngoogle_bmp.der\ngoogle.der\ngoogle_nodns.der\ngoogle_printable!.der\ngoogle_printable.der\ngoogle_teletex.der\ngoogle_universal.der\ngoogle_wildcard.der\nlocalhost.crt\nlocalhost.der\nmixed-time-formats.der\nserver+ca.crt\ntest-key-no-password.key\n\nthird/ocicl/systems/cl-plus-ssl-20250424-38e501f/test/run-on-many-lisps-and-openssls:\nopenssl-releases\nopenssl-releases.lisp\nrun-home.lisp\nrun-home.sh\nrun-on-many-lisps-and-openssls.lisp\nrun-on-server.lisp\nrun-on-server.sh\n\nthird/ocicl/systems/cl-plus-ssl-20250424-38e501f/test/run-on-many-lisps-and-openssls/openssl-releases:\nbin-fetch.sh\nbin-package.sh\nbin-publish.sh\nbuild.sh\nsrc-fetch.sh\n\nthird/ocicl/systems/cl-ppcre-20240503-80fb19d:\n_00_OCICL_VERSION\napi.lisp\nCHANGELOG\ncharmap.lisp\ncharset.lisp\nchartest.lisp\nclosures.lisp\ncl-ppcre.asd\ncl-ppcre-unicode\ncl-ppcre-unicode.asd\nconvert.lisp\ndocs\nerrors.lisp\nlexer.lisp\nLICENSE\noptimize.lisp\npackages.lisp\nparser.lisp\nREADME.md\nregex-class.lisp\nregex-class-util.lisp\nrepetition-closures.lisp\nscanner.lisp\nspecials.lisp\ntest\nutil.lisp\n\nthird/ocicl/systems/cl-ppcre-20240503-80fb19d/cl-ppcre-unicode:\npackages.lisp\nresolver.lisp\n\nthird/ocicl/systems/cl-ppcre-20240503-80fb19d/docs:\nindex.html\n\nthird/ocicl/systems/cl-ppcre-20240503-80fb19d/test:\npackages.lisp\nperltestdata\nperltestinput\nperltest.pl\nperl-tests.lisp\nsimple\ntests.lisp\nunicodetestdata\nunicode-tests.lisp\n\nthird/ocicl/systems/cl-tar-20240503-7c6e07a:\n_00_OCICL_VERSION\nCHANGELOG.md\nclpmfile\nclpmfile.lock\nLICENSE\nlicenses\nREADME.md\nscripts\nsrc\ntar.asd\ntar-cli.asd\ntar-cli-asdf.asd\ntest\nversion.lisp-expr\n\nthird/ocicl/systems/cl-tar-20240503-7c6e07a/licenses:\n40ants-doc\nadopt\nalexandria\nasdf\nasdf-release-ops\nbabel\nbobbin\ncffi\ncffi-grovel\ncffi-toolchain\nchipz\nflexi-streams\nlocal-time\nnamed-readtables\nosicat\npythonic-string-reader\nsalza2\nsbcl\nsplit-sequence\ntar-file\ntrivial-features\ntrivial-gray-streams\n\nthird/ocicl/systems/cl-tar-20240503-7c6e07a/scripts:\nbuild-release.lisp\nbuild-static-release.lisp\nci-test.lisp\ngenerate-docs.lisp\nrun-tests.lisp\n\nthird/ocicl/systems/cl-tar-20240503-7c6e07a/src:\narchive.lisp\nasdf\ncli\ncommon-extract\nconditions.lisp\ncreate\ndocs.lisp\nentry.lisp\nextract\ngnu-archive.lisp\npackage.lisp\npax-archive.lisp\nsimple-extract\nustar-archive.lisp\nutils.lisp\nv7-archive.lisp\nvalidation.lisp\n\nthird/ocicl/systems/cl-tar-20240503-7c6e07a/src/asdf:\ndependencies-license-op.lisp\npackage.lisp\nsystem.lisp\n\nthird/ocicl/systems/cl-tar-20240503-7c6e07a/src/cli:\nmain.lisp\npackage.lisp\n\nthird/ocicl/systems/cl-tar-20240503-7c6e07a/src/common-extract:\nconditions.lisp\npackage.lisp\npathname-computation.lisp\nutils.lisp\n\nthird/ocicl/systems/cl-tar-20240503-7c6e07a/src/create:\ncreate.lisp\npackage.lisp\nposix.lisp\nwindows.lisp\n\nthird/ocicl/systems/cl-tar-20240503-7c6e07a/src/extract:\nconditions.lisp\nextract.lisp\nfd-stream.lisp\nfeatures.lisp\npackage.lisp\nutils.lisp\n\nthird/ocicl/systems/cl-tar-20240503-7c6e07a/src/simple-extract:\nextract.lisp\npackage.lisp\n\nthird/ocicl/systems/cl-tar-20240503-7c6e07a/test:\ncreate\nextract\ngnu.tar\ngnu.tar.gz\nmake-test-tars.sh\npackage.lisp\npax.tar\npax.tar.gz\nread.lisp\nshared.lisp\nsimple-extract\nustar.tar\nustar.tar.gz\nv7.tar\nv7.tar.gz\nwrite.lisp\n\nthird/ocicl/systems/cl-tar-20240503-7c6e07a/test/create:\ngnu.lisp\npackage.lisp\npax.lisp\nustar.lisp\nutils.lisp\nv7.lisp\n\nthird/ocicl/systems/cl-tar-20240503-7c6e07a/test/extract:\nextract.lisp\npackage.lisp\nstress.lisp\nutils.lisp\n\nthird/ocicl/systems/cl-tar-20240503-7c6e07a/test/simple-extract:\npackage.lisp\nstress.lisp\nutils.lisp\nv7.lisp\n\nthird/ocicl/systems/cl-tar-file-20240503-0c10bc8:\n_00_OCICL_VERSION\nCHANGELOG.md\nclpmfile\nclpmfile.lock\nLICENSE\nREADME.md\nscripts\nsrc\ntar-file.asd\ntest\nversion.lisp-expr\n\nthird/ocicl/systems/cl-tar-file-20240503-0c10bc8/scripts:\nci-test.lisp\ngenerate-docs.lisp\nrun-tests.lisp\n\nthird/ocicl/systems/cl-tar-file-20240503-0c10bc8/src:\nblocked-stream.lisp\nbounded-stream.lisp\nbuffer-ops.lisp\nconditions.lisp\nconstants.lisp\ndocs.lisp\nentry.lisp\nexternal-macros.lisp\ngenerics.lisp\ngnu.lisp\nmacros.lisp\npackage.lisp\npeeking-stream.lisp\ntar-file.lisp\nustar.lisp\nutils.lisp\nv7.lisp\n\nthird/ocicl/systems/cl-tar-file-20240503-0c10bc8/test:\nblocked-stream.lisp\ngnu.tar\ngnu.tar.gz\nmake-test-tars.sh\npackage.lisp\npax.tar\npax.tar.gz\nread.lisp\nshared.lisp\nustar.tar\nustar.tar.gz\nv7.tar\nv7.tar.gz\nwrite.lisp\n\nthird/ocicl/systems/cl-unicode-20240503-07e7ff5:\n_00_OCICL_VERSION\nalias.lisp\napi.lisp\nbuild\nCHANGELOG\nclean.cmd\ncl-unicode.asd\nconditions.lisp\nderived.lisp\ndocs\nhash-tables.lisp\nlists.lisp\nmethods.lisp\npackages.lisp\nspecials.lisp\ntest\ntest-functions.lisp\nutil.lisp\n\nthird/ocicl/systems/cl-unicode-20240503-07e7ff5/build:\nchar-info.lisp\ndata\ndump.lisp\nread.lisp\nutil.lisp\n\nthird/ocicl/systems/cl-unicode-20240503-07e7ff5/build/data:\nauxiliary\nBidiMirroring.txt\nBlocks.txt\nCaseFolding.txt\nCompositionExclusions.txt\nDerivedAge.txt\nDerivedCoreProperties.txt\nidna\nJamo.txt\nNormalizationTest.txt\nPropertyAliases.txt\nPropList.txt\nREADME.txt\nScripts.txt\nSpecialCasing.txt\nUnicodeData.txt\n\nthird/ocicl/systems/cl-unicode-20240503-07e7ff5/build/data/auxiliary:\nWordBreakProperty.txt\n\nthird/ocicl/systems/cl-unicode-20240503-07e7ff5/build/data/idna:\nIdnaMappingTable.txt\nIdnaTestV2.txt\nReadMe.txt\n\nthird/ocicl/systems/cl-unicode-20240503-07e7ff5/docs:\nindex.html\n\nthird/ocicl/systems/cl-unicode-20240503-07e7ff5/test:\nderived-properties\nnormalization-forms\npackages.lisp\nproperties\nsimple\ntests.lisp\n\nthird/ocicl/systems/cl-utilities-20240503-6b4de39:\n_00_OCICL_VERSION\ncl-utilities.asd\ncollecting.lisp\ncompose.lisp\ncopy-array.lisp\ndoc\nexpt-mod.lisp\nextremum.lisp\nonce-only.lisp\npackage.lisp\npackage.sh\nread-delimited.lisp\nREADME\nREADME.md\nrotate-byte.lisp\nsplit-sequence.lisp\ntest.lisp\nwith-unique-names.lisp\n\nthird/ocicl/systems/cl-utilities-20240503-6b4de39/doc:\ncollecting.html\ncompose.html\ncopy-array.html\nexpt-mod.html\nextremum.html\nindex.html\nonce-only.html\nread-delimited.html\nrotate-byte.html\nsplit-sequence.html\nstyle.css\nwith-unique-names.html\n\nthird/ocicl/systems/copy-directory-20250106-6926cbb:\n_00_OCICL_NAME\n_00_OCICL_VERSION\ncopy-directory.asd\ncopy-directory-test.asd\nREADME.md\nsrc\nt\n\nthird/ocicl/systems/copy-directory-20250106-6926cbb/src:\ncopy-directory.lisp\n\nthird/ocicl/systems/copy-directory-20250106-6926cbb/t:\ncopy-directory.lisp\ndir\n\nthird/ocicl/systems/copy-directory-20250106-6926cbb/t/dir:\na.txt\nb.txt\n\nthird/ocicl/systems/defclass-std-20241228-6d003a5:\n_00_OCICL_NAME\n_00_OCICL_VERSION\ncircle.yml\ndefclass-std.asd\ndefclass-std-test.asd\nREADME.md\nsrc\nt\n\nthird/ocicl/systems/defclass-std-20241228-6d003a5/src:\ndefclass-std.lisp\n\nthird/ocicl/systems/defclass-std-20241228-6d003a5/t:\ndefclass-std.lisp\n\nthird/ocicl/systems/dexador-20240925-d7ac217:\n_00_OCICL_NAME\n_00_OCICL_VERSION\nbenchmark\ndexador.asd\ndexador-test.asd\ndexador-usocket.asd\nimages\nMakefile\nREADME.markdown\nsrc\nt\n\nthird/ocicl/systems/dexador-20240925-d7ac217/benchmark:\n181B.html\nbench\n\nthird/ocicl/systems/dexador-20240925-d7ac217/images:\nbenchmark.png\n\nthird/ocicl/systems/dexador-20240925-d7ac217/src:\nbackend\nbody.lisp\nconnection-cache.lisp\ndecoding-stream.lisp\ndexador.lisp\nencoding.lisp\nerror.lisp\nkeep-alive-stream.lisp\nrestarts.lisp\nutil.lisp\n\nthird/ocicl/systems/dexador-20240925-d7ac217/src/backend:\nusocket.lisp\nwinhttp.lisp\n\nthird/ocicl/systems/dexador-20240925-d7ac217/t:\nbenchmark.lisp\ndata\ndexador.lisp\nDockerfile\nnginx.conf\n\nthird/ocicl/systems/dexador-20240925-d7ac217/t/data:\nbug139.txt\nquote.txt\ntest.gz\ntest.zlib\numb.bin\n\nthird/ocicl/systems/diff-20240503-9c84bef:\n_00_OCICL_VERSION\ndiff.asd\ndiff.lisp\nLICENSE\nNEWS\npackage.lisp\npatch.lisp\nREADME\nsvndiff.lisp\ntest-files\nTODO\nvdelta.lisp\n\nthird/ocicl/systems/diff-20240503-9c84bef/test-files:\ntest-dst-1.txt\ntest-dst-2.txt\ntest-dst-3.txt\ntest-src-1.txt\ntest-src-2.txt\ntest-src-3.txt\n\nthird/ocicl/systems/doc-20250107-bad40f6:\n_00_OCICL_NAME\n_00_OCICL_VERSION\n40ants-doc.asd\n40ants-doc-full.asd\n40ants-doc-test.asd\nChangeLog.md\nCOPYING\ncss\nelisp\nfull\njs\nplayground.lisp\nqlfile\nqlfile.lock\nREADME.md\nsrc\nstatic\ntest\nTODO.org\n\nthird/ocicl/systems/doc-20250107-bad40f6/css:\nstyle.css\n\nthird/ocicl/systems/doc-20250107-bad40f6/elisp:\nedit-locative.el\ntranscribe.el\n\nthird/ocicl/systems/doc-20250107-bad40f6/full:\nargs.lisp\nbuilder\nbuilder.lisp\ncommondoc\ndefinitions.lisp\ndislocated-symbols.lisp\ndoc.lisp\nerrors.lisp\nexternal-index.lisp\ngithub.lisp\nlink.lisp\nlocatives\nmarkdown.lisp\nobject-package-impl.lisp\npage.lisp\nplugins\nrender\nrewrite.lisp\nsearch.lisp\nsource.lisp\nswank.lisp\nthemes\ntranscribe.lisp\ntutorial.lisp\nutils.lisp\nwarn.lisp\nworld.lisp\n\nthird/ocicl/systems/doc-20250107-bad40f6/full/builder:\nprinter.lisp\nvars.lisp\n\nthird/ocicl/systems/doc-20250107-bad40f6/full/commondoc:\narglist.lisp\nbuilder.lisp\nbullet.lisp\nchangelog.lisp\nformat.lisp\nhtml.lisp\nimage.lisp\nmapper.lisp\nmarkdown.lisp\npage.lisp\npiece.lisp\nreference.lisp\nsection.lisp\ntoc.lisp\ntranscribe.lisp\nutils.lisp\nxref.lisp\n\nthird/ocicl/systems/doc-20250107-bad40f6/full/locatives:\nargument.lisp\nasdf-system.lisp\nclass.lisp\ncompiler-macro.lisp\nconstant.lisp\ndefiners.lisp\ndislocated.lisp\nfunction.lisp\ngeneric-function.lisp\nglossary.lisp\ninclude.lisp\nlocative.lisp\nmacro.lisp\nmethod.lisp\npackage.lisp\nrestart.lisp\nsection.lisp\nslots.lisp\nstdout-of.lisp\nstructure-accessor.lisp\nsymbol-macro.lisp\ntype.lisp\nutils.lisp\nvariable.lisp\n\nthird/ocicl/systems/doc-20250107-bad40f6/full/plugins:\nhighlightjs.lisp\nmathjax.lisp\n\nthird/ocicl/systems/doc-20250107-bad40f6/full/render:\nargs.lisp\n\nthird/ocicl/systems/doc-20250107-bad40f6/full/themes:\napi.lisp\ndark.lisp\ndefault.lisp\ndocs.lisp\nlight.lisp\n\nthird/ocicl/systems/doc-20250107-bad40f6/js:\njquery.min.js\ntoc.min.js\n\nthird/ocicl/systems/doc-20250107-bad40f6/src:\nautodoc\nautodoc.lisp\nchangelog.lisp\nci.lisp\ncore.lisp\ndocstring.lisp\nglossary.lisp\nignored-words.lisp\nlocatives\nlocatives.lisp\nobject-package.lisp\nreference-api.lisp\nreference.lisp\nrestart.lisp\nsmall.lisp\nsource-api.lisp\n\nthird/ocicl/systems/doc-20250107-bad40f6/src/autodoc:\nsections.lisp\n\nthird/ocicl/systems/doc-20250107-bad40f6/src/locatives:\nasdf-system.lisp\nbase.lisp\ndefine-definer.lisp\n\nthird/ocicl/systems/doc-20250107-bad40f6/static:\njquery-3.5.1.js\njquery.js\nrendering.png\nrendering.skt\nrss-icon.base64\nsearch\ntoc.js\nunderscore-1.13.1.js\nunderscore.js\n\nthird/ocicl/systems/doc-20250107-bad40f6/static/rendering.skt:\nLayer~0.png\nLayer~1.png\nLayer~2.png\nProperties.plist\nQuickLook\n\nthird/ocicl/systems/doc-20250107-bad40f6/static/rendering.skt/QuickLook:\nPreview.jpg\nThumbnail.png\n\nthird/ocicl/systems/doc-20250107-bad40f6/static/search:\ndoctools.js\nlanguage_data.js\nREADME.md\nsearchindex.js\nsearchtools.js\n\nthird/ocicl/systems/doc-20250107-bad40f6/test:\ndata\nlocatives.lisp\nmarkdown.lisp\npage.lisp\ntest.lisp\ntest-transcribe.lisp\nutils.lisp\nutils-test.lisp\nxref.lisp\n\nthird/ocicl/systems/doc-20250107-bad40f6/test/data:\nbaseline\n\nthird/ocicl/systems/doc-20250107-bad40f6/test/data/baseline:\ndoctools.js\nhighlight.min.css\nhighlight.min.js\njquery.js\nlanguage_data.js\nMETADATA\nother\nreferences.json\nsearch\nsearchindex.js\nsearchtools.js\ntest\ntest.md\ntheme.css\ntoc.js\ntranscribe-source.lisp\ntranscribe-transcription.lisp\nunderscore.js\n\nthird/ocicl/systems/doc-20250107-bad40f6/test/data/baseline/other:\ntest-other\ntest-other.md\n\nthird/ocicl/systems/doc-20250107-bad40f6/test/data/baseline/other/test-other:\nindex.html\n\nthird/ocicl/systems/doc-20250107-bad40f6/test/data/baseline/search:\nindex.html\n\nthird/ocicl/systems/doc-20250107-bad40f6/test/data/baseline/test:\nindex.html\n\nthird/ocicl/systems/documentation-utils-20230511-98630dd:\n_00_OCICL_VERSION\nabout.html\ndocumentation.lisp\ndocumentation-utils.asd\nLICENSE\nmultilang-documentation-utils.asd\nmultilang.lisp\npackage.lisp\nREADME.md\ntoolkit.lisp\n\nthird/ocicl/systems/fast-http-20240503-2232fc9:\n_00_OCICL_VERSION\nbenchmark\nfast-http.asd\nfast-http-test.asd\nREADME.markdown\nsrc\nt\n\nthird/ocicl/systems/fast-http-20240503-2232fc9/benchmark:\nhttp-parser.c\n\nthird/ocicl/systems/fast-http-20240503-2232fc9/src:\nbyte-vector.lisp\nerror.lisp\nfast-http.lisp\nhttp.lisp\nmultipart-parser.lisp\nparser.lisp\nutil.lisp\n\nthird/ocicl/systems/fast-http-20240503-2232fc9/t:\nbenchmark.lisp\nbody-buffer.lisp\nfast-http.lisp\nmultipart-parser.lisp\nparser.lisp\ntest-utils.lisp\nutil.lisp\n\nthird/ocicl/systems/fast-io-20240503-a4c5ad6:\n_00_OCICL_VERSION\nfast-io.asd\nfast-io-test.asd\nLICENSE\nREADME.md\nsrc\nt\n\nthird/ocicl/systems/fast-io-20240503-a4c5ad6/src:\ngray.lisp\nio.lisp\npackage.lisp\ntypes.lisp\n\nthird/ocicl/systems/fast-io-20240503-a4c5ad6/t:\nbasic.lisp\nbenchmark-defs.lisp\nbenchmarks.lisp\ngray.lisp\npackage.lisp\ntest-values\n\nthird/ocicl/systems/flexi-streams-20240503-4951d57:\n_00_OCICL_VERSION\nascii.lisp\nCHANGELOG\ncode-pages.lisp\nconditions.lisp\ndecode.lisp\ndocs\nenc-cn-tbl.lisp\nencode.lisp\nexternal-format.lisp\nflexi-streams.asd\nflexi-streams-test.asd\nin-memory.lisp\ninput.lisp\nio.lisp\niso-8859.lisp\nkoi8-r.lisp\nlength.lisp\nlw-char-stream.lisp\nmac.lisp\nmapping.lisp\noutput.lisp\npackages.lisp\nREADME.md\nspecials.lisp\nstream.lisp\nstrings.lisp\ntest\nutil.lisp\n\nthird/ocicl/systems/flexi-streams-20240503-4951d57/docs:\nfoo.txt\nindex.html\n\nthird/ocicl/systems/flexi-streams-20240503-4951d57/test:\nhebrew_latin8_crlf.txt\nhebrew_latin8_cr.txt\nhebrew_latin8_lf.txt\nhebrew_utf8_crlf.txt\nhebrew_utf8_cr.txt\nhebrew_utf8_lf.txt\nkafka_cp1252_crlf.txt\nkafka_cp1252_cr.txt\nkafka_cp1252_lf.txt\nkafka_latin1_crlf.txt\nkafka_latin1_cr.txt\nkafka_latin1_lf.txt\nkafka_utf8_crlf.txt\nkafka_utf8_cr.txt\nkafka_utf8_lf.txt\nmac_chars_mac_crlf.txt\nmac_chars_mac_cr.txt\nmac_chars_mac_lf.txt\nmac_chars_utf8_crlf.txt\nmac_chars_utf8_cr.txt\nmac_chars_utf8_lf.txt\npackages.lisp\nREADME\nrussian_koi8r_crlf.txt\nrussian_koi8r_cr.txt\nrussian_koi8r_lf.txt\nrussian_utf8_crlf.txt\nrussian_utf8_cr.txt\nrussian_utf8_lf.txt\ntest.lisp\ntilton_ascii_crlf.txt\ntilton_ascii_cr.txt\ntilton_ascii_lf.txt\ntilton_utf8_crlf.txt\ntilton_utf8_cr.txt\ntilton_utf8_lf.txt\nunicode_demo_ucs2_cr_be.txt\nunicode_demo_ucs2_cr_le.txt\nunicode_demo_ucs2_crlf_be.txt\nunicode_demo_ucs2_crlf_le.txt\nunicode_demo_ucs2_lf_be.txt\nunicode_demo_ucs2_lf_le.txt\nunicode_demo_ucs4_cr_be.txt\nunicode_demo_ucs4_cr_le.txt\nunicode_demo_ucs4_crlf_be.txt\nunicode_demo_ucs4_crlf_le.txt\nunicode_demo_ucs4_lf_be.txt\nunicode_demo_ucs4_lf_le.txt\nunicode_demo_utf8_crlf.txt\nunicode_demo_utf8_cr.txt\nunicode_demo_utf8_lf.txt\nxjt_gbk_crlf.txt\nxjt_gbk_cr.txt\nxjt_gbk_lf.txt\n\nthird/ocicl/systems/float-features-20250422-e1202d9:\n_00_OCICL_NAME\n_00_OCICL_VERSION\nconstants.lisp\ndocs\ndocumentation.lisp\nfloat-features.asd\nfloat-features.lisp\nfloat-features-tests.asd\nLICENSE\npackage.lisp\nREADME.md\ntest-float-features.lisp\n\nthird/ocicl/systems/float-features-20250422-e1202d9/docs:\nindex.html\n\nthird/ocicl/systems/global-vars-20240503-c749f32:\n_00_OCICL_VERSION\nglobal-vars.asd\nglobal-vars.lisp\nglobal-vars-test.asd\nglobal-vars-test.lisp\nREADME.md\n\nthird/ocicl/systems/idna-20240503-bf789e6:\n_00_OCICL_VERSION\ndecode.lisp\nencode.lisp\nidna.asd\nLICENSE\npackage.lisp\nREADME.md\ntests.lisp\n\nthird/ocicl/systems/introspect-environment-20240503-69a50ac:\n_00_OCICL_VERSION\nccl.lisp\nclasp.lisp\ncmucl.lisp\ndefault.lisp\ndoc.lisp\nexpander.lisp\nintrospect-environment.asd\nintrospect-environment-test.asd\npackage.lisp\nREADME.md\nsbcl.lisp\ntest.lisp\n\nthird/ocicl/systems/iolib-20240503-396cc43:\n_00_OCICL_VERSION\nCHANGES\ndoc\nexamples\nextras\ninstall-repo.bash\niolib.asd\niolib.asdf.asd\niolib.base.asd\niolib.common-lisp.asd\niolib.conf.asd\niolib.examples.asd\nLICENCE\nREADME.md\nsrc\ntests\nversion.sexp\n\nthird/ocicl/systems/iolib-20240503-396cc43/doc:\niolib.texinfo\nlicense.texinfo\nmacros.texinfo\nMakefile\nnetworking.texinfo\nstreams.texinfo\n\nthird/ocicl/systems/iolib-20240503-396cc43/examples:\necho-server.lisp\nex1-client.lisp\nex1-server.lisp\nex2-client.lisp\nex2-server.lisp\nex3-client.lisp\nex3-server.lisp\nex4-client.lisp\nex4-server.lisp\nex5a-client.lisp\nex5b-client.lisp\nex5-server.lisp\nex6-server.lisp\nex7-buffer.lisp\nex7-server.lisp\nex8-buffer.lisp\nex8-server.lisp\ngen-tutorial\nMakefile\npackage.lisp\nREADME\ntutorial\ntutorial.tmpl\n\nthird/ocicl/systems/iolib-20240503-396cc43/extras:\nping.lisp\n\nthird/ocicl/systems/iolib-20240503-396cc43/src:\nbase\nconf\niolib\nmultiplex\nnew-cl\nos\npathnames\nsockets\nstreams\nsyscalls\n\nthird/ocicl/systems/iolib-20240503-396cc43/src/base:\nasdf.lisp\nconditions.lisp\ndebug.lisp\ndefalias.lisp\ndeffoldable.lisp\ndefobsolete.lisp\ndynamic-buffer.lisp\nmatching.lisp\npkgdcl.lisp\nreader.lisp\nreturn-star.lisp\nsequence.lisp\ntime.lisp\ntypes.lisp\n\nthird/ocicl/systems/iolib-20240503-396cc43/src/conf:\npkgdcl.lisp\nrequires.lisp\n\nthird/ocicl/systems/iolib-20240503-396cc43/src/iolib:\npkgdcl.lisp\n\nthird/ocicl/systems/iolib-20240503-396cc43/src/multiplex:\nbackend-epoll.lisp\nbackend-kqueue.lisp\nbackend-poll.lisp\nbackend-select.lisp\ndetect.lisp\nevent-loop.lisp\nfd-entry.lisp\nfd-wait.lisp\nmultiplexer.lisp\npkgdcl.lisp\nqueue.lisp\nscheduler.lisp\ntimers.lisp\nTODO\nutils.lisp\n\nthird/ocicl/systems/iolib-20240503-396cc43/src/new-cl:\nconduits.lisp\ndefinitions.lisp\ngray-streams.lisp\npkgdcl.lisp\nscl-gray-streams.lisp\ntypes.lisp\n\nthird/ocicl/systems/iolib-20240503-396cc43/src/os:\ncreate-process-unix.lisp\nffi-functions-unix.lisp\nffi-types-unix.lisp\nos-unix.lisp\npkgdcl.lisp\n\nthird/ocicl/systems/iolib-20240503-396cc43/src/pathnames:\nfile-path.lisp\nfile-path-unix.lisp\npkgdcl.lisp\n\nthird/ocicl/systems/iolib-20240503-396cc43/src/sockets:\naddress-arithmetic.lisp\naddress.lisp\naddress-predicates.lisp\nbase-sockets.lisp\nbsd.lisp\ncommon.lisp\nconditions.lisp\nconfig.lisp\ndns\ngrovel.lisp\niface.lisp\nmake-socket.lisp\nnamedb\npkgdcl.lisp\nsocket-methods.lisp\nsocket-options.lisp\nTODO\ntrivial-sockets.lisp\n\nthird/ocicl/systems/iolib-20240503-396cc43/src/sockets/dns:\ncommon.lisp\nconditions.lisp\nlookup.lisp\nmessage.lisp\nnameservers.lisp\nquery.lisp\n\nthird/ocicl/systems/iolib-20240503-396cc43/src/sockets/namedb:\netc-files.lisp\nfile-monitor.lisp\nhosts.lisp\nprotocols.lisp\nservices.lisp\n\nthird/ocicl/systems/iolib-20240503-396cc43/src/streams:\ngray\nzeta\n\nthird/ocicl/systems/iolib-20240503-396cc43/src/streams/gray:\nbuffer.lisp\nclasses.lisp\nconditions.lisp\nfd-mixin.lisp\ngray-stream-methods.lisp\nio-helpers.lisp\npkgdcl.lisp\nTODO\n\nthird/ocicl/systems/iolib-20240503-396cc43/src/streams/zeta:\nconditions.lisp\ndevice.lisp\nffi-functions-unix.lisp\nfile-unix.lisp\niobuf.lisp\npkgdcl.lisp\nstream.lisp\ntypes.lisp\n\nthird/ocicl/systems/iolib-20240503-396cc43/src/syscalls:\nconditions.lisp\ndesignators.lisp\nearly.lisp\nffi-functions-unix.lisp\nffi-types-unix.lisp\nos-conditions-unix.lisp\npkgdcl.lisp\nunix-syscall-path-strings.lisp\n\nthird/ocicl/systems/iolib-20240503-396cc43/tests:\nbase.lisp\ndata\ndefsuites.lisp\necho-server.c\nfile-paths-unix.lisp\nMakefile\nmultiplex.lisp\npkgdcl.lisp\nsockets.lisp\nstreams.lisp\n\nthird/ocicl/systems/iolib-20240503-396cc43/tests/data:\nhebrew_utf-8_crlf.txt\nhebrew_utf-8_cr.txt\nhebrew_utf-8_lf.txt\nkafka_latin-1_crlf.txt\nkafka_latin-1_cr.txt\nkafka_latin-1_lf.txt\nkafka_utf-8_crlf.txt\nkafka_utf-8_cr.txt\nkafka_utf-8_lf.txt\nrussian_utf-8_crlf.txt\nrussian_utf-8_cr.txt\nrussian_utf-8_lf.txt\ntilton_ascii_crlf.txt\ntilton_ascii_cr.txt\ntilton_ascii_lf.txt\ntilton_utf-8_crlf.txt\ntilton_utf-8_cr.txt\ntilton_utf-8_lf.txt\nunicode_demo_utf-8_crlf.txt\nunicode_demo_utf-8_cr.txt\nunicode_demo_utf-8_lf.txt\n\nthird/ocicl/systems/iterate-20250224-26cf129:\n_00_OCICL_NAME\n_00_OCICL_VERSION\nbin\nChangelog.md\nclisp-test.lisp\ndoc\niterate.asd\niterate.lisp\niterate-test.lisp\nMakefile\npackage.lisp\nREADME.md\ntest.fas\ntest.lib\ntest.lis\ntest.lisp\n\nthird/ocicl/systems/iterate-20250224-26cf129/bin:\nrelease.sh\n\nthird/ocicl/systems/iterate-20250224-26cf129/doc:\nexamples\ngendocs.sh\ngendocs_template\niterate.texinfo\nMakefile\nstyle.css\ntex\n\nthird/ocicl/systems/iterate-20250224-26cf129/doc/examples:\niterate-pg.lisp\n\nthird/ocicl/systems/iterate-20250224-26cf129/doc/tex:\naimemo.sty\nGNUmakefile\niterate-bare.pdf\niterate-bare.tex\niterate-manual.pdf\niterate-manual.tex\n\nthird/ocicl/systems/jzon-20250127-9ef348a:\n_00_OCICL_NAME\n_00_OCICL_VERSION\nCHANGELOG.md\nJSONTestSuite\nLICENSE\nREADME.md\nsrc\ntest\ntest.bat\ntest.sh\n\nthird/ocicl/systems/jzon-20250127-9ef348a/JSONTestSuite:\njson-test-suite-runner.lisp\njzon-parsing.lisp\nmake.bat\nREADME.md\nresults\ntest.bat\ntest_parsing\n\nthird/ocicl/systems/jzon-20250127-9ef348a/JSONTestSuite/results:\ncl-json.log\njonathan.log\njson-streams.log\njsown.log\njzon.log\nshasht.log\nyason.log\n\nthird/ocicl/systems/jzon-20250127-9ef348a/JSONTestSuite/test_parsing:\ni_number_double_huge_neg_exp.json\ni_number_huge_exp.json\ni_number_neg_int_huge_exp.json\ni_number_pos_double_huge_exp.json\ni_number_real_neg_overflow.json\ni_number_real_pos_overflow.json\ni_number_real_underflow.json\ni_number_too_big_neg_int.json\ni_number_too_big_pos_int.json\ni_number_very_big_negative_int.json\ni_object_key_lone_2nd_surrogate.json\ni_string_1st_surrogate_but_2nd_missing.json\ni_string_1st_valid_surrogate_2nd_invalid.json\ni_string_incomplete_surrogate_and_escape_valid.json\ni_string_incomplete_surrogate_pair.json\ni_string_incomplete_surrogates_escape_valid.json\ni_string_invalid_lonely_surrogate.json\ni_string_invalid_surrogate.json\ni_string_invalid_utf-8.json\ni_string_inverted_surrogates_U+1D11E.json\ni_string_iso_latin_1.json\ni_string_lone_second_surrogate.json\ni_string_lone_utf8_continuation_byte.json\ni_string_not_in_unicode_range.json\ni_string_overlong_sequence_2_bytes.json\ni_string_overlong_sequence_6_bytes.json\ni_string_overlong_sequence_6_bytes_null.json\ni_string_truncated-utf-8.json\ni_string_utf16BE_no_BOM.json\ni_string_utf16LE_no_BOM.json\ni_string_UTF-16LE_with_BOM.json\ni_string_UTF-8_invalid_sequence.json\ni_string_UTF8_surrogate_U+D800.json\ni_structure_500_nested_arrays.json\ni_structure_UTF-8_BOM_empty_object.json\nn_array_1_true_without_comma.json\nn_array_a_invalid_utf8.json\nn_array_colon_instead_of_comma.json\nn_array_comma_after_close.json\nn_array_comma_and_number.json\nn_array_double_comma.json\nn_array_double_extra_comma.json\nn_array_extra_close.json\nn_array_extra_comma.json\nn_array_incomplete_invalid_value.json\nn_array_incomplete.json\nn_array_inner_array_no_comma.json\nn_array_invalid_utf8.json\nn_array_items_separated_by_semicolon.json\nn_array_just_comma.json\nn_array_just_minus.json\nn_array_missing_value.json\nn_array_newlines_unclosed.json\nn_array_number_and_comma.json\nn_array_number_and_several_commas.json\nn_array_spaces_vertical_tab_formfeed.json\nn_array_star_inside.json\nn_array_unclosed.json\nn_array_unclosed_trailing_comma.json\nn_array_unclosed_with_new_lines.json\nn_array_unclosed_with_object_inside.json\nn_incomplete_false.json\nn_incomplete_null.json\nn_incomplete_true.json\nn_multidigit_number_then_00.json\nn_number_0.1.2.json\nn_number_-01.json\nn_number_0.3e+.json\nn_number_0.3e.json\nn_number_0_capital_E+.json\nn_number_0_capital_E.json\nn_number_0.e1.json\nn_number_0e+.json\nn_number_0e.json\nn_number_1_000.json\nn_number_1.0e+.json\nn_number_1.0e-.json\nn_number_1.0e.json\nn_number_-1.0..json\nn_number_1eE2.json\nn_number_+1.json\nn_number_.-1.json\nn_number_2.e+3.json\nn_number_2.e-3.json\nn_number_2.e3.json\nn_number_.2e-3.json\nn_number_-2..json\nn_number_9.e+.json\nn_number_expression.json\nn_number_hex_1_digit.json\nn_number_hex_2_digits.json\nn_number_infinity.json\nn_number_+Inf.json\nn_number_Inf.json\nn_number_invalid+-.json\nn_number_invalid-negative-real.json\nn_number_invalid-utf-8-in-bigger-int.json\nn_number_invalid-utf-8-in-exponent.json\nn_number_invalid-utf-8-in-int.json\nn_number_++.json\nn_number_minus_infinity.json\nn_number_minus_sign_with_trailing_garbage.json\nn_number_minus_space_1.json\nn_number_-NaN.json\nn_number_NaN.json\nn_number_neg_int_starting_with_zero.json\nn_number_neg_real_without_int_part.json\nn_number_neg_with_garbage_at_end.json\nn_number_real_garbage_after_e.json\nn_number_real_with_invalid_utf8_after_e.json\nn_number_real_without_fractional_part.json\nn_number_starting_with_dot.json\nn_number_U+FF11_fullwidth_digit_one.json\nn_number_with_alpha_char.json\nn_number_with_alpha.json\nn_number_with_leading_zero.json\nn_object_bad_value.json\nn_object_bracket_key.json\nn_object_comma_instead_of_colon.json\nn_object_double_colon.json\nn_object_emoji.json\nn_object_garbage_at_end.json\nn_object_key_with_single_quotes.json\nn_object_lone_continuation_byte_in_key_and_trailing_comma.json\nn_object_missing_colon.json\nn_object_missing_key.json\nn_object_missing_semicolon.json\nn_object_missing_value.json\nn_object_no-colon.json\nn_object_non_string_key_but_huge_number_instead.json\nn_object_non_string_key.json\nn_object_repeated_null_null.json\nn_object_several_trailing_commas.json\nn_object_single_quote.json\nn_object_trailing_comma.json\nn_object_trailing_comment.json\nn_object_trailing_comment_open.json\nn_object_trailing_comment_slash_open_incomplete.json\nn_object_trailing_comment_slash_open.json\nn_object_two_commas_in_a_row.json\nn_object_unquoted_key.json\nn_object_unterminated-value.json\nn_object_with_single_string.json\nn_object_with_trailing_garbage.json\nn_single_space.json\nn_string_1_surrogate_then_escape.json\nn_string_1_surrogate_then_escape_u1.json\nn_string_1_surrogate_then_escape_u1x.json\nn_string_1_surrogate_then_escape_u.json\nn_string_accentuated_char_no_quotes.json\nn_string_backslash_00.json\nn_string_escaped_backslash_bad.json\nn_string_escaped_ctrl_char_tab.json\nn_string_escaped_emoji.json\nn_string_escape_x.json\nn_string_incomplete_escaped_character.json\nn_string_incomplete_escape.json\nn_string_incomplete_surrogate_escape_invalid.json\nn_string_incomplete_surrogate.json\nn_string_invalid_backslash_esc.json\nn_string_invalid_unicode_escape.json\nn_string_invalid_utf8_after_escape.json\nn_string_invalid-utf-8-in-escape.json\nn_string_leading_uescaped_thinspace.json\nn_string_no_quotes_with_bad_escape.json\nn_string_single_doublequote.json\nn_string_single_quote.json\nn_string_single_string_no_double_quotes.json\nn_string_start_escape_unclosed.json\nn_string_unescaped_ctrl_char.json\nn_string_unescaped_newline.json\nn_string_unescaped_tab.json\nn_string_unicode_CapitalU.json\nn_string_with_trailing_garbage.json\nn_structure_100000_opening_arrays.json\nn_structure_angle_bracket_..json\nn_structure_angle_bracket_null.json\nn_structure_array_trailing_garbage.json\nn_structure_array_with_extra_array_close.json\nn_structure_array_with_unclosed_string.json\nn_structure_ascii-unicode-identifier.json\nn_structure_capitalized_True.json\nn_structure_close_unopened_array.json\nn_structure_comma_instead_of_closing_brace.json\nn_structure_double_array.json\nn_structure_end_array.json\nn_structure_incomplete_UTF8_BOM.json\nn_structure_lone-invalid-utf-8.json\nn_structure_lone-open-bracket.json\nn_structure_no_data.json\nn_structure_null-byte-outside-string.json\nn_structure_number_with_trailing_garbage.json\nn_structure_object_followed_by_closing_object.json\nn_structure_object_unclosed_no_value.json\nn_structure_object_with_comment.json\nn_structure_object_with_trailing_garbage.json\nn_structure_open_array_apostrophe.json\nn_structure_open_array_comma.json\nn_structure_open_array_object.json\nn_structure_open_array_open_object.json\nn_structure_open_array_open_string.json\nn_structure_open_array_string.json\nn_structure_open_object_close_array.json\nn_structure_open_object_comma.json\nn_structure_open_object.json\nn_structure_open_object_open_array.json\nn_structure_open_object_open_string.json\nn_structure_open_object_string_with_apostrophes.json\nn_structure_open_open.json\nn_structure_single_eacute.json\nn_structure_single_star.json\nn_structure_trailing_#.json\nn_structure_U+2060_word_joined.json\nn_structure_uescaped_LF_before_string.json\nn_structure_unclosed_array.json\nn_structure_unclosed_array_partial_null.json\nn_structure_unclosed_array_unfinished_false.json\nn_structure_unclosed_array_unfinished_true.json\nn_structure_unclosed_object.json\nn_structure_unicode-identifier.json\nn_structure_UTF8_BOM_no_data.json\nn_structure_whitespace_formfeed.json\nn_structure_whitespace_U+2060_word_joiner.json\ny_array_arraysWithSpaces.json\ny_array_empty.json\ny_array_empty-string.json\ny_array_ending_with_newline.json\ny_array_false.json\ny_array_heterogeneous.json\ny_array_null.json\ny_array_with_1_and_newline.json\ny_array_with_leading_space.json\ny_array_with_several_null.json\ny_array_with_trailing_space.json\ny_number_0e+1.json\ny_number_0e1.json\ny_number_after_space.json\ny_number_double_close_to_zero.json\ny_number_int_with_exp.json\ny_number.json\ny_number_minus_zero.json\ny_number_negative_int.json\ny_number_negative_one.json\ny_number_negative_zero.json\ny_number_real_capital_e.json\ny_number_real_capital_e_neg_exp.json\ny_number_real_capital_e_pos_exp.json\ny_number_real_exponent.json\ny_number_real_fraction_exponent.json\ny_number_real_neg_exp.json\ny_number_real_pos_exponent.json\ny_number_simple_int.json\ny_number_simple_real.json\ny_object_basic.json\ny_object_duplicated_key_and_value.json\ny_object_duplicated_key.json\ny_object_empty.json\ny_object_empty_key.json\ny_object_escaped_null_in_key.json\ny_object_extreme_numbers.json\ny_object.json\ny_object_long_strings.json\ny_object_simple.json\ny_object_string_unicode.json\ny_object_with_newlines.json\ny_string_1_2_3_bytes_UTF-8_sequences.json\ny_string_accepted_surrogate_pair.json\ny_string_accepted_surrogate_pairs.json\ny_string_allowed_escapes.json\ny_string_backslash_and_u_escaped_zero.json\ny_string_backslash_doublequotes.json\ny_string_comments.json\ny_string_double_escape_a.json\ny_string_double_escape_n.json\ny_string_escaped_control_character.json\ny_string_escaped_noncharacter.json\ny_string_in_array.json\ny_string_in_array_with_leading_space.json\ny_string_last_surrogates_1_and_2.json\ny_string_nbsp_uescaped.json\ny_string_nonCharacterInUTF-8_U+10FFFF.json\ny_string_nonCharacterInUTF-8_U+FFFF.json\ny_string_null_escape.json\ny_string_one-byte-utf-8.json\ny_string_pi.json\ny_string_reservedCharacterInUTF-8_U+1BFFF.json\ny_string_simple_ascii.json\ny_string_space.json\ny_string_surrogates_U+1D11E_MUSICAL_SYMBOL_G_CLEF.json\ny_string_three-byte-utf-8.json\ny_string_two-byte-utf-8.json\ny_string_u+2028_line_sep.json\ny_string_u+2029_par_sep.json\ny_string_uescaped_newline.json\ny_string_uEscape.json\ny_string_unescaped_char_delete.json\ny_string_unicode_2.json\ny_string_unicodeEscapedBackslash.json\ny_string_unicode_escaped_double_quote.json\ny_string_unicode.json\ny_string_unicode_U+10FFFE_nonchar.json\ny_string_unicode_U+1FFFE_nonchar.json\ny_string_unicode_U+200B_ZERO_WIDTH_SPACE.json\ny_string_unicode_U+2064_invisible_plus.json\ny_string_unicode_U+FDD0_nonchar.json\ny_string_unicode_U+FFFE_nonchar.json\ny_string_utf8.json\ny_string_with_del_character.json\ny_structure_lonely_false.json\ny_structure_lonely_int.json\ny_structure_lonely_negative_real.json\ny_structure_lonely_null.json\ny_structure_lonely_string.json\ny_structure_lonely_true.json\ny_structure_string_empty.json\ny_structure_trailing_newline.json\ny_structure_true_in_array.json\ny_structure_whitespace_array.json\n\nthird/ocicl/systems/jzon-20250127-9ef348a/src:\ncom.inuoe.jzon.asd\neisel-lemire.lisp\njzon.lisp\nratio-to-double.lisp\nschubfach.lisp\n\nthird/ocicl/systems/jzon-20250127-9ef348a/test:\ncom.inuoe.jzon-tests.asd\njzon-tests.lisp\n\nthird/ocicl/systems/lisp-namespace-20240503-699fccb:\n_00_OCICL_VERSION\ncircle.yml\nEXAMPLE.org\nlisp-namespace.asd\nlisp-namespace.test.asd\nREADME.org\nsrc\nt\ntestscr.ros\n\nthird/ocicl/systems/lisp-namespace-20240503-699fccb/src:\nnamespace-let.lisp\nnamespace.lisp\npackage.lisp\n\nthird/ocicl/systems/lisp-namespace-20240503-699fccb/t:\npackage.lisp\n\nthird/ocicl/systems/local-time-20250427-fea5b15:\n_00_OCICL_NAME\n_00_OCICL_VERSION\ncl-postgres+local-time.asd\nCOPYING\nCREDITS\ndoc\nINSTALL\nlocal-time.asd\nREADME\nsrc\ntest\nTODO\nzoneinfo\n\nthird/ocicl/systems/local-time-20250427-fea5b15/doc:\ngendocs.sh\ngendocs_template\nlocal-time.texinfo\nMakefile\nstyle.css\n\nthird/ocicl/systems/local-time-20250427-fea5b15/src:\nintegration\nlocal-time.lisp\npackage.lisp\n\nthird/ocicl/systems/local-time-20250427-fea5b15/src/integration:\ncl-postgres.lisp\n\nthird/ocicl/systems/local-time-20250427-fea5b15/test:\nbenchmarks.lisp\ncomparison.lisp\nformatting.lisp\npackage.lisp\nparsing.lisp\nsimple.lisp\ntimezone.lisp\n\nthird/ocicl/systems/local-time-20250427-fea5b15/zoneinfo:\nAfrica\nAmerica\nAntarctica\nArctic\nAsia\nAtlantic\nAustralia\nBrazil\nCanada\nCET\nChile\nCST6CDT\nCuba\nEET\nEgypt\nEire\nEST\nEST5EDT\nEtc\nEurope\nFactory\nGB\nGB-Eire\nGMT\nGMT+0\nGMT-0\nGMT0\nGreenwich\nHongkong\nHST\nIceland\nIndian\nIran\niso3166.tab\nIsrael\nJamaica\nJapan\nKwajalein\nleapseconds\nleap-seconds.list\nLibya\nlocaltime\nMET\nMexico\nMST\nMST7MDT\nNavajo\nNZ\nNZ-CHAT\nPacific\nPoland\nPortugal\nposixrules\nPRC\nPST8PDT\nright\nROC\nROK\nSingapore\nSystemV\nTurkey\ntzdata.zi\nUCT\nUniversal\nUS\nUTC\nWET\nW-SU\nzone1970.tab\nzonenow.tab\nzone.tab\nZulu\n\nthird/ocicl/systems/local-time-20250427-fea5b15/zoneinfo/Africa:\nAbidjan\nAccra\nAddis_Ababa\nAlgiers\nAsmara\nAsmera\nBamako\nBangui\nBanjul\nBissau\nBlantyre\nBrazzaville\nBujumbura\nCairo\nCasablanca\nCeuta\nConakry\nDakar\nDar_es_Salaam\nDjibouti\nDouala\nEl_Aaiun\nFreetown\nGaborone\nHarare\nJohannesburg\nJuba\nKampala\nKhartoum\nKigali\nKinshasa\nLagos\nLibreville\nLome\nLuanda\nLubumbashi\nLusaka\nMalabo\nMaputo\nMaseru\nMbabane\nMogadishu\nMonrovia\nNairobi\nNdjamena\nNiamey\nNouakchott\nOuagadougou\nPorto-Novo\nSao_Tome\nTimbuktu\nTripoli\nTunis\nWindhoek\n\nthird/ocicl/systems/local-time-20250427-fea5b15/zoneinfo/America:\nAdak\nAnchorage\nAnguilla\nAntigua\nAraguaina\nArgentina\nAruba\nAsuncion\nAtikokan\nAtka\nBahia\nBahia_Banderas\nBarbados\nBelem\nBelize\nBlanc-Sablon\nBoa_Vista\nBogota\nBoise\nBuenos_Aires\nCambridge_Bay\nCampo_Grande\nCancun\nCaracas\nCatamarca\nCayenne\nCayman\nChicago\nChihuahua\nCiudad_Juarez\nCoral_Harbour\nCordoba\nCosta_Rica\nCreston\nCuiaba\nCuracao\nDanmarkshavn\nDawson\nDawson_Creek\nDenver\nDetroit\nDominica\nEdmonton\nEirunepe\nEl_Salvador\nEnsenada\nFortaleza\nFort_Nelson\nFort_Wayne\nGlace_Bay\nGodthab\nGoose_Bay\nGrand_Turk\nGrenada\nGuadeloupe\nGuatemala\nGuayaquil\nGuyana\nHalifax\nHavana\nHermosillo\nIndiana\nIndianapolis\nInuvik\nIqaluit\nJamaica\nJujuy\nJuneau\nKentucky\nKnox_IN\nKralendijk\nLa_Paz\nLima\nLos_Angeles\nLouisville\nLower_Princes\nMaceio\nManagua\nManaus\nMarigot\nMartinique\nMatamoros\nMazatlan\nMendoza\nMenominee\nMerida\nMetlakatla\nMexico_City\nMiquelon\nMoncton\nMonterrey\nMontevideo\nMontreal\nMontserrat\nNassau\nNew_York\nNipigon\nNome\nNoronha\nNorth_Dakota\nNuuk\nOjinaga\nPanama\nPangnirtung\nParamaribo\nPhoenix\nPort-au-Prince\nPorto_Acre\nPort_of_Spain\nPorto_Velho\nPuerto_Rico\nPunta_Arenas\nRainy_River\nRankin_Inlet\nRecife\nRegina\nResolute\nRio_Branco\nRosario\nSanta_Isabel\nSantarem\nSantiago\nSanto_Domingo\nSao_Paulo\nScoresbysund\nShiprock\nSitka\nSt_Barthelemy\nSt_Johns\nSt_Kitts\nSt_Lucia\nSt_Thomas\nSt_Vincent\nSwift_Current\nTegucigalpa\nThule\nThunder_Bay\nTijuana\nToronto\nTortola\nVancouver\nVirgin\nWhitehorse\nWinnipeg\nYakutat\nYellowknife\n\nthird/ocicl/systems/local-time-20250427-fea5b15/zoneinfo/America/Argentina:\nBuenos_Aires\nCatamarca\nComodRivadavia\nCordoba\nJujuy\nLa_Rioja\nMendoza\nRio_Gallegos\nSalta\nSan_Juan\nSan_Luis\nTucuman\nUshuaia\n\nthird/ocicl/systems/local-time-20250427-fea5b15/zoneinfo/America/Indiana:\nIndianapolis\nKnox\nMarengo\nPetersburg\nTell_City\nVevay\nVincennes\nWinamac\n\nthird/ocicl/systems/local-time-20250427-fea5b15/zoneinfo/America/Kentucky:\nLouisville\nMonticello\n\nthird/ocicl/systems/local-time-20250427-fea5b15/zoneinfo/America/North_Dakota:\nBeulah\nCenter\nNew_Salem\n\nthird/ocicl/systems/local-time-20250427-fea5b15/zoneinfo/Antarctica:\nCasey\nDavis\nDumontDUrville\nMacquarie\nMawson\nMcMurdo\nPalmer\nRothera\nSouth_Pole\nSyowa\nTroll\nVostok\n\nthird/ocicl/systems/local-time-20250427-fea5b15/zoneinfo/Arctic:\nLongyearbyen\n\nthird/ocicl/systems/local-time-20250427-fea5b15/zoneinfo/Asia:\nAden\nAlmaty\nAmman\nAnadyr\nAqtau\nAqtobe\nAshgabat\nAshkhabad\nAtyrau\nBaghdad\nBahrain\nBaku\nBangkok\nBarnaul\nBeirut\nBishkek\nBrunei\nCalcutta\nChita\nChoibalsan\nChongqing\nChungking\nColombo\nDacca\nDamascus\nDhaka\nDili\nDubai\nDushanbe\nFamagusta\nGaza\nHarbin\nHebron\nHo_Chi_Minh\nHong_Kong\nHovd\nIrkutsk\nIstanbul\nJakarta\nJayapura\nJerusalem\nKabul\nKamchatka\nKarachi\nKashgar\nKathmandu\nKatmandu\nKhandyga\nKolkata\nKrasnoyarsk\nKuala_Lumpur\nKuching\nKuwait\nMacao\nMacau\nMagadan\nMakassar\nManila\nMuscat\nNicosia\nNovokuznetsk\nNovosibirsk\nOmsk\nOral\nPhnom_Penh\nPontianak\nPyongyang\nQatar\nQostanay\nQyzylorda\nRangoon\nRiyadh\nSaigon\nSakhalin\nSamarkand\nSeoul\nShanghai\nSingapore\nSrednekolymsk\nTaipei\nTashkent\nTbilisi\nTehran\nTel_Aviv\nThimbu\nThimphu\nTokyo\nTomsk\nUjung_Pandang\nUlaanbaatar\nUlan_Bator\nUrumqi\nUst-Nera\nVientiane\nVladivostok\nYakutsk\nYangon\nYekaterinburg\nYerevan\n\nthird/ocicl/systems/local-time-20250427-fea5b15/zoneinfo/Atlantic:\nAzores\nBermuda\nCanary\nCape_Verde\nFaeroe\nFaroe\nJan_Mayen\nMadeira\nReykjavik\nSouth_Georgia\nStanley\nSt_Helena\n\nthird/ocicl/systems/local-time-20250427-fea5b15/zoneinfo/Australia:\nACT\nAdelaide\nBrisbane\nBroken_Hill\nCanberra\nCurrie\nDarwin\nEucla\nHobart\nLHI\nLindeman\nLord_Howe\nMelbourne\nNorth\nNSW\nPerth\nQueensland\nSouth\nSydney\nTasmania\nVictoria\nWest\nYancowinna\n\nthird/ocicl/systems/local-time-20250427-fea5b15/zoneinfo/Brazil:\nAcre\nDeNoronha\nEast\nWest\n\nthird/ocicl/systems/local-time-20250427-fea5b15/zoneinfo/Canada:\nAtlantic\nCentral\nEastern\nMountain\nNewfoundland\nPacific\nSaskatchewan\nYukon\n\nthird/ocicl/systems/local-time-20250427-fea5b15/zoneinfo/Chile:\nContinental\nEasterIsland\n\nthird/ocicl/systems/local-time-20250427-fea5b15/zoneinfo/Etc:\nGMT\nGMT+0\nGMT-0\nGMT0\nGMT+1\nGMT-1\nGMT+10\nGMT-10\nGMT+11\nGMT-11\nGMT+12\nGMT-12\nGMT-13\nGMT-14\nGMT+2\nGMT-2\nGMT+3\nGMT-3\nGMT+4\nGMT-4\nGMT+5\nGMT-5\nGMT+6\nGMT-6\nGMT+7\nGMT-7\nGMT+8\nGMT-8\nGMT+9\nGMT-9\nGreenwich\nUCT\nUniversal\nUTC\nZulu\n\nthird/ocicl/systems/local-time-20250427-fea5b15/zoneinfo/Europe:\nAmsterdam\nAndorra\nAstrakhan\nAthens\nBelfast\nBelgrade\nBerlin\nBratislava\nBrussels\nBucharest\nBudapest\nBusingen\nChisinau\nCopenhagen\nDublin\nGibraltar\nGuernsey\nHelsinki\nIsle_of_Man\nIstanbul\nJersey\nKaliningrad\nKiev\nKirov\nKyiv\nLisbon\nLjubljana\nLondon\nLuxembourg\nMadrid\nMalta\nMariehamn\nMinsk\nMonaco\nMoscow\nNicosia\nOslo\nParis\nPodgorica\nPrague\nRiga\nRome\nSamara\nSan_Marino\nSarajevo\nSaratov\nSimferopol\nSkopje\nSofia\nStockholm\nTallinn\nTirane\nTiraspol\nUlyanovsk\nUzhgorod\nVaduz\nVatican\nVienna\nVilnius\nVolgograd\nWarsaw\nZagreb\nZaporozhye\nZurich\n\nthird/ocicl/systems/local-time-20250427-fea5b15/zoneinfo/Indian:\nAntananarivo\nChagos\nChristmas\nCocos\nComoro\nKerguelen\nMahe\nMaldives\nMauritius\nMayotte\nReunion\n\nthird/ocicl/systems/local-time-20250427-fea5b15/zoneinfo/Mexico:\nBajaNorte\nBajaSur\nGeneral\n\nthird/ocicl/systems/local-time-20250427-fea5b15/zoneinfo/Pacific:\nApia\nAuckland\nBougainville\nChatham\nChuuk\nEaster\nEfate\nEnderbury\nFakaofo\nFiji\nFunafuti\nGalapagos\nGambier\nGuadalcanal\nGuam\nHonolulu\nJohnston\nKanton\nKiritimati\nKosrae\nKwajalein\nMajuro\nMarquesas\nMidway\nNauru\nNiue\nNorfolk\nNoumea\nPago_Pago\nPalau\nPitcairn\nPohnpei\nPonape\nPort_Moresby\nRarotonga\nSaipan\nSamoa\nTahiti\nTarawa\nTongatapu\nTruk\nWake\nWallis\nYap\n\nthird/ocicl/systems/local-time-20250427-fea5b15/zoneinfo/right:\nAfrica\nAmerica\nAntarctica\nArctic\nAsia\nAtlantic\nAustralia\nBrazil\nCanada\nCET\nChile\nCST6CDT\nCuba\nEET\nEgypt\nEire\nEST\nEST5EDT\nEtc\nEurope\nFactory\nGB\nGB-Eire\nGMT\nGMT+0\nGMT-0\nGMT0\nGreenwich\nHongkong\nHST\nIceland\nIndian\nIran\nIsrael\nJamaica\nJapan\nKwajalein\nLibya\nMET\nMexico\nMST\nMST7MDT\nNavajo\nNZ\nNZ-CHAT\nPacific\nPoland\nPortugal\nPRC\nPST8PDT\nROC\nROK\nSingapore\nTurkey\nUCT\nUniversal\nUS\nUTC\nWET\nW-SU\nZulu\n\nthird/ocicl/systems/local-time-20250427-fea5b15/zoneinfo/right/Africa:\nAbidjan\nAccra\nAddis_Ababa\nAlgiers\nAsmara\nAsmera\nBamako\nBangui\nBanjul\nBissau\nBlantyre\nBrazzaville\nBujumbura\nCairo\nCasablanca\nCeuta\nConakry\nDakar\nDar_es_Salaam\nDjibouti\nDouala\nEl_Aaiun\nFreetown\nGaborone\nHarare\nJohannesburg\nJuba\nKampala\nKhartoum\nKigali\nKinshasa\nLagos\nLibreville\nLome\nLuanda\nLubumbashi\nLusaka\nMalabo\nMaputo\nMaseru\nMbabane\nMogadishu\nMonrovia\nNairobi\nNdjamena\nNiamey\nNouakchott\nOuagadougou\nPorto-Novo\nSao_Tome\nTimbuktu\nTripoli\nTunis\nWindhoek\n\nthird/ocicl/systems/local-time-20250427-fea5b15/zoneinfo/right/America:\nAdak\nAnchorage\nAnguilla\nAntigua\nAraguaina\nArgentina\nAruba\nAsuncion\nAtikokan\nAtka\nBahia\nBahia_Banderas\nBarbados\nBelem\nBelize\nBlanc-Sablon\nBoa_Vista\nBogota\nBoise\nBuenos_Aires\nCambridge_Bay\nCampo_Grande\nCancun\nCaracas\nCatamarca\nCayenne\nCayman\nChicago\nChihuahua\nCiudad_Juarez\nCoral_Harbour\nCordoba\nCosta_Rica\nCreston\nCuiaba\nCuracao\nDanmarkshavn\nDawson\nDawson_Creek\nDenver\nDetroit\nDominica\nEdmonton\nEirunepe\nEl_Salvador\nEnsenada\nFortaleza\nFort_Nelson\nFort_Wayne\nGlace_Bay\nGodthab\nGoose_Bay\nGrand_Turk\nGrenada\nGuadeloupe\nGuatemala\nGuayaquil\nGuyana\nHalifax\nHavana\nHermosillo\nIndiana\nIndianapolis\nInuvik\nIqaluit\nJamaica\nJujuy\nJuneau\nKentucky\nKnox_IN\nKralendijk\nLa_Paz\nLima\nLos_Angeles\nLouisville\nLower_Princes\nMaceio\nManagua\nManaus\nMarigot\nMartinique\nMatamoros\nMazatlan\nMendoza\nMenominee\nMerida\nMetlakatla\nMexico_City\nMiquelon\nMoncton\nMonterrey\nMontevideo\nMontreal\nMontserrat\nNassau\nNew_York\nNipigon\nNome\nNoronha\nNorth_Dakota\nNuuk\nOjinaga\nPanama\nPangnirtung\nParamaribo\nPhoenix\nPort-au-Prince\nPorto_Acre\nPort_of_Spain\nPorto_Velho\nPuerto_Rico\nPunta_Arenas\nRainy_River\nRankin_Inlet\nRecife\nRegina\nResolute\nRio_Branco\nRosario\nSanta_Isabel\nSantarem\nSantiago\nSanto_Domingo\nSao_Paulo\nScoresbysund\nShiprock\nSitka\nSt_Barthelemy\nSt_Johns\nSt_Kitts\nSt_Lucia\nSt_Thomas\nSt_Vincent\nSwift_Current\nTegucigalpa\nThule\nThunder_Bay\nTijuana\nToronto\nTortola\nVancouver\nVirgin\nWhitehorse\nWinnipeg\nYakutat\nYellowknife\n\nthird/ocicl/systems/local-time-20250427-fea5b15/zoneinfo/right/America/Argentina:\nBuenos_Aires\nCatamarca\nComodRivadavia\nCordoba\nJujuy\nLa_Rioja\nMendoza\nRio_Gallegos\nSalta\nSan_Juan\nSan_Luis\nTucuman\nUshuaia\n\nthird/ocicl/systems/local-time-20250427-fea5b15/zoneinfo/right/America/Indiana:\nIndianapolis\nKnox\nMarengo\nPetersburg\nTell_City\nVevay\nVincennes\nWinamac\n\nthird/ocicl/systems/local-time-20250427-fea5b15/zoneinfo/right/America/Kentucky:\nLouisville\nMonticello\n\nthird/ocicl/systems/local-time-20250427-fea5b15/zoneinfo/right/America/North_Dakota:\nBeulah\nCenter\nNew_Salem\n\nthird/ocicl/systems/local-time-20250427-fea5b15/zoneinfo/right/Antarctica:\nCasey\nDavis\nDumontDUrville\nMacquarie\nMawson\nMcMurdo\nPalmer\nRothera\nSouth_Pole\nSyowa\nTroll\nVostok\n\nthird/ocicl/systems/local-time-20250427-fea5b15/zoneinfo/right/Arctic:\nLongyearbyen\n\nthird/ocicl/systems/local-time-20250427-fea5b15/zoneinfo/right/Asia:\nAden\nAlmaty\nAmman\nAnadyr\nAqtau\nAqtobe\nAshgabat\nAshkhabad\nAtyrau\nBaghdad\nBahrain\nBaku\nBangkok\nBarnaul\nBeirut\nBishkek\nBrunei\nCalcutta\nChita\nChoibalsan\nChongqing\nChungking\nColombo\nDacca\nDamascus\nDhaka\nDili\nDubai\nDushanbe\nFamagusta\nGaza\nHarbin\nHebron\nHo_Chi_Minh\nHong_Kong\nHovd\nIrkutsk\nIstanbul\nJakarta\nJayapura\nJerusalem\nKabul\nKamchatka\nKarachi\nKashgar\nKathmandu\nKatmandu\nKhandyga\nKolkata\nKrasnoyarsk\nKuala_Lumpur\nKuching\nKuwait\nMacao\nMacau\nMagadan\nMakassar\nManila\nMuscat\nNicosia\nNovokuznetsk\nNovosibirsk\nOmsk\nOral\nPhnom_Penh\nPontianak\nPyongyang\nQatar\nQostanay\nQyzylorda\nRangoon\nRiyadh\nSaigon\nSakhalin\nSamarkand\nSeoul\nShanghai\nSingapore\nSrednekolymsk\nTaipei\nTashkent\nTbilisi\nTehran\nTel_Aviv\nThimbu\nThimphu\nTokyo\nTomsk\nUjung_Pandang\nUlaanbaatar\nUlan_Bator\nUrumqi\nUst-Nera\nVientiane\nVladivostok\nYakutsk\nYangon\nYekaterinburg\nYerevan\n\nthird/ocicl/systems/local-time-20250427-fea5b15/zoneinfo/right/Atlantic:\nAzores\nBermuda\nCanary\nCape_Verde\nFaeroe\nFaroe\nJan_Mayen\nMadeira\nReykjavik\nSouth_Georgia\nStanley\nSt_Helena\n\nthird/ocicl/systems/local-time-20250427-fea5b15/zoneinfo/right/Australia:\nACT\nAdelaide\nBrisbane\nBroken_Hill\nCanberra\nCurrie\nDarwin\nEucla\nHobart\nLHI\nLindeman\nLord_Howe\nMelbourne\nNorth\nNSW\nPerth\nQueensland\nSouth\nSydney\nTasmania\nVictoria\nWest\nYancowinna\n\nthird/ocicl/systems/local-time-20250427-fea5b15/zoneinfo/right/Brazil:\nAcre\nDeNoronha\nEast\nWest\n\nthird/ocicl/systems/local-time-20250427-fea5b15/zoneinfo/right/Canada:\nAtlantic\nCentral\nEastern\nMountain\nNewfoundland\nPacific\nSaskatchewan\nYukon\n\nthird/ocicl/systems/local-time-20250427-fea5b15/zoneinfo/right/Chile:\nContinental\nEasterIsland\n\nthird/ocicl/systems/local-time-20250427-fea5b15/zoneinfo/right/Etc:\nGMT\nGMT+0\nGMT-0\nGMT0\nGMT+1\nGMT-1\nGMT+10\nGMT-10\nGMT+11\nGMT-11\nGMT+12\nGMT-12\nGMT-13\nGMT-14\nGMT+2\nGMT-2\nGMT+3\nGMT-3\nGMT+4\nGMT-4\nGMT+5\nGMT-5\nGMT+6\nGMT-6\nGMT+7\nGMT-7\nGMT+8\nGMT-8\nGMT+9\nGMT-9\nGreenwich\nUCT\nUniversal\nUTC\nZulu\n\nthird/ocicl/systems/local-time-20250427-fea5b15/zoneinfo/right/Europe:\nAmsterdam\nAndorra\nAstrakhan\nAthens\nBelfast\nBelgrade\nBerlin\nBratislava\nBrussels\nBucharest\nBudapest\nBusingen\nChisinau\nCopenhagen\nDublin\nGibraltar\nGuernsey\nHelsinki\nIsle_of_Man\nIstanbul\nJersey\nKaliningrad\nKiev\nKirov\nKyiv\nLisbon\nLjubljana\nLondon\nLuxembourg\nMadrid\nMalta\nMariehamn\nMinsk\nMonaco\nMoscow\nNicosia\nOslo\nParis\nPodgorica\nPrague\nRiga\nRome\nSamara\nSan_Marino\nSarajevo\nSaratov\nSimferopol\nSkopje\nSofia\nStockholm\nTallinn\nTirane\nTiraspol\nUlyanovsk\nUzhgorod\nVaduz\nVatican\nVienna\nVilnius\nVolgograd\nWarsaw\nZagreb\nZaporozhye\nZurich\n\nthird/ocicl/systems/local-time-20250427-fea5b15/zoneinfo/right/Indian:\nAntananarivo\nChagos\nChristmas\nCocos\nComoro\nKerguelen\nMahe\nMaldives\nMauritius\nMayotte\nReunion\n\nthird/ocicl/systems/local-time-20250427-fea5b15/zoneinfo/right/Mexico:\nBajaNorte\nBajaSur\nGeneral\n\nthird/ocicl/systems/local-time-20250427-fea5b15/zoneinfo/right/Pacific:\nApia\nAuckland\nBougainville\nChatham\nChuuk\nEaster\nEfate\nEnderbury\nFakaofo\nFiji\nFunafuti\nGalapagos\nGambier\nGuadalcanal\nGuam\nHonolulu\nJohnston\nKanton\nKiritimati\nKosrae\nKwajalein\nMajuro\nMarquesas\nMidway\nNauru\nNiue\nNorfolk\nNoumea\nPago_Pago\nPalau\nPitcairn\nPohnpei\nPonape\nPort_Moresby\nRarotonga\nSaipan\nSamoa\nTahiti\nTarawa\nTongatapu\nTruk\nWake\nWallis\nYap\n\nthird/ocicl/systems/local-time-20250427-fea5b15/zoneinfo/right/US:\nAlaska\nAleutian\nArizona\nCentral\nEastern\nEast-Indiana\nHawaii\nIndiana-Starke\nMichigan\nMountain\nPacific\nSamoa\n\nthird/ocicl/systems/local-time-20250427-fea5b15/zoneinfo/SystemV:\nAST4\nAST4ADT\nCST6\nCST6CDT\nEST5\nEST5EDT\nHST10\nMST7\nMST7MDT\nPST8\nPST8PDT\nYST9\nYST9YDT\n\nthird/ocicl/systems/local-time-20250427-fea5b15/zoneinfo/US:\nAlaska\nAleutian\nArizona\nCentral\nEastern\nEast-Indiana\nHawaii\nIndiana-Starke\nMichigan\nMountain\nPacific\nSamoa\n\nthird/ocicl/systems/mgl-pax-20250430-9cd609c:\n_00_OCICL_NAME\n_00_OCICL_VERSION\nCOPYING\ndref\nHACKING.md\nmgl-pax.asd\nmgl-pax.asdf.asd\nmgl-pax-bootstrap.asd\nmgl-pax-test.asd\nREADME\nREADME.md\nsrc\ntest\nTODO.org\nweb\n\nthird/ocicl/systems/mgl-pax-20250430-9cd609c/dref:\ndref.asd\ndref-test.asd\nREADME\nREADME.md\nsrc\ntest\n\nthird/ocicl/systems/mgl-pax-20250430-9cd609c/dref/src:\nbase\nfull\n\nthird/ocicl/systems/mgl-pax-20250430-9cd609c/dref/src/base:\nautoload.lisp\ndref.lisp\nearly.lisp\nextension-api.lisp\npackage.lisp\nutil.lisp\n\nthird/ocicl/systems/mgl-pax-20250430-9cd609c/dref/src/full:\ndoc.lisp\ndtype.lisp\nlate.lisp\nloaded.lisp\nlocatives.lisp\npackage.lisp\nsource-location.lisp\nswank-util.lisp\nutil.lisp\n\nthird/ocicl/systems/mgl-pax-20250430-9cd609c/dref/test:\npackage.lisp\ntest-autoload.lisp\ntest-defs.lisp\ntest.lisp\ntest-locate.lisp\ntest.sh\n\nthird/ocicl/systems/mgl-pax-20250430-9cd609c/src:\nasdf.lisp\nbase\nbootstrap\ndocument\nmgl-pax.el\nnavigate\ntranscribe\nweb\n\nthird/ocicl/systems/mgl-pax-20250430-9cd609c/src/base:\nautoload.lisp\ndocument-early.lisp\nextension-api.lisp\nfoo-random-example.lisp\nlocatives-early.lisp\npax.lisp\ntranscribe-early.lisp\nweb-early.lisp\n\nthird/ocicl/systems/mgl-pax-20250430-9cd609c/src/bootstrap:\nbasics.lisp\npackage.lisp\npax-world.lisp\n\nthird/ocicl/systems/mgl-pax-20250430-9cd609c/src/document:\nbrowse.lisp\ndocstring.lisp\ndocument.lisp\ndocument-object.lisp\ndocument-util.lisp\njquery.min.js\nmarkdown.lisp\nstream-spec.lisp\nurl.lisp\nutil.lisp\n\nthird/ocicl/systems/mgl-pax-20250430-9cd609c/src/navigate:\nhyperspec.lisp\nlocatives.lisp\nnavigate.lisp\npackage.lisp\nparse.lisp\nsections.lisp\nutil.lisp\n\nthird/ocicl/systems/mgl-pax-20250430-9cd609c/src/transcribe:\ntranscribe.lisp\n\nthird/ocicl/systems/mgl-pax-20250430-9cd609c/src/web:\nweb.lisp\n\nthird/ocicl/systems/mgl-pax-20250430-9cd609c/test:\ndata\ninc.md\nmgl-pax-tests.el\npackage.lisp\ntest-defs.lisp\ntest-document.lisp\ntest-el.sh\ntest-extension.lisp\ntest.lisp\ntest-navigate.lisp\ntest.sh\ntest-systems.asd\ntest-transcribe.lisp\ntest-util.lisp\n\nthird/ocicl/systems/mgl-pax-20250430-9cd609c/test/data:\ntranscribe-source.lisp\ntranscribe-transcription.lisp\n\nthird/ocicl/systems/mgl-pax-20250430-9cd609c/web:\ncharter\ndefault\nREADME\n\nthird/ocicl/systems/mgl-pax-20250430-9cd609c/web/charter:\njquery.min.js\nlive.js\nstyle.css\ntoc.min.js\nxcharter\nxeb-garamond\n\nthird/ocicl/systems/mgl-pax-20250430-9cd609c/web/charter/xcharter:\nREADME\nXCharter-Bold.otf\nxcharter.css\nXCharter-Italic.otf\nXCharter-Roman.otf\n\nthird/ocicl/systems/mgl-pax-20250430-9cd609c/web/charter/xeb-garamond:\nREADME\nxeb-garamond.css\nXEBGaramond-Regular.otf\n\nthird/ocicl/systems/mgl-pax-20250430-9cd609c/web/default:\njquery.min.js\nlive.js\nstyle.css\ntoc.min.js\n\nthird/ocicl/systems/named-readtables-20250423-b59cc4c:\n_00_OCICL_NAME\n_00_OCICL_VERSION\nLICENSE\nnamed-readtables.asd\nnamed-readtables-test.asd\nREADME.md\nsrc\ntest\n\nthird/ocicl/systems/named-readtables-20250423-b59cc4c/src:\ncruft.lisp\ndefine-api.lisp\ndoc.lisp\nnamed-readtables.lisp\npackage.lisp\nutils.lisp\n\nthird/ocicl/systems/named-readtables-20250423-b59cc4c/test:\npackage.lisp\ntests.lisp\n\nthird/ocicl/systems/parse-declarations-20240503-549aebb:\n_00_OCICL_VERSION\ndoc\nLICENSE\nparse-declarations-1.0.asd\nparse-declarations.lisp\ntests.lisp\n\nthird/ocicl/systems/parse-declarations-20240503-549aebb/doc:\ncolorize-lisp-examples.lisp\ngendocs.sh\ngendocs_template\nMakefile\nparse-declarations.texinfo\nstyle.css\n\nthird/ocicl/systems/parse-number-20240503-cb9e487:\n_00_OCICL_VERSION\nparse-number.asd\nparse-number.lisp\nREADME\ntests.lisp\nversion.sexp\n\nthird/ocicl/systems/path-parse-20240503-86183f3:\n_00_OCICL_VERSION\npath-parse.asd\npath-parse-test.asd\nREADME.md\nsrc\nt\n\nthird/ocicl/systems/path-parse-20240503-86183f3/src:\npath-parse.lisp\n\nthird/ocicl/systems/path-parse-20240503-86183f3/t:\npath-parse.lisp\n\nthird/ocicl/systems/proc-parse-20240503-3afe2b7:\n_00_OCICL_VERSION\nLICENSE.txt\nproc-parse.asd\nproc-parse-test.asd\nREADME.markdown\nsrc\nt\n\nthird/ocicl/systems/proc-parse-20240503-3afe2b7/src:\nproc-parse.lisp\n\nthird/ocicl/systems/proc-parse-20240503-3afe2b7/t:\nproc-parse.lisp\n\nthird/ocicl/systems/pythonic-string-reader-20240503-47a70ba:\n_00_OCICL_VERSION\nCOPYING\npythonic-string-reader.asd\npythonic-string-reader.lisp\nREADME.org\n\nthird/ocicl/systems/quri-0.7.0:\ndata\nquri.asd\nquri-test.asd\nREADME.markdown\nsrc\nt\n\nthird/ocicl/systems/quri-0.7.0/data:\neffective_tld_names.dat\n\nthird/ocicl/systems/quri-0.7.0/src:\ndecode.lisp\ndomain.lisp\nencode.lisp\nerror.lisp\netld.lisp\nparser.lisp\nport.lisp\nquri.lisp\nuri\nuri.lisp\nutil.lisp\n\nthird/ocicl/systems/quri-0.7.0/src/uri:\nfile.lisp\nftp.lisp\nhttp.lisp\nldap.lisp\n\nthird/ocicl/systems/quri-0.7.0/t:\nbenchmark.lisp\ndecode.lisp\ndomain.lisp\nencode.lisp\netld.lisp\nparser.lisp\nquri.lisp\n\nthird/ocicl/systems/salza2-2.1:\nadler32.lisp\nbitstream.lisp\nchains.lisp\nchecksum.lisp\nclosures.lisp\ncompress.lisp\ncompressor.lisp\ncrc32.lisp\ndoc\ngzip.lisp\nhuffman.lisp\nLICENSE.txt\nmatches.lisp\npackage.lisp\nREADME.txt\nreset.lisp\nsalza2.asd\nspecials.lisp\nstream.lisp\ntest\ntypes.lisp\nuser.lisp\nutilities.lisp\nzlib.lisp\n\nthird/ocicl/systems/salza2-2.1/doc:\nCOPYING.txt\nindex.html\n\nthird/ocicl/systems/salza2-2.1/test:\npackage.lisp\nstream.lisp\n\nthird/ocicl/systems/serapeum-20250427-29d57e9:\n_00_OCICL_NAME\n_00_OCICL_VERSION\narrays.lisp\nbinding.lisp\nbox.lisp\nclos.lisp\nconditions.lisp\ncontrol-flow.lisp\ndefining-types.lisp\ndefinitions.lisp\ndispatch-case.lisp\ndocs.lisp\nexporting.lisp\nfbind.lisp\nfiles.lisp\nfunctions.lisp\ngeneralized-arrays.lisp\ngeneralized-arrays.md\nhash-tables.lisp\nheap.lisp\nhooks.lisp\ninternal-definitions.lisp\niter.lisp\nLICENSE.txt\nlists.lisp\nmacro-tools.lisp\nMakefile\nmop.lisp\nnumbers.lisp\noctets.lisp\nop.lisp\nop.md\npackage.lisp\npackages.lisp\nportability.lisp\nqueue.lisp\nqueue.md\nrange.lisp\nrange.md\nreader.lisp\nREADME.md\nREFERENCE.md\nsequences.lisp\nserapeum.asd\nstatic-let.lisp\nstrings.lisp\nsymbols.lisp\ntests\nthreads.lisp\ntime.lisp\ntree-case.lisp\ntrees.lisp\ntypes.lisp\nunits.lisp\nvector=.lisp\nvectors.lisp\n\nthird/ocicl/systems/serapeum-20250427-29d57e9/tests:\narrays.lisp\nbinding.lisp\nbox.lisp\nclos.lisp\nconditions.lisp\ncontrol-flow.lisp\ndefining-types-aux.lisp\ndefining-types.lisp\ndefinitions.lisp\ndispatch-case.lisp\nfbind.lisp\nfiles.lisp\nfunctions.lisp\ngeneralized-arrays.lisp\nhash-tables.lisp\nhooks.lisp\ninternal-definitions.lisp\niteration.lisp\nlists.lisp\nmacro-tools.lisp\nmop.lisp\nnumbers.lisp\noctets.lisp\nop.lisp\npackage.lisp\npackages.lisp\nportability.lisp\nqueue.lisp\nrange.lisp\nsequences.lisp\nstatic-let.lisp\nstrings.lisp\nsymbols.lisp\ntests.lisp\nthreads.lisp\ntime.lisp\ntree-case.lisp\ntrees.lisp\ntypes.lisp\nunits.lisp\nvector=.lisp\nvectors.lisp\n\nthird/ocicl/systems/smart-buffer-20240503-619759d:\n_00_OCICL_VERSION\nREADME.markdown\nsmart-buffer.asd\nsmart-buffer-test.asd\nsrc\nt\n\nthird/ocicl/systems/smart-buffer-20240503-619759d/src:\nsmart-buffer.lisp\n\nthird/ocicl/systems/smart-buffer-20240503-619759d/t:\nsmart-buffer.lisp\n\nthird/ocicl/systems/split-sequence-2.0.1:\napi.lisp\ndocumentation.lisp\nextended-sequence.lisp\nLICENSE\nlist.lisp\noriginal-message.txt\npackage.lisp\nREADME.md\nsplit-sequence.asd\ntests.lisp\nvector.lisp\nversion.sexp\n\nthird/ocicl/systems/static-vectors-20240624-3d9d89b:\n_00_OCICL_NAME\n_00_OCICL_VERSION\nLICENCE\nREADME\nsrc\nstatic-vectors.asd\ntests\nversion.sexp\n\nthird/ocicl/systems/static-vectors-20240624-3d9d89b/src:\ncffi-type-translator.lisp\nconstantp.lisp\nconstructor.lisp\nffi-types.lisp\nimpl-abcl.lisp\nimpl-allegro.lisp\nimpl-clasp.lisp\nimpl-clozure.lisp\nimpl-cmucl.lisp\nimpl-ecl.lisp\nimpl-lispworks.lisp\nimpl-sbcl.lisp\npkgdcl.lisp\n\nthird/ocicl/systems/static-vectors-20240624-3d9d89b/tests:\nstatic-vectors-tests.lisp\n\nthird/ocicl/systems/string-case-20240503-718c761:\n_00_OCICL_VERSION\nLICENSE\nstring-case.asd\nstring-case.lisp\n\nthird/ocicl/systems/swap-bytes-20240503-43ab141:\n_00_OCICL_VERSION\nccl.lisp\nendianness.lisp\nLICENCE\nnetwork.lisp\npackage.lisp\nportable.lisp\nREADME.md\nsbcl-defknowns.lisp\nsbcl.lisp\nsbcl-vops.lisp\nswap-bytes.asd\ntest.lisp\nversion.sexp\n\nthird/ocicl/systems/trivia-20240904-4383dd8:\n_00_OCICL_NAME\n_00_OCICL_VERSION\nballand2006\nbench\nbenchmark.org\ncffi\ncircle.yml\nfset\nlevel0\nlevel1\nlevel2\nLICENSE\nppcre\nquasiquote\nREADME.org\ntest\ntestscr.ros\ntrivia.asd\ntrivia.balland2006.asd\ntrivia.benchmark.asd\ntrivia.cffi.asd\ntrivia.fset.asd\ntrivia.level0.asd\ntrivia.level1.asd\ntrivia.level2.asd\ntrivia.ppcre.asd\ntrivia.quasiquote.asd\ntrivia.test.asd\ntrivia.trivial.asd\n\nthird/ocicl/systems/trivia-20240904-4383dd8/balland2006:\ncolumn-swapping.lisp\noptimizer.lisp\npackage.lisp\nREADME.org\nt\n\nthird/ocicl/systems/trivia-20240904-4383dd8/balland2006/t:\npackage.lisp\n\nthird/ocicl/systems/trivia-20240904-4383dd8/bench:\ndebug.lisp\ndefinitions.lisp\npackage.lisp\nrun.lisp\n\nthird/ocicl/systems/trivia-20240904-4383dd8/cffi:\ncffi.lisp\n\nthird/ocicl/systems/trivia-20240904-4383dd8/fset:\npackage.lisp\n\nthird/ocicl/systems/trivia-20240904-4383dd8/level0:\nimpl.lisp\npackage.lisp\n\nthird/ocicl/systems/trivia-20240904-4383dd8/level1:\nimpl.lisp\npackage.lisp\n\nthird/ocicl/systems/trivia-20240904-4383dd8/level2:\narrays.lisp\nderived2.lisp\nderived3.lisp\nderived-class.lisp\nderived.lisp\nderived-numbers.lisp\ndocparser-interface.lisp\nimpl.lisp\ninline-pattern.lisp\npackage.lisp\nsugars.lisp\n\nthird/ocicl/systems/trivia-20240904-4383dd8/ppcre:\npackage.lisp\n\nthird/ocicl/systems/trivia-20240904-4383dd8/quasiquote:\nquasiquote.lisp\n\nthird/ocicl/systems/trivia-20240904-4383dd8/test:\nbase.lisp\ncffi.lisp\nfset.lisp\nlevel0.lisp\nlevel1.lisp\nlevel2.lisp\nppcre.lisp\nquasiquote.lisp\n\nthird/ocicl/systems/trivial-cltl2-20230809-2ada872:\n_00_OCICL_VERSION\nallegro.lisp\ncltl2.lisp\nREADME.md\ntrivial-cltl2.asd\n\nthird/ocicl/systems/trivial-features-1.0:\nCOPYRIGHT\nREADME.md\nrelease.lisp\nSPEC.md\nsrc\ntests\ntrivial-features.asd\ntrivial-features-tests.asd\n\nthird/ocicl/systems/trivial-features-1.0/src:\ntf-abcl.lisp\ntf-allegro.lisp\ntf-clasp.lisp\ntf-clisp.lisp\ntf-cmucl.lisp\ntf-corman.lisp\ntf-ecl.lisp\ntf-genera.lisp\ntf-lispworks.lisp\ntf-mcl.lisp\ntf-mezzano.lisp\ntf-mkcl.lisp\ntf-mocl.lisp\ntf-openmcl.lisp\ntf-sbcl.lisp\ntf-scl.lisp\ntf-xcl.lisp\n\nthird/ocicl/systems/trivial-features-1.0/tests:\npackage.lisp\nsysinfo.lisp\ntests.lisp\nutsname.lisp\n\nthird/ocicl/systems/trivial-file-size-20250427-60fd1bf:\n_00_OCICL_NAME\n_00_OCICL_VERSION\nLICENSE.txt\npackage.lisp\nREADME.md\ntests\ntests.lisp\ntrivial-file-size.asd\ntrivial-file-size.lisp\n\nthird/ocicl/systems/trivial-file-size-20250427-60fd1bf/tests:\nempty-file\none-byte-file\ntwo-byte-file\n\nthird/ocicl/systems/trivial-garbage-20240503-3474f64:\n_00_OCICL_VERSION\nbuild.xcvb\ndoc\ngendocs.lisp\nREADME.md\nrelease.lisp\ntests.lisp\ntrivial-garbage.asd\ntrivial-garbage.lisp\n\nthird/ocicl/systems/trivial-garbage-20240503-3474f64/doc:\nindex.css\n\nthird/ocicl/systems/trivial-gray-streams-20240503-a7ead68:\n_00_OCICL_VERSION\nbuild.xcvb\nCOPYING\nMakefile\npackage.lisp\nREADME\nstreams.lisp\ntest\ntrivial-gray-streams.asd\ntrivial-gray-streams-test.asd\n\nthird/ocicl/systems/trivial-gray-streams-20240503-a7ead68/test:\npackage.lisp\nrun-on-many-lisps.lisp\ntest-framework.lisp\ntest.lisp\n\nthird/ocicl/systems/trivial-indent-20250106-fc7380b:\n_00_OCICL_NAME\n_00_OCICL_VERSION\ndocs\nindent.lisp\nLICENSE\nREADME.md\ntrivial-indent.asd\n\nthird/ocicl/systems/trivial-indent-20250106-fc7380b/docs:\nindex.html\n\nthird/ocicl/systems/trivial-macroexpand-all-20240503-933270a:\n_00_OCICL_VERSION\nLICENSE\npackage.lisp\nREADME.md\ntrivial-macroexpand-all.asd\ntrivial-macroexpand-all.lisp\n\nthird/ocicl/systems/trivial-mimes-20250127-01cb46b:\n_00_OCICL_NAME\n_00_OCICL_VERSION\ndocs\nLICENSE\nmime.types\nmime-types.lisp\nREADME.md\ntrivial-mimes.asd\n\nthird/ocicl/systems/trivial-mimes-20250127-01cb46b/docs:\nindex.html\n\nthird/ocicl/systems/type-i-20240503-4407a68:\n_00_OCICL_VERSION\nREADME.org\nsrc\nt\ntestscr.ros\ntype-i.asd\ntype-i.test.asd\n\nthird/ocicl/systems/type-i-20240503-4407a68/src:\ninfer-compound.lisp\ninfer-constants.lisp\ninfer-derived.lisp\ninfer-numbers.lisp\ninfer-typep.lisp\ninfer-unary.lisp\npackage.lisp\n\nthird/ocicl/systems/type-i-20240503-4407a68/t:\npackage.lisp\n\nthird/ocicl/systems/unix-opts-0.1.7:\nCHANGELOG.md\nexample\nLICENSE.md\nREADME.md\ntests.lisp\nunix-opts.asd\nunix-opts.lisp\nunix-opts-tests.asd\n\nthird/ocicl/systems/unix-opts-0.1.7/example:\nexample.lisp\nexample.sh\n\nthird/ocicl/systems/unix-opts-20250319-0e61f34:\n_00_OCICL_NAME\n_00_OCICL_VERSION\nCHANGELOG.md\nexample\nLICENSE.md\nREADME.md\nrun-tests.bash\ntests.lisp\ntravis-install.bash\nunix-opts.asd\nunix-opts.lisp\n\nthird/ocicl/systems/unix-opts-20250319-0e61f34/example:\nexample.lisp\nexample.sh\n\nthird/ocicl/systems/usocket-0.8.8:\nbackend\nCHANGES\ncondition.lisp\nCONTRIBUTORS\ndocker\ndoc-src\nLICENSE\nnotes\noption.lisp\npackage.lisp\nREADME.md\nserver.lisp\ntests\nusocket.asd\nusocket.lisp\nusocket-server.asd\nusocket.system\nusocket-test.asd\nvendor\nversion.sexp\n\nthird/ocicl/systems/usocket-0.8.8/backend:\nabcl.lisp\nallegro.lisp\nclasp.lisp\nclisp.lisp\nclozure.lisp\ncmucl.lisp\necl.lisp\ngenera.lisp\niolib.lisp\nlispworks.lisp\nmcl.lisp\nmezzano.lisp\nmocl.lisp\nopenmcl.lisp\nsbcl.lisp\nscl.lisp\n\nthird/ocicl/systems/usocket-0.8.8/docker:\nDockerfile\nMakefile\n\nthird/ocicl/systems/usocket-0.8.8/doc-src:\nintro.dita\nreference.dita\nSettings.sts\nusocket.ditamap\n\nthird/ocicl/systems/usocket-0.8.8/notes:\nabcl-socket.txt\nactive-sockets-apis.txt\naddress-apis.txt\nallegro-socket.txt\nbackends.txt\nclisp-sockets.txt\ncmucl-sockets.txt\ndesign.txt\nerrors.txt\nlw-sockets.txt\nopenmcl-sockets.txt\nREADME.md\nsb-bsd-sockets.txt\nusock-sockets.txt\n\nthird/ocicl/systems/usocket-0.8.8/tests:\npackage.lisp\ntest-condition.lisp\ntest-datagram.lisp\ntest-timeout.lisp\ntest-usocket.lisp\nudp-one-shot.lisp\nwait-for-input.lisp\n\nthird/ocicl/systems/usocket-0.8.8/vendor:\nkqueue.lisp\nOpenTransportUDP.lisp\n\nthird/ocicl/systems/which-20240503-b2333e4:\n_00_OCICL_VERSION\nREADME.md\nsrc\nt\nwhich.asd\nwhich-test.asd\n\nthird/ocicl/systems/which-20240503-b2333e4/src:\nwhich.lisp\n\nthird/ocicl/systems/which-20240503-b2333e4/t:\nwhich.lisp\n\nthird/ocicl/systems/winhttp-20240503-8611ba5:\n_00_OCICL_VERSION\nexamples\nffi.lisp\nLICENSE\npackage.lisp\nREADME.md\nutil.lisp\nwinhttp.asd\n\nthird/ocicl/systems/winhttp-20240503-8611ba5/examples:\nwebsocket.lisp\nxmlrpc.lisp\n\nthird/ocicl/systems/with-user-abort-20240503-a3db02e:\n_00_OCICL_VERSION\nmain.lisp\npackage.lisp\nREADME.md\nwith-user-abort.asd\n\nthird/ocicl/systems/xsubseq-20240503-5ce430b:\n_00_OCICL_VERSION\nREADME.markdown\nsrc\nt\nxsubseq.asd\nxsubseq-test.asd\n\nthird/ocicl/systems/xsubseq-20240503-5ce430b/src:\nxsubseq.lisp\n\nthird/ocicl/systems/xsubseq-20240503-5ce430b/t:\nbenchmark.lisp\nxsubseq.lisp\n","annotations":{"audience":["assistant"]}},{"type":"text","text":"third/ocicl:\nCODE_OF_CONDUCT.md\ndeflate.lisp\nLICENSE\nmirror-example.sh\nocicl.asd\nocicl.lisp\npackage.lisp\nREADME.md\nruntime\nsetup.lisp\nsystems\nsystems.csv\ntree.lisp\nversion.sexp\n\nthird/ocicl/runtime:\nasdf.lisp\nocicl-runtime.lisp\n\nthird/ocicl/systems:\nalexandria-20240503-8514d8e\nanaphora-20240503-bcf0f74\nasdf-package-system-20240503-61776f2\nbabel-20240606-23c1440\nbordeaux-threads-0.9.4\ncffi-20250311-48eaef6\nchipz-20240503-6f80368\nchunga-20240919-5cd13fe\ncl-base64-20240503-80496b7\ncl-cookie-20240703-6bcb74a\ncl-fad-0.7.6\ncl-interpol-2.0.7\ncl-json-20240907-994dd38\ncloser-mop-20250430-8e9c882\ncl-plus-ssl-20250424-38e501f\ncl-ppcre-20240503-80fb19d\ncl-tar-20240503-7c6e07a\ncl-tar-file-20240503-0c10bc8\ncl-unicode-20240503-07e7ff5\ncl-utilities-20240503-6b4de39\ncopy-directory-20250106-6926cbb\ndefclass-std-20241228-6d003a5\ndexador-20240925-d7ac217\ndiff-20240503-9c84bef\ndoc-20250107-bad40f6\ndocumentation-utils-20230511-98630dd\nfast-http-20240503-2232fc9\nfast-io-20240503-a4c5ad6\nflexi-streams-20240503-4951d57\nfloat-features-20250422-e1202d9\nglobal-vars-20240503-c749f32\nidna-20240503-bf789e6\nintrospect-environment-20240503-69a50ac\niolib-20240503-396cc43\niterate-20250224-26cf129\njzon-20250127-9ef348a\nlisp-namespace-20240503-699fccb\nlocal-time-20250427-fea5b15\nmgl-pax-20250430-9cd609c\nnamed-readtables-20250423-b59cc4c\nparse-declarations-20240503-549aebb\nparse-number-20240503-cb9e487\npath-parse-20240503-86183f3\nproc-parse-20240503-3afe2b7\npythonic-string-reader-20240503-47a70ba\nquri-0.7.0\nsalza2-2.1\nserapeum-20250427-29d57e9\nsmart-buffer-20240503-619759d\nsplit-sequence-2.0.1\nstatic-vectors-20240624-3d9d89b\nstring-case-20240503-718c761\nswap-bytes-20240503-43ab141\ntrivia-20240904-4383dd8\ntrivial-cltl2-20230809-2ada872\ntrivial-features-1.0\ntrivial-file-size-20250427-60fd1bf\ntrivial-garbage-20240503-3474f64\ntrivial-gray-streams-20240503-a7ead68\ntrivial-indent-20250106-fc7380b\ntrivial-macroexpand-all-20240503-933270a\ntrivial-mimes-20250127-01cb46b\ntype-i-20240503-4407a68\nunix-opts-0.1.7\nunix-opts-20250319-0e61f34\nusocket-0.8.8\nwhich-20240503-b2333e4\nwinhttp-20240503-8611ba5\nwith-user-abort-20240503-a3db02e\nxsubseq-20240503-5ce430b\n\nthird/ocicl/systems/alexandria-20240503-8514d8e:\n_00_OCICL_VERSION\nalexandria-1\nalexandria-2\nalexandria.asd\nAUTHORS\ndoc\nLICENCE\nREADME\nscripts\n\nthird/ocicl/systems/alexandria-20240503-8514d8e/alexandria-1:\narrays.lisp\nbinding.lisp\nconditions.lisp\ncontrol-flow.lisp\ndefinitions.lisp\nfeatures.lisp\nfunctions.lisp\nhash-tables.lisp\nio.lisp\nlists.lisp\nmacros.lisp\nnumbers.lisp\npackage.lisp\nsequences.lisp\nstrings.lisp\nsymbols.lisp\ntests.lisp\ntypes.lisp\n\nthird/ocicl/systems/alexandria-20240503-8514d8e/alexandria-2:\narrays.lisp\ncontrol-flow.lisp\nlists.lisp\npackage.lisp\nsequences.lisp\ntests.lisp\n\nthird/ocicl/systems/alexandria-20240503-8514d8e/doc:\nalexandria.texinfo\ndocstrings.lisp\nMakefile\n\nthird/ocicl/systems/alexandria-20240503-8514d8e/scripts:\nci-test.lisp\n\nthird/ocicl/systems/anaphora-20240503-bcf0f74:\n_00_OCICL_VERSION\nanaphora.asd\nanaphora.lisp\nearly.lisp\nLICENSE\npackages.lisp\nREADME.md\nsymbolic.lisp\ntests.lisp\n\nthird/ocicl/systems/asdf-package-system-20240503-61776f2:\n_00_OCICL_VERSION\nasdf-package-system.asd\nLICENSE\nREADME\n\nthird/ocicl/systems/babel-20240606-23c1440:\n_00_OCICL_NAME\n_00_OCICL_VERSION\nbabel.asd\nbabel-streams.asd\nbabel-tests.asd\nCOPYRIGHT\ndoc\nHEADER\nNOTES\nREADME.md\nscripts\nsrc\ntests\n\nthird/ocicl/systems/babel-20240606-23c1440/doc:\nbabel.texinfo\nlicense.texinfo\nmacros.texinfo\nMakefile\n\nthird/ocicl/systems/babel-20240606-23c1440/scripts:\nrelease.lisp\n\nthird/ocicl/systems/babel-20240606-23c1440/src:\nenc-ascii.lisp\nenc-cp1251.lisp\nenc-cp1252.lisp\nenc-cp437.lisp\nenc-ebcdic-int.lisp\nenc-ebcdic.lisp\nenc-gbk.lisp\nenc-iso-8859.lisp\nenc-jpn.lisp\nenc-koi8.lisp\nencodings.lisp\nenc-unicode.lisp\nexternal-format.lisp\ngbk-map.lisp\njpn-table.lisp\npackages.lisp\nsharp-backslash.lisp\nstreams.lisp\nstrings.lisp\n\nthird/ocicl/systems/babel-20240606-23c1440/tests:\nascii.txt\nascii.txt-utf8\nbenchmarks.lisp\nebcdic-fi.txt\nebcdic-fi.txt-utf8\nebcdic-us.txt\nebcdic-us.txt-utf8\ngen-test-files.sh\nstreams.lisp\ntests.lisp\nutf-16.txt\nutf-16.txt-utf8\nutf-16-with-le-bom.txt\nutf-32.txt\nutf-32.txt-utf8\nutf-32-with-le-bom.txt\nutf-8.txt\nutf-8.txt-utf8\n\nthird/ocicl/systems/bordeaux-threads-0.9.4:\napiv1\napiv2\nbordeaux-threads.asd\nCONTRIBUTORS\ndocs\nLICENSE\nREADME.md\nsite\ntest\nversion.sexp\n\nthird/ocicl/systems/bordeaux-threads-0.9.4/apiv1:\nbordeaux-threads.lisp\ncondition-variables.lisp\ndefault-implementations.lisp\nimpl-abcl.lisp\nimpl-allegro.lisp\nimpl-clasp.lisp\nimpl-clisp.lisp\nimpl-clozure.lisp\nimpl-cmucl.lisp\nimpl-corman.lisp\nimpl-ecl.lisp\nimpl-genera.lisp\nimpl-lispworks-condition-variables.lisp\nimpl-lispworks.lisp\nimpl-mcl.lisp\nimpl-mezzano.lisp\nimpl-mkcl.lisp\nimpl-sbcl.lisp\nimpl-scl.lisp\npkgdcl.lisp\n\nthird/ocicl/systems/bordeaux-threads-0.9.4/apiv2:\napi-condition-variables.lisp\napi-locks.lisp\napi-semaphores.lisp\napi-threads.lisp\natomics-java.lisp\natomics.lisp\nbordeaux-threads.lisp\nimpl-abcl.lisp\nimpl-allegro.lisp\nimpl-clasp.lisp\nimpl-clisp.lisp\nimpl-clozure.lisp\nimpl-cmucl.lisp\nimpl-condition-variables-semaphores.lisp\nimpl-corman.lisp\nimpl-ecl.lisp\nimpl-genera.lisp\nimpl-lispworks.lisp\nimpl-mcl.lisp\nimpl-mezzano.lisp\nimpl-mkcl.lisp\nimpl-sbcl.lisp\nimpl-scl.lisp\npkgdcl.lisp\ntimeout-interrupt.lisp\n\nthird/ocicl/systems/bordeaux-threads-0.9.4/docs:\narchetypes\nconfig.toml\ncontent\n\nthird/ocicl/systems/bordeaux-threads-0.9.4/docs/archetypes:\ndefault.md\n\nthird/ocicl/systems/bordeaux-threads-0.9.4/docs/content:\natomics\ncondition-variables\n_index.md\nlocks\nsemaphores\nthreads\ntimeouts\n\nthird/ocicl/systems/bordeaux-threads-0.9.4/docs/content/atomics:\natomic-integer-compare-and-swap.md\natomic-integer-decf.md\natomic-integer-incf.md\natomic-integer.md\natomic-integer-p.md\natomic-integer-value.md\n_index.md\nmake-atomic-integer.md\n\nthird/ocicl/systems/bordeaux-threads-0.9.4/docs/content/condition-variables:\ncondition-broadcast.md\ncondition-notify.md\ncondition-variable.md\ncondition-variable-p.md\ncondition-wait.md\n_index.md\nmake-condition-variable.md\n\nthird/ocicl/systems/bordeaux-threads-0.9.4/docs/content/locks:\nacquire-release-lock.md\nacquire-release-recursive-lock.md\n_index.md\nlock.md\nlockp.md\nlock-readers.md\nmake-lock.md\nmake-recursive-lock.md\nnative-lock.md\nnative-lock-p.md\nnative-recursive-lock.md\nnative-recursive-lock-p.md\nrecursive-lock.md\nrecursive-lock-p.md\nwith-lock-held.md\nwith-recursive-lock-held.md\n\nthird/ocicl/systems/bordeaux-threads-0.9.4/docs/content/semaphores:\n_index.md\nmake-semaphore.md\nsemaphore.md\nsemaphorep.md\nsignal-semaphore.md\nwait-on-semaphore.md\n\nthird/ocicl/systems/bordeaux-threads-0.9.4/docs/content/threads:\nabnormal-exit-condition.md\nabnormal-exit.md\nbordeaux-thread-error.md\nclass-thread.md\ncurrent-all-threads.md\ndefault-special-bindings.md\ndestroy-thread.md\n_index.md\ninterrupt-thread.md\njoin-thread.md\nmake-thread.md\nsignal-in-thread.md\nstart-multiprocessing.md\nthread-alive-p.md\nthreadp.md\nthread-readers.md\nthread-yield.md\n\nthird/ocicl/systems/bordeaux-threads-0.9.4/docs/content/timeouts:\n_index.md\ntimeout.md\nwith-timeout.md\n\nthird/ocicl/systems/bordeaux-threads-0.9.4/site:\nindex.html\nstyle.css\n\nthird/ocicl/systems/bordeaux-threads-0.9.4/test:\nnot-implemented.lisp\npkgdcl.lisp\ntests-v1.lisp\ntests-v2.lisp\n\nthird/ocicl/systems/cffi-20250311-48eaef6:\n_00_OCICL_NAME\n_00_OCICL_VERSION\ncffi.asd\ncffi-examples.asd\ncffi-grovel.asd\ncffi-libffi.asd\ncffi-tests.asd\ncffi-toolchain.asd\ncffi-uffi-compat.asd\nCOPYRIGHT\ndoc\nexamples\ngrovel\nHEADER\nlibffi\nMakefile\nREADME.md\nscripts\nsrc\ntests\nTODO\ntoolchain\nuffi-compat\n\nthird/ocicl/systems/cffi-20250311-48eaef6/doc:\nallegro-internals.txt\ncffi-manual.texinfo\ncffi-sys-spec.texinfo\ncolorize-lisp-examples.lisp\ngendocs.sh\ngendocs_template\nMakefile\nmem-vector.txt\nshareable-vectors.txt\nstyle.css\n\nthird/ocicl/systems/cffi-20250311-48eaef6/examples:\nexamples.lisp\ngethostname.lisp\ngettimeofday.lisp\ngrovel-example.lisp\nmain-example.lisp\nmapping.lisp\npackage.lisp\nrun-examples.lisp\ntranslator-test.lisp\nwrapper-example.lisp\n\nthird/ocicl/systems/cffi-20250311-48eaef6/grovel:\nasdf.lisp\ncommon.h\ngrovel.lisp\npackage.lisp\n\nthird/ocicl/systems/cffi-20250311-48eaef6/libffi:\nfuncall.lisp\nlibffi-functions.lisp\nlibffi.lisp\nlibffi-types.lisp\ntype-descriptors.lisp\n\nthird/ocicl/systems/cffi-20250311-48eaef6/scripts:\nrelease.lisp\n\nthird/ocicl/systems/cffi-20250311-48eaef6/src:\nc2ffi\ncffi-abcl.lisp\ncffi-allegro.lisp\ncffi-clasp.lisp\ncffi-clisp.lisp\ncffi-cmucl.lisp\ncffi-corman.lisp\ncffi-ecl.lisp\ncffi-gcl.lisp\ncffi-lispworks.lisp\ncffi-mcl.lisp\ncffi-mkcl.lisp\ncffi-openmcl.lisp\ncffi-sbcl.lisp\ncffi-scl.lisp\ndarwin-frameworks.lisp\nearly-types.lisp\nenum.lisp\nfeatures.lisp\nforeign-vars.lisp\nfunctions.lisp\nlibraries.lisp\npackage.lisp\nstrings.lisp\nstructures.lisp\nsys-utils.lisp\ntypes.lisp\nutils.lisp\n\nthird/ocicl/systems/cffi-20250311-48eaef6/src/c2ffi:\nasdf.lisp\nc2ffi.lisp\ngenerator.lisp\npackage.lisp\n\nthird/ocicl/systems/cffi-20250311-48eaef6/tests:\narrays.lisp\nbindings.lisp\ncallbacks.lisp\ncompile.bat\ndefcfun.lisp\nenum.lisp\nforeign-globals.lisp\nfsbv.lisp\nfuncall.lisp\nGNUmakefile\ngrovel.lisp\ngrovel-test.h\nlibfsbv.c\nlibtest2.c\nlibtest.c\nMakefile\nmemory.lisp\nmisc.lisp\nmisc-types.lisp\npackage.lisp\nrandom-tester.lisp\nrun-tests.lisp\nstrings.lisp\nstruct.lisp\ntest-asdf.lisp\ntest-static-link.sh\nunion.lisp\n\nthird/ocicl/systems/cffi-20250311-48eaef6/toolchain:\nbundle.lisp\nc-toolchain.lisp\npackage.lisp\nstatic-link.lisp\n\nthird/ocicl/systems/cffi-20250311-48eaef6/uffi-compat:\nuffi.asd\nuffi-compat.lisp\n\nthird/ocicl/systems/chipz-20240503-6f80368:\n_00_OCICL_VERSION\nadler32.lisp\nbzip2.lisp\nchipz.asd\nconditions.lisp\nconstants.lisp\ncrc32.lisp\ndecompress.lisp\ndoc\ndstate.lisp\ngzip.lisp\ninflate.lisp\ninflate-state.lisp\nLICENSE\nNEWS\npackage.lisp\nstream-fallback.lisp\nstream.lisp\ntests.lisp\nTODO\ntypes-and-tables.lisp\nzlib.lisp\n\nthird/ocicl/systems/chipz-20240503-6f80368/doc:\nchipz-doc.txt\nindex.html\nstyle.css\n\nthird/ocicl/systems/chunga-20240919-5cd13fe:\n_00_OCICL_NAME\n_00_OCICL_VERSION\nCHANGELOG\nCHANGELOG.txt\nchunga.asd\nconditions.lisp\ndocs\ninput.lisp\nknown-words.lisp\nLICENSE\noutput.lisp\npackages.lisp\nread.lisp\nspecials.lisp\nstreams.lisp\nutil.lisp\n\nthird/ocicl/systems/chunga-20240919-5cd13fe/docs:\nindex.html\n\nthird/ocicl/systems/cl-base64-20240503-80496b7:\n_00_OCICL_VERSION\ncl-base64.asd\ncl-base64-tests.asd\nCOPYING\ndebian\ndecode.lisp\nencode.lisp\npackage.lisp\ntests.lisp\n\nthird/ocicl/systems/cl-base64-20240503-80496b7/debian:\nchangelog\ncompat\ncontrol\ncopyright\nrules\nsource\nupload.sh\nwatch\n\nthird/ocicl/systems/cl-base64-20240503-80496b7/debian/source:\nformat\n\nthird/ocicl/systems/cl-cookie-20240703-6bcb74a:\n_00_OCICL_NAME\n_00_OCICL_VERSION\ncl-cookie.asd\ncl-cookie-test.asd\nREADME.markdown\nsrc\nt\n\nthird/ocicl/systems/cl-cookie-20240703-6bcb74a/src:\ncl-cookie.lisp\n\nthird/ocicl/systems/cl-cookie-20240703-6bcb74a/t:\ncl-cookie.lisp\n\nthird/ocicl/systems/cl-fad-0.7.6:\nCHANGELOG\ncl-fad.asd\ncl-fad.system\ncorman.lisp\ndocs\nfad.lisp\nfad.test.lisp\nLICENSE\nload.lisp\nopenmcl.lisp\npackages.lisp\npackages.test.lisp\npath.lisp\nREADME\ntemporary-files.lisp\ntemporary-files.test.lisp\n\nthird/ocicl/systems/cl-fad-0.7.6/docs:\nindex.html\n\nthird/ocicl/systems/cl-interpol-2.0.7:\nalias.lisp\nCHANGELOG\ncl-interpol.asd\ndocs\npackages.lisp\nread.lisp\nREADME.md\nspecials.lisp\ntest\nutil.lisp\n\nthird/ocicl/systems/cl-interpol-2.0.7/docs:\nindex.html\n\nthird/ocicl/systems/cl-interpol-2.0.7/test:\ncreate_perl_tests.pl\npackages.lisp\nperltests\nsimple\ntests.lisp\n\nthird/ocicl/systems/cl-json-20240907-994dd38:\n_00_OCICL_NAME\n_00_OCICL_VERSION\ncl-json.asd\ncompile-cl-json.lisp\nCONTRIBUTORS\ndoc\nLICENSE\nREADME.md\nsrc\nt\ntest-cl-json.lisp\nTODO\n\nthird/ocicl/systems/cl-json-20240907-994dd38/doc:\ncl-json.html\nstyle.css\n\nthird/ocicl/systems/cl-json-20240907-994dd38/src:\ncamel-case.lisp\ncommon.lisp\ndecoder-args.lisp\ndecoder.lisp\nencoder.lisp\njson-rpc.lisp\nobjects.lisp\npackage.lisp\nutils.lisp\n\nthird/ocicl/systems/cl-json-20240907-994dd38/t:\nfail10.json\nfail11.json\nfail12.json\nfail13.json\nfail14.json\nfail15.json\nfail16.json\nfail17.json\nfail18.json\nfail19.json\nfail1.json\nfail20.json\nfail21.json\nfail22.json\nfail23.json\nfail24.json\nfail2.json\nfail3.json\nfail4.json\nfail5.json\nfail6.json\nfail7.json\nfail8.json\nfail9.json\npackage.lisp\npass1.json\npass2.json\npass3.json\ntestdecoder.lisp\ntestencoder.lisp\ntestjson.lisp\ntestmisc.lisp\n\nthird/ocicl/systems/closer-mop-20250430-8e9c882:\n_00_OCICL_NAME\n_00_OCICL_VERSION\ncloser-abcl.lisp\ncloser-allegro.lisp\ncloser-clasp.lisp\ncloser-clisp.lisp\ncloser-clozure.lisp\ncloser-cmu.lisp\ncloser-ecl.lisp\ncloser-lispworks.lisp\ncloser-mcl.lisp\ncloser-mezzano.lisp\ncloser-mop.asd\ncloser-mop-packages.lisp\ncloser-mop-shared.lisp\ncloser-mop-system.cl\ncloser-sbcl.lisp\ncloser-scl.lisp\nfeatures.lisp\nfeatures.txt\nLICENSE.md\nREADME.md\n\nthird/ocicl/systems/cl-plus-ssl-20250424-38e501f:\n_00_OCICL_NAME\n_00_OCICL_VERSION\ncl+ssl.asd\ncl+ssl.test.asd\nexamples\nindex.css\nindex.html\nLICENSE\nMakefile\nREADME.md\nsrc\nssl-verify-test.lisp\ntest\ntodo.txt\n\nthird/ocicl/systems/cl-plus-ssl-20250424-38e501f/examples:\nclient-certificates-example.lisp\nclient-certificates-example-static.lisp\nexample.lisp\n\nthird/ocicl/systems/cl-plus-ssl-20250424-38e501f/src:\nbio.lisp\nconditions.lisp\nconfig.lisp\ncontext.lisp\nffi-buffer-all.lisp\nffi-buffer-clisp.lisp\nffi-buffer.lisp\nffi.lisp\ninit.lisp\npackage.lisp\nrandom.lisp\nreload.lisp\nssl-funcall.lisp\nstreams.lisp\nverify-hostname.lisp\nx509.lisp\n\nthird/ocicl/systems/cl-plus-ssl-20250424-38e501f/test:\nalpn.lisp\nbadssl-com.lisp\nbio.lisp\ncerts\ncert-utilities.lisp\nclient-server-certificate.pem\nclient-server.lisp\nclient-server-private-key.pem\nDockerfile\ndummy.lisp\nfingerprint.lisp\npackage.lisp\nrun-for-ci.lisp\nrun-for-ci.sh\nrun-on-many-lisps-and-openssls\nsni.lisp\nvalidity-dates.lisp\nverify-hostname.lisp\nversion.lisp\n\nthird/ocicl/systems/cl-plus-ssl-20250424-38e501f/test/certs:\nCACertSigningAuthority.crt\nca.crt\nclient.crt\ngoogle_bmp.der\ngoogle.der\ngoogle_nodns.der\ngoogle_printable!.der\ngoogle_printable.der\ngoogle_teletex.der\ngoogle_universal.der\ngoogle_wildcard.der\nlocalhost.crt\nlocalhost.der\nmixed-time-formats.der\nserver+ca.crt\ntest-key-no-password.key\n\nthird/ocicl/systems/cl-plus-ssl-20250424-38e501f/test/run-on-many-lisps-and-openssls:\nopenssl-releases\nopenssl-releases.lisp\nrun-home.lisp\nrun-home.sh\nrun-on-many-lisps-and-openssls.lisp\nrun-on-server.lisp\nrun-on-server.sh\n\nthird/ocicl/systems/cl-plus-ssl-20250424-38e501f/test/run-on-many-lisps-and-openssls/openssl-releases:\nbin-fetch.sh\nbin-package.sh\nbin-publish.sh\nbuild.sh\nsrc-fetch.sh\n\nthird/ocicl/systems/cl-ppcre-20240503-80fb19d:\n_00_OCICL_VERSION\napi.lisp\nCHANGELOG\ncharmap.lisp\ncharset.lisp\nchartest.lisp\nclosures.lisp\ncl-ppcre.asd\ncl-ppcre-unicode\ncl-ppcre-unicode.asd\nconvert.lisp\ndocs\nerrors.lisp\nlexer.lisp\nLICENSE\noptimize.lisp\npackages.lisp\nparser.lisp\nREADME.md\nregex-class.lisp\nregex-class-util.lisp\nrepetition-closures.lisp\nscanner.lisp\nspecials.lisp\ntest\nutil.lisp\n\nthird/ocicl/systems/cl-ppcre-20240503-80fb19d/cl-ppcre-unicode:\npackages.lisp\nresolver.lisp\n\nthird/ocicl/systems/cl-ppcre-20240503-80fb19d/docs:\nindex.html\n\nthird/ocicl/systems/cl-ppcre-20240503-80fb19d/test:\npackages.lisp\nperltestdata\nperltestinput\nperltest.pl\nperl-tests.lisp\nsimple\ntests.lisp\nunicodetestdata\nunicode-tests.lisp\n\nthird/ocicl/systems/cl-tar-20240503-7c6e07a:\n_00_OCICL_VERSION\nCHANGELOG.md\nclpmfile\nclpmfile.lock\nLICENSE\nlicenses\nREADME.md\nscripts\nsrc\ntar.asd\ntar-cli.asd\ntar-cli-asdf.asd\ntest\nversion.lisp-expr\n\nthird/ocicl/systems/cl-tar-20240503-7c6e07a/licenses:\n40ants-doc\nadopt\nalexandria\nasdf\nasdf-release-ops\nbabel\nbobbin\ncffi\ncffi-grovel\ncffi-toolchain\nchipz\nflexi-streams\nlocal-time\nnamed-readtables\nosicat\npythonic-string-reader\nsalza2\nsbcl\nsplit-sequence\ntar-file\ntrivial-features\ntrivial-gray-streams\n\nthird/ocicl/systems/cl-tar-20240503-7c6e07a/scripts:\nbuild-release.lisp\nbuild-static-release.lisp\nci-test.lisp\ngenerate-docs.lisp\nrun-tests.lisp\n\nthird/ocicl/systems/cl-tar-20240503-7c6e07a/src:\narchive.lisp\nasdf\ncli\ncommon-extract\nconditions.lisp\ncreate\ndocs.lisp\nentry.lisp\nextract\ngnu-archive.lisp\npackage.lisp\npax-archive.lisp\nsimple-extract\nustar-archive.lisp\nutils.lisp\nv7-archive.lisp\nvalidation.lisp\n\nthird/ocicl/systems/cl-tar-20240503-7c6e07a/src/asdf:\ndependencies-license-op.lisp\npackage.lisp\nsystem.lisp\n\nthird/ocicl/systems/cl-tar-20240503-7c6e07a/src/cli:\nmain.lisp\npackage.lisp\n\nthird/ocicl/systems/cl-tar-20240503-7c6e07a/src/common-extract:\nconditions.lisp\npackage.lisp\npathname-computation.lisp\nutils.lisp\n\nthird/ocicl/systems/cl-tar-20240503-7c6e07a/src/create:\ncreate.lisp\npackage.lisp\nposix.lisp\nwindows.lisp\n\nthird/ocicl/systems/cl-tar-20240503-7c6e07a/src/extract:\nconditions.lisp\nextract.lisp\nfd-stream.lisp\nfeatures.lisp\npackage.lisp\nutils.lisp\n\nthird/ocicl/systems/cl-tar-20240503-7c6e07a/src/simple-extract:\nextract.lisp\npackage.lisp\n\nthird/ocicl/systems/cl-tar-20240503-7c6e07a/test:\ncreate\nextract\ngnu.tar\ngnu.tar.gz\nmake-test-tars.sh\npackage.lisp\npax.tar\npax.tar.gz\nread.lisp\nshared.lisp\nsimple-extract\nustar.tar\nustar.tar.gz\nv7.tar\nv7.tar.gz\nwrite.lisp\n\nthird/ocicl/systems/cl-tar-20240503-7c6e07a/test/create:\ngnu.lisp\npackage.lisp\npax.lisp\nustar.lisp\nutils.lisp\nv7.lisp\n\nthird/ocicl/systems/cl-tar-20240503-7c6e07a/test/extract:\nextract.lisp\npackage.lisp\nstress.lisp\nutils.lisp\n\nthird/ocicl/systems/cl-tar-20240503-7c6e07a/test/simple-extract:\npackage.lisp\nstress.lisp\nutils.lisp\nv7.lisp\n\nthird/ocicl/systems/cl-tar-file-20240503-0c10bc8:\n_00_OCICL_VERSION\nCHANGELOG.md\nclpmfile\nclpmfile.lock\nLICENSE\nREADME.md\nscripts\nsrc\ntar-file.asd\ntest\nversion.lisp-expr\n\nthird/ocicl/systems/cl-tar-file-20240503-0c10bc8/scripts:\nci-test.lisp\ngenerate-docs.lisp\nrun-tests.lisp\n\nthird/ocicl/systems/cl-tar-file-20240503-0c10bc8/src:\nblocked-stream.lisp\nbounded-stream.lisp\nbuffer-ops.lisp\nconditions.lisp\nconstants.lisp\ndocs.lisp\nentry.lisp\nexternal-macros.lisp\ngenerics.lisp\ngnu.lisp\nmacros.lisp\npackage.lisp\npeeking-stream.lisp\ntar-file.lisp\nustar.lisp\nutils.lisp\nv7.lisp\n\nthird/ocicl/systems/cl-tar-file-20240503-0c10bc8/test:\nblocked-stream.lisp\ngnu.tar\ngnu.tar.gz\nmake-test-tars.sh\npackage.lisp\npax.tar\npax.tar.gz\nread.lisp\nshared.lisp\nustar.tar\nustar.tar.gz\nv7.tar\nv7.tar.gz\nwrite.lisp\n\nthird/ocicl/systems/cl-unicode-20240503-07e7ff5:\n_00_OCICL_VERSION\nalias.lisp\napi.lisp\nbuild\nCHANGELOG\nclean.cmd\ncl-unicode.asd\nconditions.lisp\nderived.lisp\ndocs\nhash-tables.lisp\nlists.lisp\nmethods.lisp\npackages.lisp\nspecials.lisp\ntest\ntest-functions.lisp\nutil.lisp\n\nthird/ocicl/systems/cl-unicode-20240503-07e7ff5/build:\nchar-info.lisp\ndata\ndump.lisp\nread.lisp\nutil.lisp\n\nthird/ocicl/systems/cl-unicode-20240503-07e7ff5/build/data:\nauxiliary\nBidiMirroring.txt\nBlocks.txt\nCaseFolding.txt\nCompositionExclusions.txt\nDerivedAge.txt\nDerivedCoreProperties.txt\nidna\nJamo.txt\nNormalizationTest.txt\nPropertyAliases.txt\nPropList.txt\nREADME.txt\nScripts.txt\nSpecialCasing.txt\nUnicodeData.txt\n\nthird/ocicl/systems/cl-unicode-20240503-07e7ff5/build/data/auxiliary:\nWordBreakProperty.txt\n\nthird/ocicl/systems/cl-unicode-20240503-07e7ff5/build/data/idna:\nIdnaMappingTable.txt\nIdnaTestV2.txt\nReadMe.txt\n\nthird/ocicl/systems/cl-unicode-20240503-07e7ff5/docs:\nindex.html\n\nthird/ocicl/systems/cl-unicode-20240503-07e7ff5/test:\nderived-properties\nnormalization-forms\npackages.lisp\nproperties\nsimple\ntests.lisp\n\nthird/ocicl/systems/cl-utilities-20240503-6b4de39:\n_00_OCICL_VERSION\ncl-utilities.asd\ncollecting.lisp\ncompose.lisp\ncopy-array.lisp\ndoc\nexpt-mod.lisp\nextremum.lisp\nonce-only.lisp\npackage.lisp\npackage.sh\nread-delimited.lisp\nREADME\nREADME.md\nrotate-byte.lisp\nsplit-sequence.lisp\ntest.lisp\nwith-unique-names.lisp\n\nthird/ocicl/systems/cl-utilities-20240503-6b4de39/doc:\ncollecting.html\ncompose.html\ncopy-array.html\nexpt-mod.html\nextremum.html\nindex.html\nonce-only.html\nread-delimited.html\nrotate-byte.html\nsplit-sequence.html\nstyle.css\nwith-unique-names.html\n\nthird/ocicl/systems/copy-directory-20250106-6926cbb:\n_00_OCICL_NAME\n_00_OCICL_VERSION\ncopy-directory.asd\ncopy-directory-test.asd\nREADME.md\nsrc\nt\n\nthird/ocicl/systems/copy-directory-20250106-6926cbb/src:\ncopy-directory.lisp\n\nthird/ocicl/systems/copy-directory-20250106-6926cbb/t:\ncopy-directory.lisp\ndir\n\nthird/ocicl/systems/copy-directory-20250106-6926cbb/t/dir:\na.txt\nb.txt\n\nthird/ocicl/systems/defclass-std-20241228-6d003a5:\n_00_OCICL_NAME\n_00_OCICL_VERSION\ncircle.yml\ndefclass-std.asd\ndefclass-std-test.asd\nREADME.md\nsrc\nt\n\nthird/ocicl/systems/defclass-std-20241228-6d003a5/src:\ndefclass-std.lisp\n\nthird/ocicl/systems/defclass-std-20241228-6d003a5/t:\ndefclass-std.lisp\n\nthird/ocicl/systems/dexador-20240925-d7ac217:\n_00_OCICL_NAME\n_00_OCICL_VERSION\nbenchmark\ndexador.asd\ndexador-test.asd\ndexador-usocket.asd\nimages\nMakefile\nREADME.markdown\nsrc\nt\n\nthird/ocicl/systems/dexador-20240925-d7ac217/benchmark:\n181B.html\nbench\n\nthird/ocicl/systems/dexador-20240925-d7ac217/images:\nbenchmark.png\n\nthird/ocicl/systems/dexador-20240925-d7ac217/src:\nbackend\nbody.lisp\nconnection-cache.lisp\ndecoding-stream.lisp\ndexador.lisp\nencoding.lisp\nerror.lisp\nkeep-alive-stream.lisp\nrestarts.lisp\nutil.lisp\n\nthird/ocicl/systems/dexador-20240925-d7ac217/src/backend:\nusocket.lisp\nwinhttp.lisp\n\nthird/ocicl/systems/dexador-20240925-d7ac217/t:\nbenchmark.lisp\ndata\ndexador.lisp\nDockerfile\nnginx.conf\n\nthird/ocicl/systems/dexador-20240925-d7ac217/t/data:\nbug139.txt\nquote.txt\ntest.gz\ntest.zlib\numb.bin\n\nthird/ocicl/systems/diff-20240503-9c84bef:\n_00_OCICL_VERSION\ndiff.asd\ndiff.lisp\nLICENSE\nNEWS\npackage.lisp\npatch.lisp\nREADME\nsvndiff.lisp\ntest-files\nTODO\nvdelta.lisp\n\nthird/ocicl/systems/diff-20240503-9c84bef/test-files:\ntest-dst-1.txt\ntest-dst-2.txt\ntest-dst-3.txt\ntest-src-1.txt\ntest-src-2.txt\ntest-src-3.txt\n\nthird/ocicl/systems/doc-20250107-bad40f6:\n_00_OCICL_NAME\n_00_OCICL_VERSION\n40ants-doc.asd\n40ants-doc-full.asd\n40ants-doc-test.asd\nChangeLog.md\nCOPYING\ncss\nelisp\nfull\njs\nplayground.lisp\nqlfile\nqlfile.lock\nREADME.md\nsrc\nstatic\ntest\nTODO.org\n\nthird/ocicl/systems/doc-20250107-bad40f6/css:\nstyle.css\n\nthird/ocicl/systems/doc-20250107-bad40f6/elisp:\nedit-locative.el\ntranscribe.el\n\nthird/ocicl/systems/doc-20250107-bad40f6/full:\nargs.lisp\nbuilder\nbuilder.lisp\ncommondoc\ndefinitions.lisp\ndislocated-symbols.lisp\ndoc.lisp\nerrors.lisp\nexternal-index.lisp\ngithub.lisp\nlink.lisp\nlocatives\nmarkdown.lisp\nobject-package-impl.lisp\npage.lisp\nplugins\nrender\nrewrite.lisp\nsearch.lisp\nsource.lisp\nswank.lisp\nthemes\ntranscribe.lisp\ntutorial.lisp\nutils.lisp\nwarn.lisp\nworld.lisp\n\nthird/ocicl/systems/doc-20250107-bad40f6/full/builder:\nprinter.lisp\nvars.lisp\n\nthird/ocicl/systems/doc-20250107-bad40f6/full/commondoc:\narglist.lisp\nbuilder.lisp\nbullet.lisp\nchangelog.lisp\nformat.lisp\nhtml.lisp\nimage.lisp\nmapper.lisp\nmarkdown.lisp\npage.lisp\npiece.lisp\nreference.lisp\nsection.lisp\ntoc.lisp\ntranscribe.lisp\nutils.lisp\nxref.lisp\n\nthird/ocicl/systems/doc-20250107-bad40f6/full/locatives:\nargument.lisp\nasdf-system.lisp\nclass.lisp\ncompiler-macro.lisp\nconstant.lisp\ndefiners.lisp\ndislocated.lisp\nfunction.lisp\ngeneric-function.lisp\nglossary.lisp\ninclude.lisp\nlocative.lisp\nmacro.lisp\nmethod.lisp\npackage.lisp\nrestart.lisp\nsection.lisp\nslots.lisp\nstdout-of.lisp\nstructure-accessor.lisp\nsymbol-macro.lisp\ntype.lisp\nutils.lisp\nvariable.lisp\n\nthird/ocicl/systems/doc-20250107-bad40f6/full/plugins:\nhighlightjs.lisp\nmathjax.lisp\n\nthird/ocicl/systems/doc-20250107-bad40f6/full/render:\nargs.lisp\n\nthird/ocicl/systems/doc-20250107-bad40f6/full/themes:\napi.lisp\ndark.lisp\ndefault.lisp\ndocs.lisp\nlight.lisp\n\nthird/ocicl/systems/doc-20250107-bad40f6/js:\njquery.min.js\ntoc.min.js\n\nthird/ocicl/systems/doc-20250107-bad40f6/src:\nautodoc\nautodoc.lisp\nchangelog.lisp\nci.lisp\ncore.lisp\ndocstring.lisp\nglossary.lisp\nignored-words.lisp\nlocatives\nlocatives.lisp\nobject-package.lisp\nreference-api.lisp\nreference.lisp\nrestart.lisp\nsmall.lisp\nsource-api.lisp\n\nthird/ocicl/systems/doc-20250107-bad40f6/src/autodoc:\nsections.lisp\n\nthird/ocicl/systems/doc-20250107-bad40f6/src/locatives:\nasdf-system.lisp\nbase.lisp\ndefine-definer.lisp\n\nthird/ocicl/systems/doc-20250107-bad40f6/static:\njquery-3.5.1.js\njquery.js\nrendering.png\nrendering.skt\nrss-icon.base64\nsearch\ntoc.js\nunderscore-1.13.1.js\nunderscore.js\n\nthird/ocicl/systems/doc-20250107-bad40f6/static/rendering.skt:\nLayer~0.png\nLayer~1.png\nLayer~2.png\nProperties.plist\nQuickLook\n\nthird/ocicl/systems/doc-20250107-bad40f6/static/rendering.skt/QuickLook:\nPreview.jpg\nThumbnail.png\n\nthird/ocicl/systems/doc-20250107-bad40f6/static/search:\ndoctools.js\nlanguage_data.js\nREADME.md\nsearchindex.js\nsearchtools.js\n\nthird/ocicl/systems/doc-20250107-bad40f6/test:\ndata\nlocatives.lisp\nmarkdown.lisp\npage.lisp\ntest.lisp\ntest-transcribe.lisp\nutils.lisp\nutils-test.lisp\nxref.lisp\n\nthird/ocicl/systems/doc-20250107-bad40f6/test/data:\nbaseline\n\nthird/ocicl/systems/doc-20250107-bad40f6/test/data/baseline:\ndoctools.js\nhighlight.min.css\nhighlight.min.js\njquery.js\nlanguage_data.js\nMETADATA\nother\nreferences.json\nsearch\nsearchindex.js\nsearchtools.js\ntest\ntest.md\ntheme.css\ntoc.js\ntranscribe-source.lisp\ntranscribe-transcription.lisp\nunderscore.js\n\nthird/ocicl/systems/doc-20250107-bad40f6/test/data/baseline/other:\ntest-other\ntest-other.md\n\nthird/ocicl/systems/doc-20250107-bad40f6/test/data/baseline/other/test-other:\nindex.html\n\nthird/ocicl/systems/doc-20250107-bad40f6/test/data/baseline/search:\nindex.html\n\nthird/ocicl/systems/doc-20250107-bad40f6/test/data/baseline/test:\nindex.html\n\nthird/ocicl/systems/documentation-utils-20230511-98630dd:\n_00_OCICL_VERSION\nabout.html\ndocumentation.lisp\ndocumentation-utils.asd\nLICENSE\nmultilang-documentation-utils.asd\nmultilang.lisp\npackage.lisp\nREADME.md\ntoolkit.lisp\n\nthird/ocicl/systems/fast-http-20240503-2232fc9:\n_00_OCICL_VERSION\nbenchmark\nfast-http.asd\nfast-http-test.asd\nREADME.markdown\nsrc\nt\n\nthird/ocicl/systems/fast-http-20240503-2232fc9/benchmark:\nhttp-parser.c\n\nthird/ocicl/systems/fast-http-20240503-2232fc9/src:\nbyte-vector.lisp\nerror.lisp\nfast-http.lisp\nhttp.lisp\nmultipart-parser.lisp\nparser.lisp\nutil.lisp\n\nthird/ocicl/systems/fast-http-20240503-2232fc9/t:\nbenchmark.lisp\nbody-buffer.lisp\nfast-http.lisp\nmultipart-parser.lisp\nparser.lisp\ntest-utils.lisp\nutil.lisp\n\nthird/ocicl/systems/fast-io-20240503-a4c5ad6:\n_00_OCICL_VERSION\nfast-io.asd\nfast-io-test.asd\nLICENSE\nREADME.md\nsrc\nt\n\nthird/ocicl/systems/fast-io-20240503-a4c5ad6/src:\ngray.lisp\nio.lisp\npackage.lisp\ntypes.lisp\n\nthird/ocicl/systems/fast-io-20240503-a4c5ad6/t:\nbasic.lisp\nbenchmark-defs.lisp\nbenchmarks.lisp\ngray.lisp\npackage.lisp\ntest-values\n\nthird/ocicl/systems/flexi-streams-20240503-4951d57:\n_00_OCICL_VERSION\nascii.lisp\nCHANGELOG\ncode-pages.lisp\nconditions.lisp\ndecode.lisp\ndocs\nenc-cn-tbl.lisp\nencode.lisp\nexternal-format.lisp\nflexi-streams.asd\nflexi-streams-test.asd\nin-memory.lisp\ninput.lisp\nio.lisp\niso-8859.lisp\nkoi8-r.lisp\nlength.lisp\nlw-char-stream.lisp\nmac.lisp\nmapping.lisp\noutput.lisp\npackages.lisp\nREADME.md\nspecials.lisp\nstream.lisp\nstrings.lisp\ntest\nutil.lisp\n\nthird/ocicl/systems/flexi-streams-20240503-4951d57/docs:\nfoo.txt\nindex.html\n\nthird/ocicl/systems/flexi-streams-20240503-4951d57/test:\nhebrew_latin8_crlf.txt\nhebrew_latin8_cr.txt\nhebrew_latin8_lf.txt\nhebrew_utf8_crlf.txt\nhebrew_utf8_cr.txt\nhebrew_utf8_lf.txt\nkafka_cp1252_crlf.txt\nkafka_cp1252_cr.txt\nkafka_cp1252_lf.txt\nkafka_latin1_crlf.txt\nkafka_latin1_cr.txt\nkafka_latin1_lf.txt\nkafka_utf8_crlf.txt\nkafka_utf8_cr.txt\nkafka_utf8_lf.txt\nmac_chars_mac_crlf.txt\nmac_chars_mac_cr.txt\nmac_chars_mac_lf.txt\nmac_chars_utf8_crlf.txt\nmac_chars_utf8_cr.txt\nmac_chars_utf8_lf.txt\npackages.lisp\nREADME\nrussian_koi8r_crlf.txt\nrussian_koi8r_cr.txt\nrussian_koi8r_lf.txt\nrussian_utf8_crlf.txt\nrussian_utf8_cr.txt\nrussian_utf8_lf.txt\ntest.lisp\ntilton_ascii_crlf.txt\ntilton_ascii_cr.txt\ntilton_ascii_lf.txt\ntilton_utf8_crlf.txt\ntilton_utf8_cr.txt\ntilton_utf8_lf.txt\nunicode_demo_ucs2_cr_be.txt\nunicode_demo_ucs2_cr_le.txt\nunicode_demo_ucs2_crlf_be.txt\nunicode_demo_ucs2_crlf_le.txt\nunicode_demo_ucs2_lf_be.txt\nunicode_demo_ucs2_lf_le.txt\nunicode_demo_ucs4_cr_be.txt\nunicode_demo_ucs4_cr_le.txt\nunicode_demo_ucs4_crlf_be.txt\nunicode_demo_ucs4_crlf_le.txt\nunicode_demo_ucs4_lf_be.txt\nunicode_demo_ucs4_lf_le.txt\nunicode_demo_utf8_crlf.txt\nunicode_demo_utf8_cr.txt\nunicode_demo_utf8_lf.txt\nxjt_gbk_crlf.txt\nxjt_gbk_cr.txt\nxjt_gbk_lf.txt\n\nthird/ocicl/systems/float-features-20250422-e1202d9:\n_00_OCICL_NAME\n_00_OCICL_VERSION\nconstants.lisp\ndocs\ndocumentation.lisp\nfloat-features.asd\nfloat-features.lisp\nfloat-features-tests.asd\nLICENSE\npackage.lisp\nREADME.md\ntest-float-features.lisp\n\nthird/ocicl/systems/float-features-20250422-e1202d9/docs:\nindex.html\n\nthird/ocicl/systems/global-vars-20240503-c749f32:\n_00_OCICL_VERSION\nglobal-vars.asd\nglobal-vars.lisp\nglobal-vars-test.asd\nglobal-vars-test.lisp\nREADME.md\n\nthird/ocicl/systems/idna-20240503-bf789e6:\n_00_OCICL_VERSION\ndecode.lisp\nencode.lisp\nidna.asd\nLICENSE\npackage.lisp\nREADME.md\ntests.lisp\n\nthird/ocicl/systems/introspect-environment-20240503-69a50ac:\n_00_OCICL_VERSION\nccl.lisp\nclasp.lisp\ncmucl.lisp\ndefault.lisp\ndoc.lisp\nexpander.lisp\nintrospect-environment.asd\nintrospect-environment-test.asd\npackage.lisp\nREADME.md\nsbcl.lisp\ntest.lisp\n\nthird/ocicl/systems/iolib-20240503-396cc43:\n_00_OCICL_VERSION\nCHANGES\ndoc\nexamples\nextras\ninstall-repo.bash\niolib.asd\niolib.asdf.asd\niolib.base.asd\niolib.common-lisp.asd\niolib.conf.asd\niolib.examples.asd\nLICENCE\nREADME.md\nsrc\ntests\nversion.sexp\n\nthird/ocicl/systems/iolib-20240503-396cc43/doc:\niolib.texinfo\nlicense.texinfo\nmacros.texinfo\nMakefile\nnetworking.texinfo\nstreams.texinfo\n\nthird/ocicl/systems/iolib-20240503-396cc43/examples:\necho-server.lisp\nex1-client.lisp\nex1-server.lisp\nex2-client.lisp\nex2-server.lisp\nex3-client.lisp\nex3-server.lisp\nex4-client.lisp\nex4-server.lisp\nex5a-client.lisp\nex5b-client.lisp\nex5-server.lisp\nex6-server.lisp\nex7-buffer.lisp\nex7-server.lisp\nex8-buffer.lisp\nex8-server.lisp\ngen-tutorial\nMakefile\npackage.lisp\nREADME\ntutorial\ntutorial.tmpl\n\nthird/ocicl/systems/iolib-20240503-396cc43/extras:\nping.lisp\n\nthird/ocicl/systems/iolib-20240503-396cc43/src:\nbase\nconf\niolib\nmultiplex\nnew-cl\nos\npathnames\nsockets\nstreams\nsyscalls\n\nthird/ocicl/systems/iolib-20240503-396cc43/src/base:\nasdf.lisp\nconditions.lisp\ndebug.lisp\ndefalias.lisp\ndeffoldable.lisp\ndefobsolete.lisp\ndynamic-buffer.lisp\nmatching.lisp\npkgdcl.lisp\nreader.lisp\nreturn-star.lisp\nsequence.lisp\ntime.lisp\ntypes.lisp\n\nthird/ocicl/systems/iolib-20240503-396cc43/src/conf:\npkgdcl.lisp\nrequires.lisp\n\nthird/ocicl/systems/iolib-20240503-396cc43/src/iolib:\npkgdcl.lisp\n\nthird/ocicl/systems/iolib-20240503-396cc43/src/multiplex:\nbackend-epoll.lisp\nbackend-kqueue.lisp\nbackend-poll.lisp\nbackend-select.lisp\ndetect.lisp\nevent-loop.lisp\nfd-entry.lisp\nfd-wait.lisp\nmultiplexer.lisp\npkgdcl.lisp\nqueue.lisp\nscheduler.lisp\ntimers.lisp\nTODO\nutils.lisp\n\nthird/ocicl/systems/iolib-20240503-396cc43/src/new-cl:\nconduits.lisp\ndefinitions.lisp\ngray-streams.lisp\npkgdcl.lisp\nscl-gray-streams.lisp\ntypes.lisp\n\nthird/ocicl/systems/iolib-20240503-396cc43/src/os:\ncreate-process-unix.lisp\nffi-functions-unix.lisp\nffi-types-unix.lisp\nos-unix.lisp\npkgdcl.lisp\n\nthird/ocicl/systems/iolib-20240503-396cc43/src/pathnames:\nfile-path.lisp\nfile-path-unix.lisp\npkgdcl.lisp\n\nthird/ocicl/systems/iolib-20240503-396cc43/src/sockets:\naddress-arithmetic.lisp\naddress.lisp\naddress-predicates.lisp\nbase-sockets.lisp\nbsd.lisp\ncommon.lisp\nconditions.lisp\nconfig.lisp\ndns\ngrovel.lisp\niface.lisp\nmake-socket.lisp\nnamedb\npkgdcl.lisp\nsocket-methods.lisp\nsocket-options.lisp\nTODO\ntrivial-sockets.lisp\n\nthird/ocicl/systems/iolib-20240503-396cc43/src/sockets/dns:\ncommon.lisp\nconditions.lisp\nlookup.lisp\nmessage.lisp\nnameservers.lisp\nquery.lisp\n\nthird/ocicl/systems/iolib-20240503-396cc43/src/sockets/namedb:\netc-files.lisp\nfile-monitor.lisp\nhosts.lisp\nprotocols.lisp\nservices.lisp\n\nthird/ocicl/systems/iolib-20240503-396cc43/src/streams:\ngray\nzeta\n\nthird/ocicl/systems/iolib-20240503-396cc43/src/streams/gray:\nbuffer.lisp\nclasses.lisp\nconditions.lisp\nfd-mixin.lisp\ngray-stream-methods.lisp\nio-helpers.lisp\npkgdcl.lisp\nTODO\n\nthird/ocicl/systems/iolib-20240503-396cc43/src/streams/zeta:\nconditions.lisp\ndevice.lisp\nffi-functions-unix.lisp\nfile-unix.lisp\niobuf.lisp\npkgdcl.lisp\nstream.lisp\ntypes.lisp\n\nthird/ocicl/systems/iolib-20240503-396cc43/src/syscalls:\nconditions.lisp\ndesignators.lisp\nearly.lisp\nffi-functions-unix.lisp\nffi-types-unix.lisp\nos-conditions-unix.lisp\npkgdcl.lisp\nunix-syscall-path-strings.lisp\n\nthird/ocicl/systems/iolib-20240503-396cc43/tests:\nbase.lisp\ndata\ndefsuites.lisp\necho-server.c\nfile-paths-unix.lisp\nMakefile\nmultiplex.lisp\npkgdcl.lisp\nsockets.lisp\nstreams.lisp\n\nthird/ocicl/systems/iolib-20240503-396cc43/tests/data:\nhebrew_utf-8_crlf.txt\nhebrew_utf-8_cr.txt\nhebrew_utf-8_lf.txt\nkafka_latin-1_crlf.txt\nkafka_latin-1_cr.txt\nkafka_latin-1_lf.txt\nkafka_utf-8_crlf.txt\nkafka_utf-8_cr.txt\nkafka_utf-8_lf.txt\nrussian_utf-8_crlf.txt\nrussian_utf-8_cr.txt\nrussian_utf-8_lf.txt\ntilton_ascii_crlf.txt\ntilton_ascii_cr.txt\ntilton_ascii_lf.txt\ntilton_utf-8_crlf.txt\ntilton_utf-8_cr.txt\ntilton_utf-8_lf.txt\nunicode_demo_utf-8_crlf.txt\nunicode_demo_utf-8_cr.txt\nunicode_demo_utf-8_lf.txt\n\nthird/ocicl/systems/iterate-20250224-26cf129:\n_00_OCICL_NAME\n_00_OCICL_VERSION\nbin\nChangelog.md\nclisp-test.lisp\ndoc\niterate.asd\niterate.lisp\niterate-test.lisp\nMakefile\npackage.lisp\nREADME.md\ntest.fas\ntest.lib\ntest.lis\ntest.lisp\n\nthird/ocicl/systems/iterate-20250224-26cf129/bin:\nrelease.sh\n\nthird/ocicl/systems/iterate-20250224-26cf129/doc:\nexamples\ngendocs.sh\ngendocs_template\niterate.texinfo\nMakefile\nstyle.css\ntex\n\nthird/ocicl/systems/iterate-20250224-26cf129/doc/examples:\niterate-pg.lisp\n\nthird/ocicl/systems/iterate-20250224-26cf129/doc/tex:\naimemo.sty\nGNUmakefile\niterate-bare.pdf\niterate-bare.tex\niterate-manual.pdf\niterate-manual.tex\n\nthird/ocicl/systems/jzon-20250127-9ef348a:\n_00_OCICL_NAME\n_00_OCICL_VERSION\nCHANGELOG.md\nJSONTestSuite\nLICENSE\nREADME.md\nsrc\ntest\ntest.bat\ntest.sh\n\nthird/ocicl/systems/jzon-20250127-9ef348a/JSONTestSuite:\njson-test-suite-runner.lisp\njzon-parsing.lisp\nmake.bat\nREADME.md\nresults\ntest.bat\ntest_parsing\n\nthird/ocicl/systems/jzon-20250127-9ef348a/JSONTestSuite/results:\ncl-json.log\njonathan.log\njson-streams.log\njsown.log\njzon.log\nshasht.log\nyason.log\n\nthird/ocicl/systems/jzon-20250127-9ef348a/JSONTestSuite/test_parsing:\ni_number_double_huge_neg_exp.json\ni_number_huge_exp.json\ni_number_neg_int_huge_exp.json\ni_number_pos_double_huge_exp.json\ni_number_real_neg_overflow.json\ni_number_real_pos_overflow.json\ni_number_real_underflow.json\ni_number_too_big_neg_int.json\ni_number_too_big_pos_int.json\ni_number_very_big_negative_int.json\ni_object_key_lone_2nd_surrogate.json\ni_string_1st_surrogate_but_2nd_missing.json\ni_string_1st_valid_surrogate_2nd_invalid.json\ni_string_incomplete_surrogate_and_escape_valid.json\ni_string_incomplete_surrogate_pair.json\ni_string_incomplete_surrogates_escape_valid.json\ni_string_invalid_lonely_surrogate.json\ni_string_invalid_surrogate.json\ni_string_invalid_utf-8.json\ni_string_inverted_surrogates_U+1D11E.json\ni_string_iso_latin_1.json\ni_string_lone_second_surrogate.json\ni_string_lone_utf8_continuation_byte.json\ni_string_not_in_unicode_range.json\ni_string_overlong_sequence_2_bytes.json\ni_string_overlong_sequence_6_bytes.json\ni_string_overlong_sequence_6_bytes_null.json\ni_string_truncated-utf-8.json\ni_string_utf16BE_no_BOM.json\ni_string_utf16LE_no_BOM.json\ni_string_UTF-16LE_with_BOM.json\ni_string_UTF-8_invalid_sequence.json\ni_string_UTF8_surrogate_U+D800.json\ni_structure_500_nested_arrays.json\ni_structure_UTF-8_BOM_empty_object.json\nn_array_1_true_without_comma.json\nn_array_a_invalid_utf8.json\nn_array_colon_instead_of_comma.json\nn_array_comma_after_close.json\nn_array_comma_and_number.json\nn_array_double_comma.json\nn_array_double_extra_comma.json\nn_array_extra_close.json\nn_array_extra_comma.json\nn_array_incomplete_invalid_value.json\nn_array_incomplete.json\nn_array_inner_array_no_comma.json\nn_array_invalid_utf8.json\nn_array_items_separated_by_semicolon.json\nn_array_just_comma.json\nn_array_just_minus.json\nn_array_missing_value.json\nn_array_newlines_unclosed.json\nn_array_number_and_comma.json\nn_array_number_and_several_commas.json\nn_array_spaces_vertical_tab_formfeed.json\nn_array_star_inside.json\nn_array_unclosed.json\nn_array_unclosed_trailing_comma.json\nn_array_unclosed_with_new_lines.json\nn_array_unclosed_with_object_inside.json\nn_incomplete_false.json\nn_incomplete_null.json\nn_incomplete_true.json\nn_multidigit_number_then_00.json\nn_number_0.1.2.json\nn_number_-01.json\nn_number_0.3e+.json\nn_number_0.3e.json\nn_number_0_capital_E+.json\nn_number_0_capital_E.json\nn_number_0.e1.json\nn_number_0e+.json\nn_number_0e.json\nn_number_1_000.json\nn_number_1.0e+.json\nn_number_1.0e-.json\nn_number_1.0e.json\nn_number_-1.0..json\nn_number_1eE2.json\nn_number_+1.json\nn_number_.-1.json\nn_number_2.e+3.json\nn_number_2.e-3.json\nn_number_2.e3.json\nn_number_.2e-3.json\nn_number_-2..json\nn_number_9.e+.json\nn_number_expression.json\nn_number_hex_1_digit.json\nn_number_hex_2_digits.json\nn_number_infinity.json\nn_number_+Inf.json\nn_number_Inf.json\nn_number_invalid+-.json\nn_number_invalid-negative-real.json\nn_number_invalid-utf-8-in-bigger-int.json\nn_number_invalid-utf-8-in-exponent.json\nn_number_invalid-utf-8-in-int.json\nn_number_++.json\nn_number_minus_infinity.json\nn_number_minus_sign_with_trailing_garbage.json\nn_number_minus_space_1.json\nn_number_-NaN.json\nn_number_NaN.json\nn_number_neg_int_starting_with_zero.json\nn_number_neg_real_without_int_part.json\nn_number_neg_with_garbage_at_end.json\nn_number_real_garbage_after_e.json\nn_number_real_with_invalid_utf8_after_e.json\nn_number_real_without_fractional_part.json\nn_number_starting_with_dot.json\nn_number_U+FF11_fullwidth_digit_one.json\nn_number_with_alpha_char.json\nn_number_with_alpha.json\nn_number_with_leading_zero.json\nn_object_bad_value.json\nn_object_bracket_key.json\nn_object_comma_instead_of_colon.json\nn_object_double_colon.json\nn_object_emoji.json\nn_object_garbage_at_end.json\nn_object_key_with_single_quotes.json\nn_object_lone_continuation_byte_in_key_and_trailing_comma.json\nn_object_missing_colon.json\nn_object_missing_key.json\nn_object_missing_semicolon.json\nn_object_missing_value.json\nn_object_no-colon.json\nn_object_non_string_key_but_huge_number_instead.json\nn_object_non_string_key.json\nn_object_repeated_null_null.json\nn_object_several_trailing_commas.json\nn_object_single_quote.json\nn_object_trailing_comma.json\nn_object_trailing_comment.json\nn_object_trailing_comment_open.json\nn_object_trailing_comment_slash_open_incomplete.json\nn_object_trailing_comment_slash_open.json\nn_object_two_commas_in_a_row.json\nn_object_unquoted_key.json\nn_object_unterminated-value.json\nn_object_with_single_string.json\nn_object_with_trailing_garbage.json\nn_single_space.json\nn_string_1_surrogate_then_escape.json\nn_string_1_surrogate_then_escape_u1.json\nn_string_1_surrogate_then_escape_u1x.json\nn_string_1_surrogate_then_escape_u.json\nn_string_accentuated_char_no_quotes.json\nn_string_backslash_00.json\nn_string_escaped_backslash_bad.json\nn_string_escaped_ctrl_char_tab.json\nn_string_escaped_emoji.json\nn_string_escape_x.json\nn_string_incomplete_escaped_character.json\nn_string_incomplete_escape.json\nn_string_incomplete_surrogate_escape_invalid.json\nn_string_incomplete_surrogate.json\nn_string_invalid_backslash_esc.json\nn_string_invalid_unicode_escape.json\nn_string_invalid_utf8_after_escape.json\nn_string_invalid-utf-8-in-escape.json\nn_string_leading_uescaped_thinspace.json\nn_string_no_quotes_with_bad_escape.json\nn_string_single_doublequote.json\nn_string_single_quote.json\nn_string_single_string_no_double_quotes.json\nn_string_start_escape_unclosed.json\nn_string_unescaped_ctrl_char.json\nn_string_unescaped_newline.json\nn_string_unescaped_tab.json\nn_string_unicode_CapitalU.json\nn_string_with_trailing_garbage.json\nn_structure_100000_opening_arrays.json\nn_structure_angle_bracket_..json\nn_structure_angle_bracket_null.json\nn_structure_array_trailing_garbage.json\nn_structure_array_with_extra_array_close.json\nn_structure_array_with_unclosed_string.json\nn_structure_ascii-unicode-identifier.json\nn_structure_capitalized_True.json\nn_structure_close_unopened_array.json\nn_structure_comma_instead_of_closing_brace.json\nn_structure_double_array.json\nn_structure_end_array.json\nn_structure_incomplete_UTF8_BOM.json\nn_structure_lone-invalid-utf-8.json\nn_structure_lone-open-bracket.json\nn_structure_no_data.json\nn_structure_null-byte-outside-string.json\nn_structure_number_with_trailing_garbage.json\nn_structure_object_followed_by_closing_object.json\nn_structure_object_unclosed_no_value.json\nn_structure_object_with_comment.json\nn_structure_object_with_trailing_garbage.json\nn_structure_open_array_apostrophe.json\nn_structure_open_array_comma.json\nn_structure_open_array_object.json\nn_structure_open_array_open_object.json\nn_structure_open_array_open_string.json\nn_structure_open_array_string.json\nn_structure_open_object_close_array.json\nn_structure_open_object_comma.json\nn_structure_open_object.json\nn_structure_open_object_open_array.json\nn_structure_open_object_open_string.json\nn_structure_open_object_string_with_apostrophes.json\nn_structure_open_open.json\nn_structure_single_eacute.json\nn_structure_single_star.json\nn_structure_trailing_#.json\nn_structure_U+2060_word_joined.json\nn_structure_uescaped_LF_before_string.json\nn_structure_unclosed_array.json\nn_structure_unclosed_array_partial_null.json\nn_structure_unclosed_array_unfinished_false.json\nn_structure_unclosed_array_unfinished_true.json\nn_structure_unclosed_object.json\nn_structure_unicode-identifier.json\nn_structure_UTF8_BOM_no_data.json\nn_structure_whitespace_formfeed.json\nn_structure_whitespace_U+2060_word_joiner.json\ny_array_arraysWithSpaces.json\ny_array_empty.json\ny_array_empty-string.json\ny_array_ending_with_newline.json\ny_array_false.json\ny_array_heterogeneous.json\ny_array_null.json\ny_array_with_1_and_newline.json\ny_array_with_leading_space.json\ny_array_with_several_null.json\ny_array_with_trailing_space.json\ny_number_0e+1.json\ny_number_0e1.json\ny_number_after_space.json\ny_number_double_close_to_zero.json\ny_number_int_with_exp.json\ny_number.json\ny_number_minus_zero.json\ny_number_negative_int.json\ny_number_negative_one.json\ny_number_negative_zero.json\ny_number_real_capital_e.json\ny_number_real_capital_e_neg_exp.json\ny_number_real_capital_e_pos_exp.json\ny_number_real_exponent.json\ny_number_real_fraction_exponent.json\ny_number_real_neg_exp.json\ny_number_real_pos_exponent.json\ny_number_simple_int.json\ny_number_simple_real.json\ny_object_basic.json\ny_object_duplicated_key_and_value.json\ny_object_duplicated_key.json\ny_object_empty.json\ny_object_empty_key.json\ny_object_escaped_null_in_key.json\ny_object_extreme_numbers.json\ny_object.json\ny_object_long_strings.json\ny_object_simple.json\ny_object_string_unicode.json\ny_object_with_newlines.json\ny_string_1_2_3_bytes_UTF-8_sequences.json\ny_string_accepted_surrogate_pair.json\ny_string_accepted_surrogate_pairs.json\ny_string_allowed_escapes.json\ny_string_backslash_and_u_escaped_zero.json\ny_string_backslash_doublequotes.json\ny_string_comments.json\ny_string_double_escape_a.json\ny_string_double_escape_n.json\ny_string_escaped_control_character.json\ny_string_escaped_noncharacter.json\ny_string_in_array.json\ny_string_in_array_with_leading_space.json\ny_string_last_surrogates_1_and_2.json\ny_string_nbsp_uescaped.json\ny_string_nonCharacterInUTF-8_U+10FFFF.json\ny_string_nonCharacterInUTF-8_U+FFFF.json\ny_string_null_escape.json\ny_string_one-byte-utf-8.json\ny_string_pi.json\ny_string_reservedCharacterInUTF-8_U+1BFFF.json\ny_string_simple_ascii.json\ny_string_space.json\ny_string_surrogates_U+1D11E_MUSICAL_SYMBOL_G_CLEF.json\ny_string_three-byte-utf-8.json\ny_string_two-byte-utf-8.json\ny_string_u+2028_line_sep.json\ny_string_u+2029_par_sep.json\ny_string_uescaped_newline.json\ny_string_uEscape.json\ny_string_unescaped_char_delete.json\ny_string_unicode_2.json\ny_string_unicodeEscapedBackslash.json\ny_string_unicode_escaped_double_quote.json\ny_string_unicode.json\ny_string_unicode_U+10FFFE_nonchar.json\ny_string_unicode_U+1FFFE_nonchar.json\ny_string_unicode_U+200B_ZERO_WIDTH_SPACE.json\ny_string_unicode_U+2064_invisible_plus.json\ny_string_unicode_U+FDD0_nonchar.json\ny_string_unicode_U+FFFE_nonchar.json\ny_string_utf8.json\ny_string_with_del_character.json\ny_structure_lonely_false.json\ny_structure_lonely_int.json\ny_structure_lonely_negative_real.json\ny_structure_lonely_null.json\ny_structure_lonely_string.json\ny_structure_lonely_true.json\ny_structure_string_empty.json\ny_structure_trailing_newline.json\ny_structure_true_in_array.json\ny_structure_whitespace_array.json\n\nthird/ocicl/systems/jzon-20250127-9ef348a/src:\ncom.inuoe.jzon.asd\neisel-lemire.lisp\njzon.lisp\nratio-to-double.lisp\nschubfach.lisp\n\nthird/ocicl/systems/jzon-20250127-9ef348a/test:\ncom.inuoe.jzon-tests.asd\njzon-tests.lisp\n\nthird/ocicl/systems/lisp-namespace-20240503-699fccb:\n_00_OCICL_VERSION\ncircle.yml\nEXAMPLE.org\nlisp-namespace.asd\nlisp-namespace.test.asd\nREADME.org\nsrc\nt\ntestscr.ros\n\nthird/ocicl/systems/lisp-namespace-20240503-699fccb/src:\nnamespace-let.lisp\nnamespace.lisp\npackage.lisp\n\nthird/ocicl/systems/lisp-namespace-20240503-699fccb/t:\npackage.lisp\n\nthird/ocicl/systems/local-time-20250427-fea5b15:\n_00_OCICL_NAME\n_00_OCICL_VERSION\ncl-postgres+local-time.asd\nCOPYING\nCREDITS\ndoc\nINSTALL\nlocal-time.asd\nREADME\nsrc\ntest\nTODO\nzoneinfo\n\nthird/ocicl/systems/local-time-20250427-fea5b15/doc:\ngendocs.sh\ngendocs_template\nlocal-time.texinfo\nMakefile\nstyle.css\n\nthird/ocicl/systems/local-time-20250427-fea5b15/src:\nintegration\nlocal-time.lisp\npackage.lisp\n\nthird/ocicl/systems/local-time-20250427-fea5b15/src/integration:\ncl-postgres.lisp\n\nthird/ocicl/systems/local-time-20250427-fea5b15/test:\nbenchmarks.lisp\ncomparison.lisp\nformatting.lisp\npackage.lisp\nparsing.lisp\nsimple.lisp\ntimezone.lisp\n\nthird/ocicl/systems/local-time-20250427-fea5b15/zoneinfo:\nAfrica\nAmerica\nAntarctica\nArctic\nAsia\nAtlantic\nAustralia\nBrazil\nCanada\nCET\nChile\nCST6CDT\nCuba\nEET\nEgypt\nEire\nEST\nEST5EDT\nEtc\nEurope\nFactory\nGB\nGB-Eire\nGMT\nGMT+0\nGMT-0\nGMT0\nGreenwich\nHongkong\nHST\nIceland\nIndian\nIran\niso3166.tab\nIsrael\nJamaica\nJapan\nKwajalein\nleapseconds\nleap-seconds.list\nLibya\nlocaltime\nMET\nMexico\nMST\nMST7MDT\nNavajo\nNZ\nNZ-CHAT\nPacific\nPoland\nPortugal\nposixrules\nPRC\nPST8PDT\nright\nROC\nROK\nSingapore\nSystemV\nTurkey\ntzdata.zi\nUCT\nUniversal\nUS\nUTC\nWET\nW-SU\nzone1970.tab\nzonenow.tab\nzone.tab\nZulu\n\nthird/ocicl/systems/local-time-20250427-fea5b15/zoneinfo/Africa:\nAbidjan\nAccra\nAddis_Ababa\nAlgiers\nAsmara\nAsmera\nBamako\nBangui\nBanjul\nBissau\nBlantyre\nBrazzaville\nBujumbura\nCairo\nCasablanca\nCeuta\nConakry\nDakar\nDar_es_Salaam\nDjibouti\nDouala\nEl_Aaiun\nFreetown\nGaborone\nHarare\nJohannesburg\nJuba\nKampala\nKhartoum\nKigali\nKinshasa\nLagos\nLibreville\nLome\nLuanda\nLubumbashi\nLusaka\nMalabo\nMaputo\nMaseru\nMbabane\nMogadishu\nMonrovia\nNairobi\nNdjamena\nNiamey\nNouakchott\nOuagadougou\nPorto-Novo\nSao_Tome\nTimbuktu\nTripoli\nTunis\nWindhoek\n\nthird/ocicl/systems/local-time-20250427-fea5b15/zoneinfo/America:\nAdak\nAnchorage\nAnguilla\nAntigua\nAraguaina\nArgentina\nAruba\nAsuncion\nAtikokan\nAtka\nBahia\nBahia_Banderas\nBarbados\nBelem\nBelize\nBlanc-Sablon\nBoa_Vista\nBogota\nBoise\nBuenos_Aires\nCambridge_Bay\nCampo_Grande\nCancun\nCaracas\nCatamarca\nCayenne\nCayman\nChicago\nChihuahua\nCiudad_Juarez\nCoral_Harbour\nCordoba\nCosta_Rica\nCreston\nCuiaba\nCuracao\nDanmarkshavn\nDawson\nDawson_Creek\nDenver\nDetroit\nDominica\nEdmonton\nEirunepe\nEl_Salvador\nEnsenada\nFortaleza\nFort_Nelson\nFort_Wayne\nGlace_Bay\nGodthab\nGoose_Bay\nGrand_Turk\nGrenada\nGuadeloupe\nGuatemala\nGuayaquil\nGuyana\nHalifax\nHavana\nHermosillo\nIndiana\nIndianapolis\nInuvik\nIqaluit\nJamaica\nJujuy\nJuneau\nKentucky\nKnox_IN\nKralendijk\nLa_Paz\nLima\nLos_Angeles\nLouisville\nLower_Princes\nMaceio\nManagua\nManaus\nMarigot\nMartinique\nMatamoros\nMazatlan\nMendoza\nMenominee\nMerida\nMetlakatla\nMexico_City\nMiquelon\nMoncton\nMonterrey\nMontevideo\nMontreal\nMontserrat\nNassau\nNew_York\nNipigon\nNome\nNoronha\nNorth_Dakota\nNuuk\nOjinaga\nPanama\nPangnirtung\nParamaribo\nPhoenix\nPort-au-Prince\nPorto_Acre\nPort_of_Spain\nPorto_Velho\nPuerto_Rico\nPunta_Arenas\nRainy_River\nRankin_Inlet\nRecife\nRegina\nResolute\nRio_Branco\nRosario\nSanta_Isabel\nSantarem\nSantiago\nSanto_Domingo\nSao_Paulo\nScoresbysund\nShiprock\nSitka\nSt_Barthelemy\nSt_Johns\nSt_Kitts\nSt_Lucia\nSt_Thomas\nSt_Vincent\nSwift_Current\nTegucigalpa\nThule\nThunder_Bay\nTijuana\nToronto\nTortola\nVancouver\nVirgin\nWhitehorse\nWinnipeg\nYakutat\nYellowknife\n\nthird/ocicl/systems/local-time-20250427-fea5b15/zoneinfo/America/Argentina:\nBuenos_Aires\nCatamarca\nComodRivadavia\nCordoba\nJujuy\nLa_Rioja\nMendoza\nRio_Gallegos\nSalta\nSan_Juan\nSan_Luis\nTucuman\nUshuaia\n\nthird/ocicl/systems/local-time-20250427-fea5b15/zoneinfo/America/Indiana:\nIndianapolis\nKnox\nMarengo\nPetersburg\nTell_City\nVevay\nVincennes\nWinamac\n\nthird/ocicl/systems/local-time-20250427-fea5b15/zoneinfo/America/Kentucky:\nLouisville\nMonticello\n\nthird/ocicl/systems/local-time-20250427-fea5b15/zoneinfo/America/North_Dakota:\nBeulah\nCenter\nNew_Salem\n\nthird/ocicl/systems/local-time-20250427-fea5b15/zoneinfo/Antarctica:\nCasey\nDavis\nDumontDUrville\nMacquarie\nMawson\nMcMurdo\nPalmer\nRothera\nSouth_Pole\nSyowa\nTroll\nVostok\n\nthird/ocicl/systems/local-time-20250427-fea5b15/zoneinfo/Arctic:\nLongyearbyen\n\nthird/ocicl/systems/local-time-20250427-fea5b15/zoneinfo/Asia:\nAden\nAlmaty\nAmman\nAnadyr\nAqtau\nAqtobe\nAshgabat\nAshkhabad\nAtyrau\nBaghdad\nBahrain\nBaku\nBangkok\nBarnaul\nBeirut\nBishkek\nBrunei\nCalcutta\nChita\nChoibalsan\nChongqing\nChungking\nColombo\nDacca\nDamascus\nDhaka\nDili\nDubai\nDushanbe\nFamagusta\nGaza\nHarbin\nHebron\nHo_Chi_Minh\nHong_Kong\nHovd\nIrkutsk\nIstanbul\nJakarta\nJayapura\nJerusalem\nKabul\nKamchatka\nKarachi\nKashgar\nKathmandu\nKatmandu\nKhandyga\nKolkata\nKrasnoyarsk\nKuala_Lumpur\nKuching\nKuwait\nMacao\nMacau\nMagadan\nMakassar\nManila\nMuscat\nNicosia\nNovokuznetsk\nNovosibirsk\nOmsk\nOral\nPhnom_Penh\nPontianak\nPyongyang\nQatar\nQostanay\nQyzylorda\nRangoon\nRiyadh\nSaigon\nSakhalin\nSamarkand\nSeoul\nShanghai\nSingapore\nSrednekolymsk\nTaipei\nTashkent\nTbilisi\nTehran\nTel_Aviv\nThimbu\nThimphu\nTokyo\nTomsk\nUjung_Pandang\nUlaanbaatar\nUlan_Bator\nUrumqi\nUst-Nera\nVientiane\nVladivostok\nYakutsk\nYangon\nYekaterinburg\nYerevan\n\nthird/ocicl/systems/local-time-20250427-fea5b15/zoneinfo/Atlantic:\nAzores\nBermuda\nCanary\nCape_Verde\nFaeroe\nFaroe\nJan_Mayen\nMadeira\nReykjavik\nSouth_Georgia\nStanley\nSt_Helena\n\nthird/ocicl/systems/local-time-20250427-fea5b15/zoneinfo/Australia:\nACT\nAdelaide\nBrisbane\nBroken_Hill\nCanberra\nCurrie\nDarwin\nEucla\nHobart\nLHI\nLindeman\nLord_Howe\nMelbourne\nNorth\nNSW\nPerth\nQueensland\nSouth\nSydney\nTasmania\nVictoria\nWest\nYancowinna\n\nthird/ocicl/systems/local-time-20250427-fea5b15/zoneinfo/Brazil:\nAcre\nDeNoronha\nEast\nWest\n\nthird/ocicl/systems/local-time-20250427-fea5b15/zoneinfo/Canada:\nAtlantic\nCentral\nEastern\nMountain\nNewfoundland\nPacific\nSaskatchewan\nYukon\n\nthird/ocicl/systems/local-time-20250427-fea5b15/zoneinfo/Chile:\nContinental\nEasterIsland\n\nthird/ocicl/systems/local-time-20250427-fea5b15/zoneinfo/Etc:\nGMT\nGMT+0\nGMT-0\nGMT0\nGMT+1\nGMT-1\nGMT+10\nGMT-10\nGMT+11\nGMT-11\nGMT+12\nGMT-12\nGMT-13\nGMT-14\nGMT+2\nGMT-2\nGMT+3\nGMT-3\nGMT+4\nGMT-4\nGMT+5\nGMT-5\nGMT+6\nGMT-6\nGMT+7\nGMT-7\nGMT+8\nGMT-8\nGMT+9\nGMT-9\nGreenwich\nUCT\nUniversal\nUTC\nZulu\n\nthird/ocicl/systems/local-time-20250427-fea5b15/zoneinfo/Europe:\nAmsterdam\nAndorra\nAstrakhan\nAthens\nBelfast\nBelgrade\nBerlin\nBratislava\nBrussels\nBucharest\nBudapest\nBusingen\nChisinau\nCopenhagen\nDublin\nGibraltar\nGuernsey\nHelsinki\nIsle_of_Man\nIstanbul\nJersey\nKaliningrad\nKiev\nKirov\nKyiv\nLisbon\nLjubljana\nLondon\nLuxembourg\nMadrid\nMalta\nMariehamn\nMinsk\nMonaco\nMoscow\nNicosia\nOslo\nParis\nPodgorica\nPrague\nRiga\nRome\nSamara\nSan_Marino\nSarajevo\nSaratov\nSimferopol\nSkopje\nSofia\nStockholm\nTallinn\nTirane\nTiraspol\nUlyanovsk\nUzhgorod\nVaduz\nVatican\nVienna\nVilnius\nVolgograd\nWarsaw\nZagreb\nZaporozhye\nZurich\n\nthird/ocicl/systems/local-time-20250427-fea5b15/zoneinfo/Indian:\nAntananarivo\nChagos\nChristmas\nCocos\nComoro\nKerguelen\nMahe\nMaldives\nMauritius\nMayotte\nReunion\n\nthird/ocicl/systems/local-time-20250427-fea5b15/zoneinfo/Mexico:\nBajaNorte\nBajaSur\nGeneral\n\nthird/ocicl/systems/local-time-20250427-fea5b15/zoneinfo/Pacific:\nApia\nAuckland\nBougainville\nChatham\nChuuk\nEaster\nEfate\nEnderbury\nFakaofo\nFiji\nFunafuti\nGalapagos\nGambier\nGuadalcanal\nGuam\nHonolulu\nJohnston\nKanton\nKiritimati\nKosrae\nKwajalein\nMajuro\nMarquesas\nMidway\nNauru\nNiue\nNorfolk\nNoumea\nPago_Pago\nPalau\nPitcairn\nPohnpei\nPonape\nPort_Moresby\nRarotonga\nSaipan\nSamoa\nTahiti\nTarawa\nTongatapu\nTruk\nWake\nWallis\nYap\n\nthird/ocicl/systems/local-time-20250427-fea5b15/zoneinfo/right:\nAfrica\nAmerica\nAntarctica\nArctic\nAsia\nAtlantic\nAustralia\nBrazil\nCanada\nCET\nChile\nCST6CDT\nCuba\nEET\nEgypt\nEire\nEST\nEST5EDT\nEtc\nEurope\nFactory\nGB\nGB-Eire\nGMT\nGMT+0\nGMT-0\nGMT0\nGreenwich\nHongkong\nHST\nIceland\nIndian\nIran\nIsrael\nJamaica\nJapan\nKwajalein\nLibya\nMET\nMexico\nMST\nMST7MDT\nNavajo\nNZ\nNZ-CHAT\nPacific\nPoland\nPortugal\nPRC\nPST8PDT\nROC\nROK\nSingapore\nTurkey\nUCT\nUniversal\nUS\nUTC\nWET\nW-SU\nZulu\n\nthird/ocicl/systems/local-time-20250427-fea5b15/zoneinfo/right/Africa:\nAbidjan\nAccra\nAddis_Ababa\nAlgiers\nAsmara\nAsmera\nBamako\nBangui\nBanjul\nBissau\nBlantyre\nBrazzaville\nBujumbura\nCairo\nCasablanca\nCeuta\nConakry\nDakar\nDar_es_Salaam\nDjibouti\nDouala\nEl_Aaiun\nFreetown\nGaborone\nHarare\nJohannesburg\nJuba\nKampala\nKhartoum\nKigali\nKinshasa\nLagos\nLibreville\nLome\nLuanda\nLubumbashi\nLusaka\nMalabo\nMaputo\nMaseru\nMbabane\nMogadishu\nMonrovia\nNairobi\nNdjamena\nNiamey\nNouakchott\nOuagadougou\nPorto-Novo\nSao_Tome\nTimbuktu\nTripoli\nTunis\nWindhoek\n\nthird/ocicl/systems/local-time-20250427-fea5b15/zoneinfo/right/America:\nAdak\nAnchorage\nAnguilla\nAntigua\nAraguaina\nArgentina\nAruba\nAsuncion\nAtikokan\nAtka\nBahia\nBahia_Banderas\nBarbados\nBelem\nBelize\nBlanc-Sablon\nBoa_Vista\nBogota\nBoise\nBuenos_Aires\nCambridge_Bay\nCampo_Grande\nCancun\nCaracas\nCatamarca\nCayenne\nCayman\nChicago\nChihuahua\nCiudad_Juarez\nCoral_Harbour\nCordoba\nCosta_Rica\nCreston\nCuiaba\nCuracao\nDanmarkshavn\nDawson\nDawson_Creek\nDenver\nDetroit\nDominica\nEdmonton\nEirunepe\nEl_Salvador\nEnsenada\nFortaleza\nFort_Nelson\nFort_Wayne\nGlace_Bay\nGodthab\nGoose_Bay\nGrand_Turk\nGrenada\nGuadeloupe\nGuatemala\nGuayaquil\nGuyana\nHalifax\nHavana\nHermosillo\nIndiana\nIndianapolis\nInuvik\nIqaluit\nJamaica\nJujuy\nJuneau\nKentucky\nKnox_IN\nKralendijk\nLa_Paz\nLima\nLos_Angeles\nLouisville\nLower_Princes\nMaceio\nManagua\nManaus\nMarigot\nMartinique\nMatamoros\nMazatlan\nMendoza\nMenominee\nMerida\nMetlakatla\nMexico_City\nMiquelon\nMoncton\nMonterrey\nMontevideo\nMontreal\nMontserrat\nNassau\nNew_York\nNipigon\nNome\nNoronha\nNorth_Dakota\nNuuk\nOjinaga\nPanama\nPangnirtung\nParamaribo\nPhoenix\nPort-au-Prince\nPorto_Acre\nPort_of_Spain\nPorto_Velho\nPuerto_Rico\nPunta_Arenas\nRainy_River\nRankin_Inlet\nRecife\nRegina\nResolute\nRio_Branco\nRosario\nSanta_Isabel\nSantarem\nSantiago\nSanto_Domingo\nSao_Paulo\nScoresbysund\nShiprock\nSitka\nSt_Barthelemy\nSt_Johns\nSt_Kitts\nSt_Lucia\nSt_Thomas\nSt_Vincent\nSwift_Current\nTegucigalpa\nThule\nThunder_Bay\nTijuana\nToronto\nTortola\nVancouver\nVirgin\nWhitehorse\nWinnipeg\nYakutat\nYellowknife\n\nthird/ocicl/systems/local-time-20250427-fea5b15/zoneinfo/right/America/Argentina:\nBuenos_Aires\nCatamarca\nComodRivadavia\nCordoba\nJujuy\nLa_Rioja\nMendoza\nRio_Gallegos\nSalta\nSan_Juan\nSan_Luis\nTucuman\nUshuaia\n\nthird/ocicl/systems/local-time-20250427-fea5b15/zoneinfo/right/America/Indiana:\nIndianapolis\nKnox\nMarengo\nPetersburg\nTell_City\nVevay\nVincennes\nWinamac\n\nthird/ocicl/systems/local-time-20250427-fea5b15/zoneinfo/right/America/Kentucky:\nLouisville\nMonticello\n\nthird/ocicl/systems/local-time-20250427-fea5b15/zoneinfo/right/America/North_Dakota:\nBeulah\nCenter\nNew_Salem\n\nthird/ocicl/systems/local-time-20250427-fea5b15/zoneinfo/right/Antarctica:\nCasey\nDavis\nDumontDUrville\nMacquarie\nMawson\nMcMurdo\nPalmer\nRothera\nSouth_Pole\nSyowa\nTroll\nVostok\n\nthird/ocicl/systems/local-time-20250427-fea5b15/zoneinfo/right/Arctic:\nLongyearbyen\n\nthird/ocicl/systems/local-time-20250427-fea5b15/zoneinfo/right/Asia:\nAden\nAlmaty\nAmman\nAnadyr\nAqtau\nAqtobe\nAshgabat\nAshkhabad\nAtyrau\nBaghdad\nBahrain\nBaku\nBangkok\nBarnaul\nBeirut\nBishkek\nBrunei\nCalcutta\nChita\nChoibalsan\nChongqing\nChungking\nColombo\nDacca\nDamascus\nDhaka\nDili\nDubai\nDushanbe\nFamagusta\nGaza\nHarbin\nHebron\nHo_Chi_Minh\nHong_Kong\nHovd\nIrkutsk\nIstanbul\nJakarta\nJayapura\nJerusalem\nKabul\nKamchatka\nKarachi\nKashgar\nKathmandu\nKatmandu\nKhandyga\nKolkata\nKrasnoyarsk\nKuala_Lumpur\nKuching\nKuwait\nMacao\nMacau\nMagadan\nMakassar\nManila\nMuscat\nNicosia\nNovokuznetsk\nNovosibirsk\nOmsk\nOral\nPhnom_Penh\nPontianak\nPyongyang\nQatar\nQostanay\nQyzylorda\nRangoon\nRiyadh\nSaigon\nSakhalin\nSamarkand\nSeoul\nShanghai\nSingapore\nSrednekolymsk\nTaipei\nTashkent\nTbilisi\nTehran\nTel_Aviv\nThimbu\nThimphu\nTokyo\nTomsk\nUjung_Pandang\nUlaanbaatar\nUlan_Bator\nUrumqi\nUst-Nera\nVientiane\nVladivostok\nYakutsk\nYangon\nYekaterinburg\nYerevan\n\nthird/ocicl/systems/local-time-20250427-fea5b15/zoneinfo/right/Atlantic:\nAzores\nBermuda\nCanary\nCape_Verde\nFaeroe\nFaroe\nJan_Mayen\nMadeira\nReykjavik\nSouth_Georgia\nStanley\nSt_Helena\n\nthird/ocicl/systems/local-time-20250427-fea5b15/zoneinfo/right/Australia:\nACT\nAdelaide\nBrisbane\nBroken_Hill\nCanberra\nCurrie\nDarwin\nEucla\nHobart\nLHI\nLindeman\nLord_Howe\nMelbourne\nNorth\nNSW\nPerth\nQueensland\nSouth\nSydney\nTasmania\nVictoria\nWest\nYancowinna\n\nthird/ocicl/systems/local-time-20250427-fea5b15/zoneinfo/right/Brazil:\nAcre\nDeNoronha\nEast\nWest\n\nthird/ocicl/systems/local-time-20250427-fea5b15/zoneinfo/right/Canada:\nAtlantic\nCentral\nEastern\nMountain\nNewfoundland\nPacific\nSaskatchewan\nYukon\n\nthird/ocicl/systems/local-time-20250427-fea5b15/zoneinfo/right/Chile:\nContinental\nEasterIsland\n\nthird/ocicl/systems/local-time-20250427-fea5b15/zoneinfo/right/Etc:\nGMT\nGMT+0\nGMT-0\nGMT0\nGMT+1\nGMT-1\nGMT+10\nGMT-10\nGMT+11\nGMT-11\nGMT+12\nGMT-12\nGMT-13\nGMT-14\nGMT+2\nGMT-2\nGMT+3\nGMT-3\nGMT+4\nGMT-4\nGMT+5\nGMT-5\nGMT+6\nGMT-6\nGMT+7\nGMT-7\nGMT+8\nGMT-8\nGMT+9\nGMT-9\nGreenwich\nUCT\nUniversal\nUTC\nZulu\n\nthird/ocicl/systems/local-time-20250427-fea5b15/zoneinfo/right/Europe:\nAmsterdam\nAndorra\nAstrakhan\nAthens\nBelfast\nBelgrade\nBerlin\nBratislava\nBrussels\nBucharest\nBudapest\nBusingen\nChisinau\nCopenhagen\nDublin\nGibraltar\nGuernsey\nHelsinki\nIsle_of_Man\nIstanbul\nJersey\nKaliningrad\nKiev\nKirov\nKyiv\nLisbon\nLjubljana\nLondon\nLuxembourg\nMadrid\nMalta\nMariehamn\nMinsk\nMonaco\nMoscow\nNicosia\nOslo\nParis\nPodgorica\nPrague\nRiga\nRome\nSamara\nSan_Marino\nSarajevo\nSaratov\nSimferopol\nSkopje\nSofia\nStockholm\nTallinn\nTirane\nTiraspol\nUlyanovsk\nUzhgorod\nVaduz\nVatican\nVienna\nVilnius\nVolgograd\nWarsaw\nZagreb\nZaporozhye\nZurich\n\nthird/ocicl/systems/local-time-20250427-fea5b15/zoneinfo/right/Indian:\nAntananarivo\nChagos\nChristmas\nCocos\nComoro\nKerguelen\nMahe\nMaldives\nMauritius\nMayotte\nReunion\n\nthird/ocicl/systems/local-time-20250427-fea5b15/zoneinfo/right/Mexico:\nBajaNorte\nBajaSur\nGeneral\n\nthird/ocicl/systems/local-time-20250427-fea5b15/zoneinfo/right/Pacific:\nApia\nAuckland\nBougainville\nChatham\nChuuk\nEaster\nEfate\nEnderbury\nFakaofo\nFiji\nFunafuti\nGalapagos\nGambier\nGuadalcanal\nGuam\nHonolulu\nJohnston\nKanton\nKiritimati\nKosrae\nKwajalein\nMajuro\nMarquesas\nMidway\nNauru\nNiue\nNorfolk\nNoumea\nPago_Pago\nPalau\nPitcairn\nPohnpei\nPonape\nPort_Moresby\nRarotonga\nSaipan\nSamoa\nTahiti\nTarawa\nTongatapu\nTruk\nWake\nWallis\nYap\n\nthird/ocicl/systems/local-time-20250427-fea5b15/zoneinfo/right/US:\nAlaska\nAleutian\nArizona\nCentral\nEastern\nEast-Indiana\nHawaii\nIndiana-Starke\nMichigan\nMountain\nPacific\nSamoa\n\nthird/ocicl/systems/local-time-20250427-fea5b15/zoneinfo/SystemV:\nAST4\nAST4ADT\nCST6\nCST6CDT\nEST5\nEST5EDT\nHST10\nMST7\nMST7MDT\nPST8\nPST8PDT\nYST9\nYST9YDT\n\nthird/ocicl/systems/local-time-20250427-fea5b15/zoneinfo/US:\nAlaska\nAleutian\nArizona\nCentral\nEastern\nEast-Indiana\nHawaii\nIndiana-Starke\nMichigan\nMountain\nPacific\nSamoa\n\nthird/ocicl/systems/mgl-pax-20250430-9cd609c:\n_00_OCICL_NAME\n_00_OCICL_VERSION\nCOPYING\ndref\nHACKING.md\nmgl-pax.asd\nmgl-pax.asdf.asd\nmgl-pax-bootstrap.asd\nmgl-pax-test.asd\nREADME\nREADME.md\nsrc\ntest\nTODO.org\nweb\n\nthird/ocicl/systems/mgl-pax-20250430-9cd609c/dref:\ndref.asd\ndref-test.asd\nREADME\nREADME.md\nsrc\ntest\n\nthird/ocicl/systems/mgl-pax-20250430-9cd609c/dref/src:\nbase\nfull\n\nthird/ocicl/systems/mgl-pax-20250430-9cd609c/dref/src/base:\nautoload.lisp\ndref.lisp\nearly.lisp\nextension-api.lisp\npackage.lisp\nutil.lisp\n\nthird/ocicl/systems/mgl-pax-20250430-9cd609c/dref/src/full:\ndoc.lisp\ndtype.lisp\nlate.lisp\nloaded.lisp\nlocatives.lisp\npackage.lisp\nsource-location.lisp\nswank-util.lisp\nutil.lisp\n\nthird/ocicl/systems/mgl-pax-20250430-9cd609c/dref/test:\npackage.lisp\ntest-autoload.lisp\ntest-defs.lisp\ntest.lisp\ntest-locate.lisp\ntest.sh\n\nthird/ocicl/systems/mgl-pax-20250430-9cd609c/src:\nasdf.lisp\nbase\nbootstrap\ndocument\nmgl-pax.el\nnavigate\ntranscribe\nweb\n\nthird/ocicl/systems/mgl-pax-20250430-9cd609c/src/base:\nautoload.lisp\ndocument-early.lisp\nextension-api.lisp\nfoo-random-example.lisp\nlocatives-early.lisp\npax.lisp\ntranscribe-early.lisp\nweb-early.lisp\n\nthird/ocicl/systems/mgl-pax-20250430-9cd609c/src/bootstrap:\nbasics.lisp\npackage.lisp\npax-world.lisp\n\nthird/ocicl/systems/mgl-pax-20250430-9cd609c/src/document:\nbrowse.lisp\ndocstring.lisp\ndocument.lisp\ndocument-object.lisp\ndocument-util.lisp\njquery.min.js\nmarkdown.lisp\nstream-spec.lisp\nurl.lisp\nutil.lisp\n\nthird/ocicl/systems/mgl-pax-20250430-9cd609c/src/navigate:\nhyperspec.lisp\nlocatives.lisp\nnavigate.lisp\npackage.lisp\nparse.lisp\nsections.lisp\nutil.lisp\n\nthird/ocicl/systems/mgl-pax-20250430-9cd609c/src/transcribe:\ntranscribe.lisp\n\nthird/ocicl/systems/mgl-pax-20250430-9cd609c/src/web:\nweb.lisp\n\nthird/ocicl/systems/mgl-pax-20250430-9cd609c/test:\ndata\ninc.md\nmgl-pax-tests.el\npackage.lisp\ntest-defs.lisp\ntest-document.lisp\ntest-el.sh\ntest-extension.lisp\ntest.lisp\ntest-navigate.lisp\ntest.sh\ntest-systems.asd\ntest-transcribe.lisp\ntest-util.lisp\n\nthird/ocicl/systems/mgl-pax-20250430-9cd609c/test/data:\ntranscribe-source.lisp\ntranscribe-transcription.lisp\n\nthird/ocicl/systems/mgl-pax-20250430-9cd609c/web:\ncharter\ndefault\nREADME\n\nthird/ocicl/systems/mgl-pax-20250430-9cd609c/web/charter:\njquery.min.js\nlive.js\nstyle.css\ntoc.min.js\nxcharter\nxeb-garamond\n\nthird/ocicl/systems/mgl-pax-20250430-9cd609c/web/charter/xcharter:\nREADME\nXCharter-Bold.otf\nxcharter.css\nXCharter-Italic.otf\nXCharter-Roman.otf\n\nthird/ocicl/systems/mgl-pax-20250430-9cd609c/web/charter/xeb-garamond:\nREADME\nxeb-garamond.css\nXEBGaramond-Regular.otf\n\nthird/ocicl/systems/mgl-pax-20250430-9cd609c/web/default:\njquery.min.js\nlive.js\nstyle.css\ntoc.min.js\n\nthird/ocicl/systems/named-readtables-20250423-b59cc4c:\n_00_OCICL_NAME\n_00_OCICL_VERSION\nLICENSE\nnamed-readtables.asd\nnamed-readtables-test.asd\nREADME.md\nsrc\ntest\n\nthird/ocicl/systems/named-readtables-20250423-b59cc4c/src:\ncruft.lisp\ndefine-api.lisp\ndoc.lisp\nnamed-readtables.lisp\npackage.lisp\nutils.lisp\n\nthird/ocicl/systems/named-readtables-20250423-b59cc4c/test:\npackage.lisp\ntests.lisp\n\nthird/ocicl/systems/parse-declarations-20240503-549aebb:\n_00_OCICL_VERSION\ndoc\nLICENSE\nparse-declarations-1.0.asd\nparse-declarations.lisp\ntests.lisp\n\nthird/ocicl/systems/parse-declarations-20240503-549aebb/doc:\ncolorize-lisp-examples.lisp\ngendocs.sh\ngendocs_template\nMakefile\nparse-declarations.texinfo\nstyle.css\n\nthird/ocicl/systems/parse-number-20240503-cb9e487:\n_00_OCICL_VERSION\nparse-number.asd\nparse-number.lisp\nREADME\ntests.lisp\nversion.sexp\n\nthird/ocicl/systems/path-parse-20240503-86183f3:\n_00_OCICL_VERSION\npath-parse.asd\npath-parse-test.asd\nREADME.md\nsrc\nt\n\nthird/ocicl/systems/path-parse-20240503-86183f3/src:\npath-parse.lisp\n\nthird/ocicl/systems/path-parse-20240503-86183f3/t:\npath-parse.lisp\n\nthird/ocicl/systems/proc-parse-20240503-3afe2b7:\n_00_OCICL_VERSION\nLICENSE.txt\nproc-parse.asd\nproc-parse-test.asd\nREADME.markdown\nsrc\nt\n\nthird/ocicl/systems/proc-parse-20240503-3afe2b7/src:\nproc-parse.lisp\n\nthird/ocicl/systems/proc-parse-20240503-3afe2b7/t:\nproc-parse.lisp\n\nthird/ocicl/systems/pythonic-string-reader-20240503-47a70ba:\n_00_OCICL_VERSION\nCOPYING\npythonic-string-reader.asd\npythonic-string-reader.lisp\nREADME.org\n\nthird/ocicl/systems/quri-0.7.0:\ndata\nquri.asd\nquri-test.asd\nREADME.markdown\nsrc\nt\n\nthird/ocicl/systems/quri-0.7.0/data:\neffective_tld_names.dat\n\nthird/ocicl/systems/quri-0.7.0/src:\ndecode.lisp\ndomain.lisp\nencode.lisp\nerror.lisp\netld.lisp\nparser.lisp\nport.lisp\nquri.lisp\nuri\nuri.lisp\nutil.lisp\n\nthird/ocicl/systems/quri-0.7.0/src/uri:\nfile.lisp\nftp.lisp\nhttp.lisp\nldap.lisp\n\nthird/ocicl/systems/quri-0.7.0/t:\nbenchmark.lisp\ndecode.lisp\ndomain.lisp\nencode.lisp\netld.lisp\nparser.lisp\nquri.lisp\n\nthird/ocicl/systems/salza2-2.1:\nadler32.lisp\nbitstream.lisp\nchains.lisp\nchecksum.lisp\nclosures.lisp\ncompress.lisp\ncompressor.lisp\ncrc32.lisp\ndoc\ngzip.lisp\nhuffman.lisp\nLICENSE.txt\nmatches.lisp\npackage.lisp\nREADME.txt\nreset.lisp\nsalza2.asd\nspecials.lisp\nstream.lisp\ntest\ntypes.lisp\nuser.lisp\nutilities.lisp\nzlib.lisp\n\nthird/ocicl/systems/salza2-2.1/doc:\nCOPYING.txt\nindex.html\n\nthird/ocicl/systems/salza2-2.1/test:\npackage.lisp\nstream.lisp\n\nthird/ocicl/systems/serapeum-20250427-29d57e9:\n_00_OCICL_NAME\n_00_OCICL_VERSION\narrays.lisp\nbinding.lisp\nbox.lisp\nclos.lisp\nconditions.lisp\ncontrol-flow.lisp\ndefining-types.lisp\ndefinitions.lisp\ndispatch-case.lisp\ndocs.lisp\nexporting.lisp\nfbind.lisp\nfiles.lisp\nfunctions.lisp\ngeneralized-arrays.lisp\ngeneralized-arrays.md\nhash-tables.lisp\nheap.lisp\nhooks.lisp\ninternal-definitions.lisp\niter.lisp\nLICENSE.txt\nlists.lisp\nmacro-tools.lisp\nMakefile\nmop.lisp\nnumbers.lisp\noctets.lisp\nop.lisp\nop.md\npackage.lisp\npackages.lisp\nportability.lisp\nqueue.lisp\nqueue.md\nrange.lisp\nrange.md\nreader.lisp\nREADME.md\nREFERENCE.md\nsequences.lisp\nserapeum.asd\nstatic-let.lisp\nstrings.lisp\nsymbols.lisp\ntests\nthreads.lisp\ntime.lisp\ntree-case.lisp\ntrees.lisp\ntypes.lisp\nunits.lisp\nvector=.lisp\nvectors.lisp\n\nthird/ocicl/systems/serapeum-20250427-29d57e9/tests:\narrays.lisp\nbinding.lisp\nbox.lisp\nclos.lisp\nconditions.lisp\ncontrol-flow.lisp\ndefining-types-aux.lisp\ndefining-types.lisp\ndefinitions.lisp\ndispatch-case.lisp\nfbind.lisp\nfiles.lisp\nfunctions.lisp\ngeneralized-arrays.lisp\nhash-tables.lisp\nhooks.lisp\ninternal-definitions.lisp\niteration.lisp\nlists.lisp\nmacro-tools.lisp\nmop.lisp\nnumbers.lisp\noctets.lisp\nop.lisp\npackage.lisp\npackages.lisp\nportability.lisp\nqueue.lisp\nrange.lisp\nsequences.lisp\nstatic-let.lisp\nstrings.lisp\nsymbols.lisp\ntests.lisp\nthreads.lisp\ntime.lisp\ntree-case.lisp\ntrees.lisp\ntypes.lisp\nunits.lisp\nvector=.lisp\nvectors.lisp\n\nthird/ocicl/systems/smart-buffer-20240503-619759d:\n_00_OCICL_VERSION\nREADME.markdown\nsmart-buffer.asd\nsmart-buffer-test.asd\nsrc\nt\n\nthird/ocicl/systems/smart-buffer-20240503-619759d/src:\nsmart-buffer.lisp\n\nthird/ocicl/systems/smart-buffer-20240503-619759d/t:\nsmart-buffer.lisp\n\nthird/ocicl/systems/split-sequence-2.0.1:\napi.lisp\ndocumentation.lisp\nextended-sequence.lisp\nLICENSE\nlist.lisp\noriginal-message.txt\npackage.lisp\nREADME.md\nsplit-sequence.asd\ntests.lisp\nvector.lisp\nversion.sexp\n\nthird/ocicl/systems/static-vectors-20240624-3d9d89b:\n_00_OCICL_NAME\n_00_OCICL_VERSION\nLICENCE\nREADME\nsrc\nstatic-vectors.asd\ntests\nversion.sexp\n\nthird/ocicl/systems/static-vectors-20240624-3d9d89b/src:\ncffi-type-translator.lisp\nconstantp.lisp\nconstructor.lisp\nffi-types.lisp\nimpl-abcl.lisp\nimpl-allegro.lisp\nimpl-clasp.lisp\nimpl-clozure.lisp\nimpl-cmucl.lisp\nimpl-ecl.lisp\nimpl-lispworks.lisp\nimpl-sbcl.lisp\npkgdcl.lisp\n\nthird/ocicl/systems/static-vectors-20240624-3d9d89b/tests:\nstatic-vectors-tests.lisp\n\nthird/ocicl/systems/string-case-20240503-718c761:\n_00_OCICL_VERSION\nLICENSE\nstring-case.asd\nstring-case.lisp\n\nthird/ocicl/systems/swap-bytes-20240503-43ab141:\n_00_OCICL_VERSION\nccl.lisp\nendianness.lisp\nLICENCE\nnetwork.lisp\npackage.lisp\nportable.lisp\nREADME.md\nsbcl-defknowns.lisp\nsbcl.lisp\nsbcl-vops.lisp\nswap-bytes.asd\ntest.lisp\nversion.sexp\n\nthird/ocicl/systems/trivia-20240904-4383dd8:\n_00_OCICL_NAME\n_00_OCICL_VERSION\nballand2006\nbench\nbenchmark.org\ncffi\ncircle.yml\nfset\nlevel0\nlevel1\nlevel2\nLICENSE\nppcre\nquasiquote\nREADME.org\ntest\ntestscr.ros\ntrivia.asd\ntrivia.balland2006.asd\ntrivia.benchmark.asd\ntrivia.cffi.asd\ntrivia.fset.asd\ntrivia.level0.asd\ntrivia.level1.asd\ntrivia.level2.asd\ntrivia.ppcre.asd\ntrivia.quasiquote.asd\ntrivia.test.asd\ntrivia.trivial.asd\n\nthird/ocicl/systems/trivia-20240904-4383dd8/balland2006:\ncolumn-swapping.lisp\noptimizer.lisp\npackage.lisp\nREADME.org\nt\n\nthird/ocicl/systems/trivia-20240904-4383dd8/balland2006/t:\npackage.lisp\n\nthird/ocicl/systems/trivia-20240904-4383dd8/bench:\ndebug.lisp\ndefinitions.lisp\npackage.lisp\nrun.lisp\n\nthird/ocicl/systems/trivia-20240904-4383dd8/cffi:\ncffi.lisp\n\nthird/ocicl/systems/trivia-20240904-4383dd8/fset:\npackage.lisp\n\nthird/ocicl/systems/trivia-20240904-4383dd8/level0:\nimpl.lisp\npackage.lisp\n\nthird/ocicl/systems/trivia-20240904-4383dd8/level1:\nimpl.lisp\npackage.lisp\n\nthird/ocicl/systems/trivia-20240904-4383dd8/level2:\narrays.lisp\nderived2.lisp\nderived3.lisp\nderived-class.lisp\nderived.lisp\nderived-numbers.lisp\ndocparser-interface.lisp\nimpl.lisp\ninline-pattern.lisp\npackage.lisp\nsugars.lisp\n\nthird/ocicl/systems/trivia-20240904-4383dd8/ppcre:\npackage.lisp\n\nthird/ocicl/systems/trivia-20240904-4383dd8/quasiquote:\nquasiquote.lisp\n\nthird/ocicl/systems/trivia-20240904-4383dd8/test:\nbase.lisp\ncffi.lisp\nfset.lisp\nlevel0.lisp\nlevel1.lisp\nlevel2.lisp\nppcre.lisp\nquasiquote.lisp\n\nthird/ocicl/systems/trivial-cltl2-20230809-2ada872:\n_00_OCICL_VERSION\nallegro.lisp\ncltl2.lisp\nREADME.md\ntrivial-cltl2.asd\n\nthird/ocicl/systems/trivial-features-1.0:\nCOPYRIGHT\nREADME.md\nrelease.lisp\nSPEC.md\nsrc\ntests\ntrivial-features.asd\ntrivial-features-tests.asd\n\nthird/ocicl/systems/trivial-features-1.0/src:\ntf-abcl.lisp\ntf-allegro.lisp\ntf-clasp.lisp\ntf-clisp.lisp\ntf-cmucl.lisp\ntf-corman.lisp\ntf-ecl.lisp\ntf-genera.lisp\ntf-lispworks.lisp\ntf-mcl.lisp\ntf-mezzano.lisp\ntf-mkcl.lisp\ntf-mocl.lisp\ntf-openmcl.lisp\ntf-sbcl.lisp\ntf-scl.lisp\ntf-xcl.lisp\n\nthird/ocicl/systems/trivial-features-1.0/tests:\npackage.lisp\nsysinfo.lisp\ntests.lisp\nutsname.lisp\n\nthird/ocicl/systems/trivial-file-size-20250427-60fd1bf:\n_00_OCICL_NAME\n_00_OCICL_VERSION\nLICENSE.txt\npackage.lisp\nREADME.md\ntests\ntests.lisp\ntrivial-file-size.asd\ntrivial-file-size.lisp\n\nthird/ocicl/systems/trivial-file-size-20250427-60fd1bf/tests:\nempty-file\none-byte-file\ntwo-byte-file\n\nthird/ocicl/systems/trivial-garbage-20240503-3474f64:\n_00_OCICL_VERSION\nbuild.xcvb\ndoc\ngendocs.lisp\nREADME.md\nrelease.lisp\ntests.lisp\ntrivial-garbage.asd\ntrivial-garbage.lisp\n\nthird/ocicl/systems/trivial-garbage-20240503-3474f64/doc:\nindex.css\n\nthird/ocicl/systems/trivial-gray-streams-20240503-a7ead68:\n_00_OCICL_VERSION\nbuild.xcvb\nCOPYING\nMakefile\npackage.lisp\nREADME\nstreams.lisp\ntest\ntrivial-gray-streams.asd\ntrivial-gray-streams-test.asd\n\nthird/ocicl/systems/trivial-gray-streams-20240503-a7ead68/test:\npackage.lisp\nrun-on-many-lisps.lisp\ntest-framework.lisp\ntest.lisp\n\nthird/ocicl/systems/trivial-indent-20250106-fc7380b:\n_00_OCICL_NAME\n_00_OCICL_VERSION\ndocs\nindent.lisp\nLICENSE\nREADME.md\ntrivial-indent.asd\n\nthird/ocicl/systems/trivial-indent-20250106-fc7380b/docs:\nindex.html\n\nthird/ocicl/systems/trivial-macroexpand-all-20240503-933270a:\n_00_OCICL_VERSION\nLICENSE\npackage.lisp\nREADME.md\ntrivial-macroexpand-all.asd\ntrivial-macroexpand-all.lisp\n\nthird/ocicl/systems/trivial-mimes-20250127-01cb46b:\n_00_OCICL_NAME\n_00_OCICL_VERSION\ndocs\nLICENSE\nmime.types\nmime-types.lisp\nREADME.md\ntrivial-mimes.asd\n\nthird/ocicl/systems/trivial-mimes-20250127-01cb46b/docs:\nindex.html\n\nthird/ocicl/systems/type-i-20240503-4407a68:\n_00_OCICL_VERSION\nREADME.org\nsrc\nt\ntestscr.ros\ntype-i.asd\ntype-i.test.asd\n\nthird/ocicl/systems/type-i-20240503-4407a68/src:\ninfer-compound.lisp\ninfer-constants.lisp\ninfer-derived.lisp\ninfer-numbers.lisp\ninfer-typep.lisp\ninfer-unary.lisp\npackage.lisp\n\nthird/ocicl/systems/type-i-20240503-4407a68/t:\npackage.lisp\n\nthird/ocicl/systems/unix-opts-0.1.7:\nCHANGELOG.md\nexample\nLICENSE.md\nREADME.md\ntests.lisp\nunix-opts.asd\nunix-opts.lisp\nunix-opts-tests.asd\n\nthird/ocicl/systems/unix-opts-0.1.7/example:\nexample.lisp\nexample.sh\n\nthird/ocicl/systems/unix-opts-20250319-0e61f34:\n_00_OCICL_NAME\n_00_OCICL_VERSION\nCHANGELOG.md\nexample\nLICENSE.md\nREADME.md\nrun-tests.bash\ntests.lisp\ntravis-install.bash\nunix-opts.asd\nunix-opts.lisp\n\nthird/ocicl/systems/unix-opts-20250319-0e61f34/example:\nexample.lisp\nexample.sh\n\nthird/ocicl/systems/usocket-0.8.8:\nbackend\nCHANGES\ncondition.lisp\nCONTRIBUTORS\ndocker\ndoc-src\nLICENSE\nnotes\noption.lisp\npackage.lisp\nREADME.md\nserver.lisp\ntests\nusocket.asd\nusocket.lisp\nusocket-server.asd\nusocket.system\nusocket-test.asd\nvendor\nversion.sexp\n\nthird/ocicl/systems/usocket-0.8.8/backend:\nabcl.lisp\nallegro.lisp\nclasp.lisp\nclisp.lisp\nclozure.lisp\ncmucl.lisp\necl.lisp\ngenera.lisp\niolib.lisp\nlispworks.lisp\nmcl.lisp\nmezzano.lisp\nmocl.lisp\nopenmcl.lisp\nsbcl.lisp\nscl.lisp\n\nthird/ocicl/systems/usocket-0.8.8/docker:\nDockerfile\nMakefile\n\nthird/ocicl/systems/usocket-0.8.8/doc-src:\nintro.dita\nreference.dita\nSettings.sts\nusocket.ditamap\n\nthird/ocicl/systems/usocket-0.8.8/notes:\nabcl-socket.txt\nactive-sockets-apis.txt\naddress-apis.txt\nallegro-socket.txt\nbackends.txt\nclisp-sockets.txt\ncmucl-sockets.txt\ndesign.txt\nerrors.txt\nlw-sockets.txt\nopenmcl-sockets.txt\nREADME.md\nsb-bsd-sockets.txt\nusock-sockets.txt\n\nthird/ocicl/systems/usocket-0.8.8/tests:\npackage.lisp\ntest-condition.lisp\ntest-datagram.lisp\ntest-timeout.lisp\ntest-usocket.lisp\nudp-one-shot.lisp\nwait-for-input.lisp\n\nthird/ocicl/systems/usocket-0.8.8/vendor:\nkqueue.lisp\nOpenTransportUDP.lisp\n\nthird/ocicl/systems/which-20240503-b2333e4:\n_00_OCICL_VERSION\nREADME.md\nsrc\nt\nwhich.asd\nwhich-test.asd\n\nthird/ocicl/systems/which-20240503-b2333e4/src:\nwhich.lisp\n\nthird/ocicl/systems/which-20240503-b2333e4/t:\nwhich.lisp\n\nthird/ocicl/systems/winhttp-20240503-8611ba5:\n_00_OCICL_VERSION\nexamples\nffi.lisp\nLICENSE\npackage.lisp\nREADME.md\nutil.lisp\nwinhttp.asd\n\nthird/ocicl/systems/winhttp-20240503-8611ba5/examples:\nwebsocket.lisp\nxmlrpc.lisp\n\nthird/ocicl/systems/with-user-abort-20240503-a3db02e:\n_00_OCICL_VERSION\nmain.lisp\npackage.lisp\nREADME.md\nwith-user-abort.asd\n\nthird/ocicl/systems/xsubseq-20240503-5ce430b:\n_00_OCICL_VERSION\nREADME.markdown\nsrc\nt\nxsubseq.asd\nxsubseq-test.asd\n\nthird/ocicl/systems/xsubseq-20240503-5ce430b/src:\nxsubseq.lisp\n\nthird/ocicl/systems/xsubseq-20240503-5ce430b/t:\nbenchmark.lisp\nxsubseq.lisp\n","annotations":{"audience":["user"],"priority":0.0}}]}}]}
{"role":"assistant","created":1746300382,"content":[{"type":"text","text":"Let's examine NRDL's main source code to understand its structure and implementation approach:"},{"type":"toolRequest","id":"toolu_017DJ3hSbFpPsAaooNGXevYZ","toolCall":{"status":"success","value":{"name":"developer__text_editor","arguments":{"command":"view","path":"/home/skin/Code/skin/nrdl/cl/main.lisp"}}}}]}
{"role":"user","created":1746300382,"content":[{"type":"toolResponse","id":"toolu_017DJ3hSbFpPsAaooNGXevYZ","toolResult":{"status":"success","value":[{"type":"resource","resource":{"uri":"file:///home/skin/Code/skin/nrdl/cl/main.lisp","mime_type":"text","text":";;;; main.lisp -- Reference Implementation Parser for NRDL in Common Lisp\n;;;;\n;;;; SPDX-FileCopyrightText: 2024 Daniel Jay Haskin\n;;;; SPDX-License-Identifier: MIT\n;;;;\n\n#+(or)\n(progn\n  (declaim (optimize (speed 0) (space 0) (debug 3)))\n           (asdf:load-system \"alexandria\"))\n\n\n(in-package #:cl-user)\n\n(defpackage\n  #:com.djhaskin.nrdl (:use #:cl)\n  (:documentation\n    \"\n    Nestable Readable Document Language\n    \")\n    (:import-from #:alexandria)\n    (:export\n      extraction-error\n      parse-from\n      generate-to\n      nested-to-alist\n      string-symbol\n      symbol-string\n      *symbol-package*\n      *symbol-deserialize-case*\n      *symbol-serialize-case*))\n\n(in-package #:com.djhaskin.nrdl)\n\n(defconstant +eof+ :eof)\n\n(deftype streamable ()\n  '(or boolean stream))\n\n(deftype streamed ()\n  `(or character (member ,+eof+)))\n\n(defun nameof (c)\n  (cond\n    ((eq c +eof+)\n     \"EOF\")\n    ((typep c 'character)\n     (format nil \"~:C\" c))\n    (t\n     (format nil \"~A\" c))))\n\n(define-condition extraction-error (error)\n  ((expected :initarg :expected :reader expected)\n   (got :initarg :got :reader got))\n  (:report\n   (lambda (c s)\n     (let* ((gotc (got c))\n            (gotc-title (nameof gotc))\n            (expected (expected c)))\n       (format s\n             \"Expected ~v[nothing~;~:;one of ~]~{`~A`~^~#[~; or ~:;, ~]~}; got `~A`\"\n             (length expected)\n             (mapcar #'nameof expected)\n             gotc-title)))))\n\n(defun peek-chr (strm)\n  (declare (type streamable strm))\n  (peek-char nil strm nil +eof+ nil))\n\n(defun read-chr (strm)\n  (declare (type streamable strm))\n  (read-char strm nil +eof+ nil))\n\n(defun must-read-chr (strm)\n  (declare (type streamable strm))\n  (read-char strm))\n\n(defun number-start-p (chr)\n  (declare (type character chr))\n  (or\n    (char= chr #\\-)\n    (char= chr #\\.)\n    (digit-char-p chr)))\n\n(defun number-char-p (chr)\n  (declare (type character chr))\n  (or\n    (number-start-p chr)\n    (char= chr #\\+)\n    (char= chr #\\E)\n    (char= chr #\\e)))\n\n#+(or)\n(equal\n  (build-string '(#\\c #\\b #\\a))\n  \"abc\")\n#+or\n(equal (build-string nil) \"\")\n\n(defun build-string (lst)\n  (declare (type list lst))\n  (let* ((size (length lst))\n         (building (make-string size)))\n    (loop for l in lst\n          for j from (- size 1) downto 0\n          do\n          (setf (elt building j) l))\n    building))\n\n(defun extract-number (strm chr)\n  (declare (type streamable strm)\n           (type streamed chr))\n  (let ((building nil)\n        (last-read chr))\n    (loop while (and\n                  (not (eq last-read +eof+))\n                  (number-char-p last-read))\n          do\n          (push last-read building)\n          (read-chr strm)\n          (setf last-read (peek-chr strm)))\n    (read-from-string (build-string building) nil nil)))\n\n(defun extract-quoted\n  (strm chr quote-char)\n  (declare (type streamable strm)\n           (type streamed chr)\n           (type character quote-char))\n  (declare (ignore chr))\n  (must-read-chr strm)\n  (let ((last-read (must-read-chr strm))\n        (building nil))\n    (loop while (and (not (eq last-read +eof+))\n                     (char/= last-read quote-char))\n          do\n          (if (char= last-read #\\\\)\n            (progn\n              (setf last-read (must-read-chr strm))\n              (cond\n                    ((eql last-read quote-char)\n                     (push quote-char building))\n                    ((char= last-read #\\\\)\n                     (push last-read building))\n                    ((char= last-read #\\/)\n                     (push last-read building))\n                    ((char= last-read #\\b)\n                     (push #\\Backspace building))\n                     ((char= last-read #\\f)\n                      (push #\\Page building))\n                     ((char= last-read #\\n)\n                      (push #\\Newline building))\n                     ((char= last-read #\\r)\n                      (push #\\Return building))\n                     ((char= last-read #\\t)\n                      (push #\\Tab building))\n                     ((char= last-read #\\u)\n                      (push\n                        (code-char\n                          (let ((build-ordinal (make-string 6)))\n                            (setf (elt build-ordinal 0) #\\#)\n                            (setf (elt build-ordinal 1) #\\X)\n                            (setf (elt build-ordinal 2) (must-read-chr strm))\n                            (setf (elt build-ordinal 3) (must-read-chr strm))\n                            (setf (elt build-ordinal 4) (must-read-chr strm))\n                            (setf (elt build-ordinal 5) (must-read-chr strm))\n                            (read-from-string build-ordinal nil nil)))\n                        building))\n                     (t (error\n                          'extraction-error\n                          :expected\n                          '(#\\\"\n                            #\\\\\n                            #\\/\n                            #\\b\n                            #\\f\n                            #\\n\n                            #\\r\n                            #\\t\n                            #\\u)\n                          :got \n                               last-read))))\n            (push last-read building))\n          (setf last-read (must-read-chr strm)))\n    (build-string building)))\n\n(defconstant +start-verbatim+ #\\|)\n(defconstant +start-prose+ #\\>)\n(defconstant +start-comment+ #\\#)\n\n(defun blankspace-p (chr)\n  (declare (type character chr))\n  (or\n    (char= chr #\\Tab)\n    (char= chr #\\Space)\n    ))\n\n(defun whitespace-p (chr)\n  (declare (type character chr))\n    (or\n      (char= chr #\\Newline)\n      (char= chr #\\Return)\n      (char= chr #\\Page)\n      (blankspace-p chr)))\n\n(defun sepchar-p (chr)\n  (declare (type character chr))\n  (or (whitespace-p chr)\n      (char= chr #\\,)\n      (char= chr #\\:)))\n\n(defun guarded-sepchar-p (chr)\n  (declare (type (or null character) chr))\n    (unless (null chr)\n      (sepchar-p chr)))\n\n(defun guarded-blankspace-p (chr)\n  (declare (type (or null character) chr))\n    (unless (null chr)\n      (blankspace-p chr)))\n\n(defun extract-comment (strm)\n  (declare (type streamable strm))\n  (loop with last-read = (read-chr strm)\n        while (and\n                (not (eq last-read +eof+))\n                (not (char= last-read #\\Newline)))\n        do\n        (setf last-read (read-chr strm))\n        finally\n        (return last-read)))\n\n(defun extract-sep (strm chr pred)\n  (declare (type streamable strm)\n           (type streamed chr)\n           (type function pred))\n  (loop with just-read = nil\n        with next = chr\n    do\n    (cond\n      ((eq next +eof+)\n       (return just-read))\n      ((eql next +start-comment+)\n       (setf just-read (extract-comment strm)))\n      ((funcall pred next)\n       (setf just-read (must-read-chr strm)))\n      (t\n        (return just-read)))\n    (setf next (peek-chr strm))))\n\n(defun extract-list-sep (strm chr)\n  (declare (type streamable strm)\n           (type streamed chr))\n  (extract-sep strm chr #'guarded-sepchar-p))\n\n(defun extract-blob-sep (strm chr)\n  (declare (type streamable strm)\n           (type streamed chr))\n  (extract-sep strm chr #'guarded-blankspace-p))\n#|\n(extract-multiline-blob t #\\|)\n|one\n#and then\n    # some of\n        #\n   | two\n#this\n|  three\n\n(extract-multiline-blob t #\\>)\n>one\n#and then\n    # some of\n        #\n   > two\n#this\n>  three\n\n|#\n\n(defun extract-multiline-blob (strm chr)\n  \"\n  Grabs the string after the multiline marker\n  and grabs subsequent prefixed strings\n  until a non-prefix character, EOF, or two new-lines in a row.\n  \"\n  (declare (type streamable strm)\n           (type streamed chr))\n  (loop named toplevel\n        with last-read = nil\n        with next = chr\n        with building = nil\n        while (and\n                (not (eq next +eof+))\n                (eql next chr)\n                (not (char= next #\\^)))\n        do\n        (setf last-read (read-chr strm))\n        (setf next (peek-chr strm))\n        (loop named getline\n              while (and (not (eq next +eof+))\n                         (not (char= next #\\Newline)))\n              do\n              (setf last-read (read-chr strm))\n              (push last-read building)\n              (setf next (peek-chr strm)))\n        (when (eq next +eof+)\n          (return-from toplevel\n                       (build-string building)))\n        (setf last-read (read-chr strm))\n        (if (eql chr +start-verbatim+)\n          (push last-read building)\n          (push #\\Space building))\n        (let ((sep-result\n                (extract-blob-sep strm (peek-chr strm))))\n          (when sep-result\n            (setf last-read sep-result)))\n        (setf next (peek-chr strm))\n\n        finally (progn\n                  (unless (char= next #\\^)\n                    (error 'extraction-error :expected #\\^ :got next))\n                  (read-chr strm)\n                  (return-from toplevel (build-string (cdr building))))))\n\n(defun extract-quoted-blob (strm chr)\n  (declare (type streamable strm)\n           (type streamed chr))\n  (extract-quoted strm chr #\\\"))\n\n#+(or)\n(do\n  (string-invertcase \"\")\n  (string-invertcase \"A\")\n  (string-invertcase \"a\")\n  (string-invertcase \" \")\n  (string-invertcase \"my heart's a stereo\")\n  (string-invertcase \"My heart's a stereo\"))\n\n(defun string-invertcase\n  (str)\n  (declare (type string str))\n  (let ((operable (remove-if-not #'both-case-p str)))\n    (if (= (length operable) 0)\n      str\n      (let* ((first-upper-case (upper-case-p (elt operable 0)))\n             (uneven-case\n               (when (> (length operable) 1)\n                      (reduce\n                        (lambda (c v)\n                          (or c v))\n                        (map\n                          'vector\n                          (lambda (x)\n                            (not (eql (upper-case-p x) first-upper-case)))\n                          (subseq operable 1))))))\n        (if uneven-case\n          str\n          (if first-upper-case\n            (string-downcase str)\n            (string-upcase str)))))))\n\n;;; Variable used to determine the case of a string\n;;; used for the name of a new symbol upon deserialization.\n;;;\n;;; Set to `(readtable-case *readtable*)` by default.\n(defparameter *symbol-deserialize-case*\n  (readtable-case *readtable*))\n\n;;; Variable used to determine the case of a string\n;;; generated from the name of a symbol upon serialization.\n;;; Can have the same values as the output of `readtable-case`:\n;;; `:upcase`, `:downcase`, `:preserve`, and `:invert`,\n;;; with the same effects.\n;;;\n;;; Unlike its cousin, I can't just give this thing a\n;;; default based on the readtable,\n;;;\n;;; and the printer has no notion of this. It just prints whatever case\n;;; was given originally. In effect, the printer is set to `:preserve` by\n;;; default.\n;;;\n;;; This is a default which is not useful in my case, I think.\n;;;\n;;; Therefore, by default, it will be set to `:downcase`, which addresses\n;;; a much more common need.\n(defparameter *symbol-serialize-case*\n  :downcase)\n\n(defun\n  symbol-string-prep (str case-guide)\n  \"\n  Attempts to prepare a string for interning according to the normal\n  ANSI rules for internment of literal symbols.\n  \"\n  (declare (type string str)\n           (type keyword case-guide))\n  (cond ((eql case-guide :upcase) (string-upcase str))\n        ((eql case-guide :downcase) (string-downcase str))\n        ((eql case-guide :preserve) str)\n        ((eql case-guide :invert) (string-invertcase str))\n        (t (string-upcase str))))\n\n(defparameter *symbol-package* (find-package :KEYWORD))\n\n(defun\n  string-symbol (str &optional (case-guide *symbol-deserialize-case*))\n  \"\n  Creates a keyword from a string.\n\n  Creates a keyword following `(readtable-case *readtable*)` rules.\n\n  If this package's var `*symbol-case*` is `:upcase`, the string is upcased.\n  If it is `:downcase`, the string is downcased.\n  If it is `:preserve`, the string's case is preserved.\n  If it is `:invert`, the string's case is inverted as long as all caseable\n  characters are already of uniform case.\n\n  The variable `*symbol-case*` takes as its default the current value of\n  `(readtable-case *readtable*)` at package load time.\n  \"\n  (declare (type string str)\n           (type keyword case-guide))\n  (intern\n    (symbol-string-prep str case-guide)\n    *symbol-package*))\n\n(defun symbol-string\n  (sym &optional (case-guide *symbol-serialize-case*))\n  (declare (type symbol sym)\n           (type keyword case-guide))\n  (cond ((eql sym 't) \"true\")\n        ((eql sym 'nil) \"false\")\n        ((eql sym 'cl:null) \"null\")\n        (t (symbol-string-prep (symbol-name sym) case-guide))))\n\n(defun bareword-start-p (chr)\n  (declare (type streamed chr))\n  (or\n    (and (typep chr 'character)\n         (alpha-char-p chr))\n    (char= chr #\\_)\n    (char= chr #\\=)\n    (char= chr #\\>)\n    (char= chr #\\@)\n    (char= chr #\\$)\n    (char= chr #\\%)\n    (char= chr #\\&)\n    (char= chr #\\*)\n    (char= chr #\\+)\n    (char= chr #\\/)\n    (char= chr #\\=)))\n\n(defun bareword-middle-p (chr)\n  (declare (type streamed chr))\n  (or\n    (bareword-start-p chr)\n    (and (typep chr 'character)\n         (digit-char-p chr))\n    (char= chr #\\<)\n    (char= chr #\\!)\n    (char= chr #\\?)\n    (char= chr #\\.)\n    (char= chr #\\-)))\n\n(defun convert-to-symbol (final-string)\n  (declare (type string final-string))\n  (cond ((string= final-string \"t\")\n                  t)\n        ((string= final-string \"nil\")\n         'cl:null)\n        ((string= final-string \"true\")\n         t)\n        ((string= final-string \"false\")\n         nil)\n        ((string= final-string \"null\")\n         'cl:null)\n        (t (string-symbol final-string))))\n\n(defun extract-bare-symbol (strm chr)\n  (declare (type streamable strm)\n           (type streamed chr))\n  (loop with building = nil\n        with last-read = nil\n        with next = chr\n        while (and\n                (not (eq next +eof+))\n                (bareword-middle-p next))\n        do\n        (setf last-read (read-chr strm))\n        (push last-read building)\n        (setf next (peek-chr strm))\n        finally\n        (return\n          (convert-to-symbol (build-string building)))))\n\n(defun extract-quoted-symbol (strm chr)\n  (declare (type streamable strm)\n           (type streamed chr))\n  (convert-to-symbol\n    (extract-quoted strm chr #\\`)))\n\n(defun extract-value (strm chr)\n  (declare (type streamable strm)\n           (type streamed chr))\n  (cond\n    ((eq chr +eof+) (error\n                      'extraction-error\n                      :expected\n                      '(#\\{\n                        #\\[\n                        #\\\"\n                        #\\`\n                        +start-verbatim+\n                        +start-prose+\n                        \"start of number\"\n                        \"start of bareword\")\n                      :got\n                      +eof+))\n    ((char= chr #\\{)\n     (extract-hash strm chr))\n    ((char= chr #\\[)\n     (extract-array strm chr))\n    ((char= chr #\\\")\n     (extract-quoted-blob strm chr))\n    ((char= chr #\\`)\n     (extract-quoted-symbol strm chr))\n    ((or\n       (eql chr +start-verbatim+)\n       (eql chr +start-prose+))\n     (extract-multiline-blob strm chr))\n    ((number-start-p chr)\n     (extract-number strm chr))\n    ((bareword-start-p chr)\n     (extract-bare-symbol strm chr))\n    (t (error\n         'extraction-error\n         :expected\n         '(#\\{\n           #\\[\n           #\\\"\n           #\\`\n           +start-verbatim+\n           +start-prose+\n           \"start of number\"\n           \"start of bareword\")\n         :got\n         chr))))\n\n(defun extract-array (strm chr)\n  (declare (type streamable strm)\n           (type streamed chr)\n           (ignore chr))\n  (read-chr strm)\n  (loop with building = nil\n        with found-sep = t\n        with last-read = (extract-list-sep strm (peek-chr strm))\n        with next = (peek-chr strm)\n        while (and\n                (not (eq next +eof+))\n                (not (char= next #\\])))\n        do\n        (unless found-sep\n          (error 'extraction-error\n                 :expected '(#\\Space #\\Tab #\\Newline #\\Return #\\, #\\:)\n                 :got next))\n        (push (extract-value strm next) building)\n        (setf last-read (extract-list-sep strm (peek-chr strm)))\n        (setf found-sep (guarded-sepchar-p last-read))\n        (setf next (peek-chr strm))\n        finally\n        (progn (when (and\n                       (not (eq next +eof+))\n                       (char= next #\\]))\n                 (read-chr strm))\n               (return (reverse building)))))\n\n(defun extract-hash (strm chr)\n  (declare (type streamable strm)\n           (type streamed chr)\n           (ignore chr))\n  (read-chr strm)\n  (loop with building = nil\n        with found-sep = t\n        with last-read = (extract-list-sep strm (peek-chr strm))\n        with next = (peek-chr strm)\n        while (and\n                (not (eq next +eof+))\n                (not (char= next #\\})))\n        do\n        (unless found-sep\n          (error 'extraction-error\n                 :expected '(#\\Space #\\Tab #\\Newline #\\Return #\\, #\\:)\n                 :got next))\n        (push (extract-value strm next) building)\n        (setf last-read (extract-list-sep strm (peek-chr strm)))\n        (setf found-sep (guarded-sepchar-p last-read))\n        (setf next (peek-chr strm))\n        (unless found-sep\n          (error 'extraction-error\n                 :expected '(#\\Space #\\Tab #\\Newline #\\Return #\\, #\\:)\n                 :got next))\n        (push (extract-value strm next) building)\n        (setf last-read (extract-list-sep strm (peek-chr strm)))\n        (setf found-sep (guarded-sepchar-p last-read))\n        (setf next (peek-chr strm))\n        finally (when (and\n                        (not (eq next +eof+))\n                        (char= next #\\}))\n                  (read-chr strm))\n        (return\n          (alexandria:plist-hash-table\n            (reverse building)\n            :test #'equal))))\n#|\n(nrdl:parse-from t)\n# What now brown cow\n{\n\nthe-wind \"bullseye\"\nthe-trees false\nthe-sparrows his-eye\npoem\n# I don't know if you can hear me\n|His eyee\n# or if\n# you're even there\n|is on\n# I don't know if you can listen\n|The sparrow\n^\n\n# to a gypsy's prayer\n\nthis-should-still-work 15.0\nother\n|And I know\n|He's watching\n|Over me\n^\n\n   `force push` >I sing\n                >because\n                >I'm happy\n                ^\n\n   \"i am mordac\" true\n   \"I am web mistress ming\" false\n   \"you are so wrong\" null\n    wendover [\n            {\n            so 1\n            much -10\n            gambling 100\n            but 1000\n            also -1000\n            apparently 10000\n            paramedics -10000\n            and 1.01\n            }\n            {\n            die in\n            a fire\n            }\n            15\n            |this\n            |that\n            ^\n            \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"\n            ]\n}\n\n\n(parse-from t)\n# do\n# comments\n# work\n\n\n\n|#\n(defun parse-from (strm)\n  (declare (type streamable strm))\n  (extract-list-sep strm (peek-chr strm))\n  (extract-value strm (peek-chr strm)))\n\n\n\n#|\n(unprintable-p (code-char #x81))\n|#\n(defun unprintable-p (chr)\n  (declare (type streamed chr))\n  (and\n    (not (whitespace-p chr))\n    (let ((code (char-code chr)))\n      (or\n        (< code #x1f)\n        (= code #x7f)\n        (and\n          (>= code #x80)\n          (<= code #x9f))\n        (and\n          (>= code #xd800)\n          (<= code #xdfff))\n        (= code #xfeff)))))\n\n(defun bmp-p (chr)\n  (declare (type streamed chr))\n  (< (char-code chr) #x10000))\n\n(defun to-surrogates (chr)\n  (declare (type streamed chr))\n  (let* ((subject (char-code chr))\n      (residue (- subject #x10000))\n      (higher (prog1 (write (ash residue -10) :base 16) (terpri)))\n      (lower (prog1 (write (logand #x003ff residue) :base 16) (terpri))))\n      (list\n        (+ #xD800 higher)\n        (+ #xDc00 lower))))\n#|\n(inject-quoted\n  t\n  '(#\\ude6d #\\\\ #\\\" #\\c #\\n #\\Newline #\\Tab #\\Return #\\c #\\a #\\b))\n(inject-quoted t #\\\" \"asdf\n\u0016\n\t\\\\\\\"blarg\")\n=>\n\n* (inject-quoted\n      t '(#\\ude6d #\\\\ #\\\" #\\c #\\n #\\Newline #\\Tab #\\Return #\\c #\\a #\\b))\n\"\\uDE6D\\\\\\\"cn\\n\\t\\rcab\"\n(#\\UDE6D #\\\\ #\\\" #\\c #\\n #\\Newline #\\Tab #\\Return #\\c #\\a #\\b)\n* (inject-quoted t \"asdf\n                 ^V\n                         \\\\\\\"blarg\")\n\"asdf\\n\\u0016\\n\\t\\\\\\\"blarg\"\n\"asdf\n▬\n        \\\\\\\"blarg\"\n*\n\n\n\n|#\n\n(defparameter *escape-characters*\n  '((#\\Newline . #\\n)\n(#\\Page . #\\f)\n(#\\Backspace . #\\b)\n(#\\Return . #\\r)\n(#\\Tab . #\\t)\n(#\\\\ . #\\\\)))\n\n(defun inject-quoted (strm blob &optional (quote-char #\\\"))\n  (declare (type streamable strm)\n           (type string blob)\n           (type character quote-char))\n  (write-char quote-char strm)\n  (map nil (lambda (c)\n             (let ((mapped-char (cdr (assoc c *escape-characters*))))\n               (if mapped-char\n                 (progn\n                   (write-char #\\\\ strm)\n                   (write-char mapped-char strm))\n                 (cond\n                   ((unprintable-p c)\n                    (write-char #\\\\ strm)\n                    (write-char #\\u strm)\n                    (format strm \"~4,'0X\" (char-code c)))\n                   ((eql c quote-char)\n                    (write-char #\\\\ strm)\n                    (write-char quote-char strm))\n                   (t (write-char c strm))))))\n       blob)\n  (write-char quote-char strm)\n  blob)\n#|\n\n(subseq \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\" 0 78)\n(break-at-spaces 80 \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\")\n(break-at-spaces 40\n\"http://www.lispworks.com/documentation/HyperSpec/Body/26_glo_e.htm#element doof\")\n(break-at-spaces 40\n                 \"\")\n(break-up-blob 40\n\"http://www.lispworks.com/documentation/HyperSpec/Body/26_glo_e.htm#element \")\n(break-at-spaces 0 \"\")\n\n|#\n(defun blob-prose-break-spot (max-width blob)\n  (declare (type (integer 0 1024) max-width)\n           (type string blob))\n  (let ((break-spot nil))\n    (loop for c across blob\n          for pos from 0 to (- (length blob) 1)\n          do\n          (when (and\n                  (char= c #\\Space)\n                  (or\n                    (null break-spot)\n                    (< pos max-width)))\n            (setf break-spot pos)\n            )\n            (when (and (>= pos max-width)\n                       (not (null break-spot)))\n              (return break-spot))\n          finally\n          (return break-spot))))\n\n(defun blob-verbatim-break-spot (max-width blob)\n  (declare (type (integer 0 1024) max-width)\n           (type string blob)\n           (ignore max-width))\n  (position #\\Newline blob))\n\n(defun break-up-blob (max-width blob next-spot)\n  (declare (type (integer 0 1024) max-width)\n           (type string blob)\n           (type function next-spot))\n  (if (<= (length blob) 0)\n    blob\n    (loop with consumed = (copy-seq blob)\n          with chunks = nil\n          for spot = (funcall next-spot max-width consumed)\n          while (and\n                  (> (length consumed) 0)\n                  (not (null spot)))\n          do\n          (push (subseq consumed 0 spot) chunks)\n          (setf consumed\n                (if (> (length consumed) (+ 1 spot))\n                  (subseq consumed (+ 1 spot))\n                  (progn\n                    ;; Demonstrate that there should be a trailing newline\n                    (push \"\" chunks)\n                    (copy-seq \"\"))))\n          finally\n          (progn\n            (when (> (length consumed) 0)\n              (push consumed chunks))\n            (return (reverse chunks))))))\n\n(defun inject-linesep (strm)\n  (write-char #\\Newline strm))\n\n(defun inject-sep (strm indented-at &key json-mode)\n  (declare (type boolean json-mode)\n           (type streamable strm)\n           (type (or null (integer 0 1024)) indented-at))\n  (if (null indented-at)\n    (when (not json-mode)\n      (write-char #\\Space strm))\n    (progn\n      (inject-linesep strm)\n      (loop for i from 1 to indented-at\n            do\n            (write-char #\\Space strm)))))\n\n(defun suggest-line-width\n  (indented-at\n    &key\n    (break-min-width 30)\n    (doc-width 80))\n  (declare\n    (type (or null (integer 0 1024)) indented-at)\n    (type (integer 0 1024) break-min-width)\n    (type (integer 0 1024) doc-width))\n  (when (not (null indented-at))\n    (min\n      (max\n        (- doc-width\n           ;; Account for the prefix char\n           (+ indented-at 1))\n        break-min-width)\n      doc-width)))\n\n(defun determine-blob-form (blob line-width json-mode)\n  (declare (type string blob)\n           (type (or null (integer 0 1024)) line-width))\n  (if (or json-mode\n          (null line-width))\n    :quoted\n    (cond\n      ((> (count #\\Newline blob) 0)\n       :verbatim)\n      ((and\n         (> (length blob) line-width)\n         (> (count #\\Space blob) 0))\n       :prose)\n      (t\n        :quoted))))\n\n(defun inject-multiline-blob\n  (strm blob indented-at line-width prefix-char next-spot)\n  (declare (type streamable strm)\n           (type string blob)\n           (type (integer 0 1024) indented-at)\n           (type (integer 0 1024) line-width)\n           (type character prefix-char)\n           (type function next-spot))\n        (loop named line-printer\n              with spacious\n              for str in (break-up-blob line-width\n                                        blob\n                                        next-spot)\n              do\n              (write-char prefix-char strm)\n              (write-string str strm)\n              (inject-sep strm indented-at))\n        (write-char #\\^ strm))\n\n(defun inject-blob (strm blob indented-at\n                         &key\n                         json-mode\n                         line-width-args)\n  (declare (type streamable strm)\n           (type string blob)\n           (type (or null (integer 0 1024)) indented-at)\n           (type boolean json-mode)\n           (type list line-width-args))\n  (let* ((line-suggested-width (apply\n                                 #'suggest-line-width\n                                 (cons indented-at line-width-args)))\n         (dispatch (determine-blob-form blob line-suggested-width json-mode)))\n    (if (eql dispatch :quoted)\n      (inject-quoted\n        strm\n        blob\n        #\\\")\n      (inject-multiline-blob\n        strm\n        blob\n        indented-at\n        line-suggested-width\n        (if (eql dispatch :verbatim)\n          +start-verbatim+\n          +start-prose+)\n        (if (eql dispatch :verbatim)\n                 #'blob-verbatim-break-spot\n                 #'blob-prose-break-spot)))))\n\n;; The only place where I punt to the printer\n(defun inject-number (strm num)\n  (declare (type streamable strm)\n           (type number num))\n  (prin1 num strm))\n\n(defun escapable-p (chr quote-char)\n  (declare (type streamed chr)\n           (type character quote-char))\n  (or\n    (find chr (map 'list #'car *escape-characters*))\n    (unprintable-p chr)\n    (eql chr quote-char)))\n\n(defun inject-symbol-content (strm prop-content &key json-mode)\n  (declare (type string prop-content)\n           (type boolean json-mode))\n  (if json-mode\n    (inject-quoted strm prop-content #\\\")\n\n    (if (> (count-if (lambda (x)\n                       (or\n                         (digit-char-p x)\n                         (char= x #\\Space)\n                         (escapable-p x #\\`)))\n                     prop-content) 0)\n      (inject-quoted strm prop-content #\\`)\n      (write-string prop-content strm))))\n#|\n(inject-symbol t :argyle)\n=> [prints `argyle`]\n(inject-symbol t 'terrifying)\n=> [throws error, no symbols plz]\n(inject-symbol t 15)\n=> [throws error, no numbers plz]\n(inject-symbol t 't)\n=> [prints `true`]\n(inject-symbol t :|a b c|)\n=> [prints `'a b c'`]\n\n|#\n(defun inject-symbol (strm prop &key json-mode)\n  (declare (type streamable strm)\n           (type (or null boolean symbol) prop)\n           (type boolean json-mode))\n\n  (typecase prop\n    (null (write-string \"false\" strm))\n    (boolean (write-string \"true\" strm))\n    (keyword (inject-symbol-content\n               strm\n               (symbol-string prop)\n               :json-mode json-mode))\n    (symbol (cond ((eql (print prop) 'cl:null)\n                        (write-string \"null\" strm))\n                  (t (error\n                       \"Writing symbols to NRDL is undefined\"))))))\n\n(defun inject-array (strm seq pretty-indent indented-at\n                          &key json-mode)\n  (let ((array-indent (when (not (null pretty-indent))\n                           (+ indented-at pretty-indent))))\n    (write-char #\\[ strm)\n    (loop for r = seq then (cdr r)\n          for v = (car r)\n          while r\n          do\n          (inject-sep strm array-indent :json-mode json-mode)\n          (inject-value strm v pretty-indent array-indent\n                        :json-mode json-mode)\n          (when (and (cdr r)\n                     json-mode)\n            (write-char #\\, strm))))\n  (inject-sep strm indented-at :json-mode json-mode)\n  (write-char #\\] strm))\n\n(defun inject-object (strm object pretty-indent indented-at &key json-mode\n                           line-width-args)\n  (let* ((printable\n           (stable-sort\n             (alexandria:hash-table-alist object)\n             #'string<\n             :key\n             (lambda (thing)\n               (format nil \"~A\" (car thing)))))\n         (object-indent (when (not (null pretty-indent))\n                          (+ indented-at pretty-indent))))\n    (write-char #\\{ strm)\n    (loop for r = printable then (cdr r)\n          for k = (caar r) and v = (cdar r)\n          while r\n          do\n          (inject-sep strm object-indent :json-mode json-mode)\n          (inject-value strm k pretty-indent object-indent\n                        :json-mode json-mode)\n          (if\n              (and\n                (typep v 'string)\n                (not\n                  (eql\n                    :quoted\n                    (determine-blob-form\n                      v\n                      (apply\n                        #'suggest-line-width\n                        (cons\n                          (+ object-indent pretty-indent)\n                          line-width-args))\n                      json-mode))))\n              (let ((blob-indent (+ object-indent pretty-indent)))\n                (inject-sep strm blob-indent :json-mode json-mode)\n                (inject-blob strm v blob-indent :json-mode json-mode))\n              (progn\n                (if json-mode\n                  (progn\n                    (write-char #\\: strm)\n                    (when pretty-indent\n                      (write-char #\\Space strm)))\n                  (write-char #\\Space strm))\n                (inject-value strm v pretty-indent object-indent :json-mode json-mode)\n                (when (and\n                        json-mode\n                        (cdr r))\n                  (write-char #\\, strm)))))\n    (inject-sep strm indented-at :json-mode json-mode)\n    (write-char #\\} strm)))\n\n(defun inject-value (strm val pretty-indent indented-at &key json-mode)\n  (declare (type streamable strm)\n           (type (or null (integer 0 64)) pretty-indent)\n           (type (or null (integer 0 1024)) indented-at))\n  (typecase val\n    ((or null boolean symbol) (inject-symbol strm val :json-mode json-mode))\n    (number (inject-number strm val))\n    (string (inject-blob strm val indented-at :json-mode json-mode))\n    (hash-table (inject-object strm val pretty-indent indented-at :json-mode json-mode))\n    (sequence (inject-array strm val pretty-indent indented-at :json-mode json-mode)))\n  val)\n\n(defun generate-to (strm val &key (pretty-indent 0) json-mode)\n  (declare (type streamable strm)\n           (type (or null (integer 0 64)) pretty-indent)\n           (type boolean json-mode))\n  (inject-value strm val pretty-indent 0 :json-mode json-mode))\n\n(defun nested-to-alist\n  (value)\n  \"\n  Recursively changes value, converting all hash tables within the tree to an\n  alist.\n  \"\n  (cond\n    ((stringp value) value)\n    ((or (vectorp value) (listp value))\n     (map 'list #'nested-to-alist value))\n    ((hash-table-p value)\n     (let ((coll\n       (loop for k being the hash-key of value\n           using (hash-value v)\n           collect (cons k (nested-to-alist v)))))\n       (stable-sort coll #'string< :key (lambda (thing)\n                                          (format nil \"~A\" (car thing))))))\n    (t\n      value)))\n\n;;; (defun to-fset\n;;;   (value)\n;;;   \"\n;;;   Recursively changes value, converting all hash tables within the tree to a\n;;;   ... Whatever.\n;;;   \"\n;;;   (cond\n;;;     ((stringp value) value)\n;;;     ((vectorp value)\n;;;      (loop with collector = (fset:empty-seq)\n;;;            for v across value\n;;;            do\n;;;            (fset:push-last collector (to-fset v))\n;;;            finally\n;;;            (return collector)))\n;;;     ((listp value)\n;;;      (loop with collector = (fset:empty-seq)\n;;;            for v in value\n;;;            do\n;;;            (fset:push-last collector (to-fset v))\n;;;            finally\n;;;            (return collector)))\n;;;     ((hash-table-p value)\n;;;      (loop with collector = (fset:empty-map)\n;;;            for k being the hash-key of value\n;;;            using (hash-value v)\n;;;            do\n;;;            (fset:includef collector (to-fset k) (to-fset v))\n;;;            finally\n;;;            (return collector)))\n;;;     (:else\n;;;       value)))\n"},"annotations":{"audience":["assistant"]}},{"type":"text","text":"### /home/skin/Code/skin/nrdl/cl/main.lisp\n```\n;;;; main.lisp -- Reference Implementation Parser for NRDL in Common Lisp\n;;;;\n;;;; SPDX-FileCopyrightText: 2024 Daniel Jay Haskin\n;;;; SPDX-License-Identifier: MIT\n;;;;\n\n#+(or)\n(progn\n  (declaim (optimize (speed 0) (space 0) (debug 3)))\n           (asdf:load-system \"alexandria\"))\n\n\n(in-package #:cl-user)\n\n(defpackage\n  #:com.djhaskin.nrdl (:use #:cl)\n  (:documentation\n    \"\n    Nestable Readable Document Language\n    \")\n    (:import-from #:alexandria)\n    (:export\n      extraction-error\n      parse-from\n      generate-to\n      nested-to-alist\n      string-symbol\n      symbol-string\n      *symbol-package*\n      *symbol-deserialize-case*\n      *symbol-serialize-case*))\n\n(in-package #:com.djhaskin.nrdl)\n\n(defconstant +eof+ :eof)\n\n(deftype streamable ()\n  '(or boolean stream))\n\n(deftype streamed ()\n  `(or character (member ,+eof+)))\n\n(defun nameof (c)\n  (cond\n    ((eq c +eof+)\n     \"EOF\")\n    ((typep c 'character)\n     (format nil \"~:C\" c))\n    (t\n     (format nil \"~A\" c))))\n\n(define-condition extraction-error (error)\n  ((expected :initarg :expected :reader expected)\n   (got :initarg :got :reader got))\n  (:report\n   (lambda (c s)\n     (let* ((gotc (got c))\n            (gotc-title (nameof gotc))\n            (expected (expected c)))\n       (format s\n             \"Expected ~v[nothing~;~:;one of ~]~{`~A`~^~#[~; or ~:;, ~]~}; got `~A`\"\n             (length expected)\n             (mapcar #'nameof expected)\n             gotc-title)))))\n\n(defun peek-chr (strm)\n  (declare (type streamable strm))\n  (peek-char nil strm nil +eof+ nil))\n\n(defun read-chr (strm)\n  (declare (type streamable strm))\n  (read-char strm nil +eof+ nil))\n\n(defun must-read-chr (strm)\n  (declare (type streamable strm))\n  (read-char strm))\n\n(defun number-start-p (chr)\n  (declare (type character chr))\n  (or\n    (char= chr #\\-)\n    (char= chr #\\.)\n    (digit-char-p chr)))\n\n(defun number-char-p (chr)\n  (declare (type character chr))\n  (or\n    (number-start-p chr)\n    (char= chr #\\+)\n    (char= chr #\\E)\n    (char= chr #\\e)))\n\n#+(or)\n(equal\n  (build-string '(#\\c #\\b #\\a))\n  \"abc\")\n#+or\n(equal (build-string nil) \"\")\n\n(defun build-string (lst)\n  (declare (type list lst))\n  (let* ((size (length lst))\n         (building (make-string size)))\n    (loop for l in lst\n          for j from (- size 1) downto 0\n          do\n          (setf (elt building j) l))\n    building))\n\n(defun extract-number (strm chr)\n  (declare (type streamable strm)\n           (type streamed chr))\n  (let ((building nil)\n        (last-read chr))\n    (loop while (and\n                  (not (eq last-read +eof+))\n                  (number-char-p last-read))\n          do\n          (push last-read building)\n          (read-chr strm)\n          (setf last-read (peek-chr strm)))\n    (read-from-string (build-string building) nil nil)))\n\n(defun extract-quoted\n  (strm chr quote-char)\n  (declare (type streamable strm)\n           (type streamed chr)\n           (type character quote-char))\n  (declare (ignore chr))\n  (must-read-chr strm)\n  (let ((last-read (must-read-chr strm))\n        (building nil))\n    (loop while (and (not (eq last-read +eof+))\n                     (char/= last-read quote-char))\n          do\n          (if (char= last-read #\\\\)\n            (progn\n              (setf last-read (must-read-chr strm))\n              (cond\n                    ((eql last-read quote-char)\n                     (push quote-char building))\n                    ((char= last-read #\\\\)\n                     (push last-read building))\n                    ((char= last-read #\\/)\n                     (push last-read building))\n                    ((char= last-read #\\b)\n                     (push #\\Backspace building))\n                     ((char= last-read #\\f)\n                      (push #\\Page building))\n                     ((char= last-read #\\n)\n                      (push #\\Newline building))\n                     ((char= last-read #\\r)\n                      (push #\\Return building))\n                     ((char= last-read #\\t)\n                      (push #\\Tab building))\n                     ((char= last-read #\\u)\n                      (push\n                        (code-char\n                          (let ((build-ordinal (make-string 6)))\n                            (setf (elt build-ordinal 0) #\\#)\n                            (setf (elt build-ordinal 1) #\\X)\n                            (setf (elt build-ordinal 2) (must-read-chr strm))\n                            (setf (elt build-ordinal 3) (must-read-chr strm))\n                            (setf (elt build-ordinal 4) (must-read-chr strm))\n                            (setf (elt build-ordinal 5) (must-read-chr strm))\n                            (read-from-string build-ordinal nil nil)))\n                        building))\n                     (t (error\n                          'extraction-error\n                          :expected\n                          '(#\\\"\n                            #\\\\\n                            #\\/\n                            #\\b\n                            #\\f\n                            #\\n\n                            #\\r\n                            #\\t\n                            #\\u)\n                          :got \n                               last-read))))\n            (push last-read building))\n          (setf last-read (must-read-chr strm)))\n    (build-string building)))\n\n(defconstant +start-verbatim+ #\\|)\n(defconstant +start-prose+ #\\>)\n(defconstant +start-comment+ #\\#)\n\n(defun blankspace-p (chr)\n  (declare (type character chr))\n  (or\n    (char= chr #\\Tab)\n    (char= chr #\\Space)\n    ))\n\n(defun whitespace-p (chr)\n  (declare (type character chr))\n    (or\n      (char= chr #\\Newline)\n      (char= chr #\\Return)\n      (char= chr #\\Page)\n      (blankspace-p chr)))\n\n(defun sepchar-p (chr)\n  (declare (type character chr))\n  (or (whitespace-p chr)\n      (char= chr #\\,)\n      (char= chr #\\:)))\n\n(defun guarded-sepchar-p (chr)\n  (declare (type (or null character) chr))\n    (unless (null chr)\n      (sepchar-p chr)))\n\n(defun guarded-blankspace-p (chr)\n  (declare (type (or null character) chr))\n    (unless (null chr)\n      (blankspace-p chr)))\n\n(defun extract-comment (strm)\n  (declare (type streamable strm))\n  (loop with last-read = (read-chr strm)\n        while (and\n                (not (eq last-read +eof+))\n                (not (char= last-read #\\Newline)))\n        do\n        (setf last-read (read-chr strm))\n        finally\n        (return last-read)))\n\n(defun extract-sep (strm chr pred)\n  (declare (type streamable strm)\n           (type streamed chr)\n           (type function pred))\n  (loop with just-read = nil\n        with next = chr\n    do\n    (cond\n      ((eq next +eof+)\n       (return just-read))\n      ((eql next +start-comment+)\n       (setf just-read (extract-comment strm)))\n      ((funcall pred next)\n       (setf just-read (must-read-chr strm)))\n      (t\n        (return just-read)))\n    (setf next (peek-chr strm))))\n\n(defun extract-list-sep (strm chr)\n  (declare (type streamable strm)\n           (type streamed chr))\n  (extract-sep strm chr #'guarded-sepchar-p))\n\n(defun extract-blob-sep (strm chr)\n  (declare (type streamable strm)\n           (type streamed chr))\n  (extract-sep strm chr #'guarded-blankspace-p))\n#|\n(extract-multiline-blob t #\\|)\n|one\n#and then\n    # some of\n        #\n   | two\n#this\n|  three\n\n(extract-multiline-blob t #\\>)\n>one\n#and then\n    # some of\n        #\n   > two\n#this\n>  three\n\n|#\n\n(defun extract-multiline-blob (strm chr)\n  \"\n  Grabs the string after the multiline marker\n  and grabs subsequent prefixed strings\n  until a non-prefix character, EOF, or two new-lines in a row.\n  \"\n  (declare (type streamable strm)\n           (type streamed chr))\n  (loop named toplevel\n        with last-read = nil\n        with next = chr\n        with building = nil\n        while (and\n                (not (eq next +eof+))\n                (eql next chr)\n                (not (char= next #\\^)))\n        do\n        (setf last-read (read-chr strm))\n        (setf next (peek-chr strm))\n        (loop named getline\n              while (and (not (eq next +eof+))\n                         (not (char= next #\\Newline)))\n              do\n              (setf last-read (read-chr strm))\n              (push last-read building)\n              (setf next (peek-chr strm)))\n        (when (eq next +eof+)\n          (return-from toplevel\n                       (build-string building)))\n        (setf last-read (read-chr strm))\n        (if (eql chr +start-verbatim+)\n          (push last-read building)\n          (push #\\Space building))\n        (let ((sep-result\n                (extract-blob-sep strm (peek-chr strm))))\n          (when sep-result\n            (setf last-read sep-result)))\n        (setf next (peek-chr strm))\n\n        finally (progn\n                  (unless (char= next #\\^)\n                    (error 'extraction-error :expected #\\^ :got next))\n                  (read-chr strm)\n                  (return-from toplevel (build-string (cdr building))))))\n\n(defun extract-quoted-blob (strm chr)\n  (declare (type streamable strm)\n           (type streamed chr))\n  (extract-quoted strm chr #\\\"))\n\n#+(or)\n(do\n  (string-invertcase \"\")\n  (string-invertcase \"A\")\n  (string-invertcase \"a\")\n  (string-invertcase \" \")\n  (string-invertcase \"my heart's a stereo\")\n  (string-invertcase \"My heart's a stereo\"))\n\n(defun string-invertcase\n  (str)\n  (declare (type string str))\n  (let ((operable (remove-if-not #'both-case-p str)))\n    (if (= (length operable) 0)\n      str\n      (let* ((first-upper-case (upper-case-p (elt operable 0)))\n             (uneven-case\n               (when (> (length operable) 1)\n                      (reduce\n                        (lambda (c v)\n                          (or c v))\n                        (map\n                          'vector\n                          (lambda (x)\n                            (not (eql (upper-case-p x) first-upper-case)))\n                          (subseq operable 1))))))\n        (if uneven-case\n          str\n          (if first-upper-case\n            (string-downcase str)\n            (string-upcase str)))))))\n\n;;; Variable used to determine the case of a string\n;;; used for the name of a new symbol upon deserialization.\n;;;\n;;; Set to `(readtable-case *readtable*)` by default.\n(defparameter *symbol-deserialize-case*\n  (readtable-case *readtable*))\n\n;;; Variable used to determine the case of a string\n;;; generated from the name of a symbol upon serialization.\n;;; Can have the same values as the output of `readtable-case`:\n;;; `:upcase`, `:downcase`, `:preserve`, and `:invert`,\n;;; with the same effects.\n;;;\n;;; Unlike its cousin, I can't just give this thing a\n;;; default based on the readtable,\n;;;\n;;; and the printer has no notion of this. It just prints whatever case\n;;; was given originally. In effect, the printer is set to `:preserve` by\n;;; default.\n;;;\n;;; This is a default which is not useful in my case, I think.\n;;;\n;;; Therefore, by default, it will be set to `:downcase`, which addresses\n;;; a much more common need.\n(defparameter *symbol-serialize-case*\n  :downcase)\n\n(defun\n  symbol-string-prep (str case-guide)\n  \"\n  Attempts to prepare a string for interning according to the normal\n  ANSI rules for internment of literal symbols.\n  \"\n  (declare (type string str)\n           (type keyword case-guide))\n  (cond ((eql case-guide :upcase) (string-upcase str))\n        ((eql case-guide :downcase) (string-downcase str))\n        ((eql case-guide :preserve) str)\n        ((eql case-guide :invert) (string-invertcase str))\n        (t (string-upcase str))))\n\n(defparameter *symbol-package* (find-package :KEYWORD))\n\n(defun\n  string-symbol (str &optional (case-guide *symbol-deserialize-case*))\n  \"\n  Creates a keyword from a string.\n\n  Creates a keyword following `(readtable-case *readtable*)` rules.\n\n  If this package's var `*symbol-case*` is `:upcase`, the string is upcased.\n  If it is `:downcase`, the string is downcased.\n  If it is `:preserve`, the string's case is preserved.\n  If it is `:invert`, the string's case is inverted as long as all caseable\n  characters are already of uniform case.\n\n  The variable `*symbol-case*` takes as its default the current value of\n  `(readtable-case *readtable*)` at package load time.\n  \"\n  (declare (type string str)\n           (type keyword case-guide))\n  (intern\n    (symbol-string-prep str case-guide)\n    *symbol-package*))\n\n(defun symbol-string\n  (sym &optional (case-guide *symbol-serialize-case*))\n  (declare (type symbol sym)\n           (type keyword case-guide))\n  (cond ((eql sym 't) \"true\")\n        ((eql sym 'nil) \"false\")\n        ((eql sym 'cl:null) \"null\")\n        (t (symbol-string-prep (symbol-name sym) case-guide))))\n\n(defun bareword-start-p (chr)\n  (declare (type streamed chr))\n  (or\n    (and (typep chr 'character)\n         (alpha-char-p chr))\n    (char= chr #\\_)\n    (char= chr #\\=)\n    (char= chr #\\>)\n    (char= chr #\\@)\n    (char= chr #\\$)\n    (char= chr #\\%)\n    (char= chr #\\&)\n    (char= chr #\\*)\n    (char= chr #\\+)\n    (char= chr #\\/)\n    (char= chr #\\=)))\n\n(defun bareword-middle-p (chr)\n  (declare (type streamed chr))\n  (or\n    (bareword-start-p chr)\n    (and (typep chr 'character)\n         (digit-char-p chr))\n    (char= chr #\\<)\n    (char= chr #\\!)\n    (char= chr #\\?)\n    (char= chr #\\.)\n    (char= chr #\\-)))\n\n(defun convert-to-symbol (final-string)\n  (declare (type string final-string))\n  (cond ((string= final-string \"t\")\n                  t)\n        ((string= final-string \"nil\")\n         'cl:null)\n        ((string= final-string \"true\")\n         t)\n        ((string= final-string \"false\")\n         nil)\n        ((string= final-string \"null\")\n         'cl:null)\n        (t (string-symbol final-string))))\n\n(defun extract-bare-symbol (strm chr)\n  (declare (type streamable strm)\n           (type streamed chr))\n  (loop with building = nil\n        with last-read = nil\n        with next = chr\n        while (and\n                (not (eq next +eof+))\n                (bareword-middle-p next))\n        do\n        (setf last-read (read-chr strm))\n        (push last-read building)\n        (setf next (peek-chr strm))\n        finally\n        (return\n          (convert-to-symbol (build-string building)))))\n\n(defun extract-quoted-symbol (strm chr)\n  (declare (type streamable strm)\n           (type streamed chr))\n  (convert-to-symbol\n    (extract-quoted strm chr #\\`)))\n\n(defun extract-value (strm chr)\n  (declare (type streamable strm)\n           (type streamed chr))\n  (cond\n    ((eq chr +eof+) (error\n                      'extraction-error\n                      :expected\n                      '(#\\{\n                        #\\[\n                        #\\\"\n                        #\\`\n                        +start-verbatim+\n                        +start-prose+\n                        \"start of number\"\n                        \"start of bareword\")\n                      :got\n                      +eof+))\n    ((char= chr #\\{)\n     (extract-hash strm chr))\n    ((char= chr #\\[)\n     (extract-array strm chr))\n    ((char= chr #\\\")\n     (extract-quoted-blob strm chr))\n    ((char= chr #\\`)\n     (extract-quoted-symbol strm chr))\n    ((or\n       (eql chr +start-verbatim+)\n       (eql chr +start-prose+))\n     (extract-multiline-blob strm chr))\n    ((number-start-p chr)\n     (extract-number strm chr))\n    ((bareword-start-p chr)\n     (extract-bare-symbol strm chr))\n    (t (error\n         'extraction-error\n         :expected\n         '(#\\{\n           #\\[\n           #\\\"\n           #\\`\n           +start-verbatim+\n           +start-prose+\n           \"start of number\"\n           \"start of bareword\")\n         :got\n         chr))))\n\n(defun extract-array (strm chr)\n  (declare (type streamable strm)\n           (type streamed chr)\n           (ignore chr))\n  (read-chr strm)\n  (loop with building = nil\n        with found-sep = t\n        with last-read = (extract-list-sep strm (peek-chr strm))\n        with next = (peek-chr strm)\n        while (and\n                (not (eq next +eof+))\n                (not (char= next #\\])))\n        do\n        (unless found-sep\n          (error 'extraction-error\n                 :expected '(#\\Space #\\Tab #\\Newline #\\Return #\\, #\\:)\n                 :got next))\n        (push (extract-value strm next) building)\n        (setf last-read (extract-list-sep strm (peek-chr strm)))\n        (setf found-sep (guarded-sepchar-p last-read))\n        (setf next (peek-chr strm))\n        finally\n        (progn (when (and\n                       (not (eq next +eof+))\n                       (char= next #\\]))\n                 (read-chr strm))\n               (return (reverse building)))))\n\n(defun extract-hash (strm chr)\n  (declare (type streamable strm)\n           (type streamed chr)\n           (ignore chr))\n  (read-chr strm)\n  (loop with building = nil\n        with found-sep = t\n        with last-read = (extract-list-sep strm (peek-chr strm))\n        with next = (peek-chr strm)\n        while (and\n                (not (eq next +eof+))\n                (not (char= next #\\})))\n        do\n        (unless found-sep\n          (error 'extraction-error\n                 :expected '(#\\Space #\\Tab #\\Newline #\\Return #\\, #\\:)\n                 :got next))\n        (push (extract-value strm next) building)\n        (setf last-read (extract-list-sep strm (peek-chr strm)))\n        (setf found-sep (guarded-sepchar-p last-read))\n        (setf next (peek-chr strm))\n        (unless found-sep\n          (error 'extraction-error\n                 :expected '(#\\Space #\\Tab #\\Newline #\\Return #\\, #\\:)\n                 :got next))\n        (push (extract-value strm next) building)\n        (setf last-read (extract-list-sep strm (peek-chr strm)))\n        (setf found-sep (guarded-sepchar-p last-read))\n        (setf next (peek-chr strm))\n        finally (when (and\n                        (not (eq next +eof+))\n                        (char= next #\\}))\n                  (read-chr strm))\n        (return\n          (alexandria:plist-hash-table\n            (reverse building)\n            :test #'equal))))\n#|\n(nrdl:parse-from t)\n# What now brown cow\n{\n\nthe-wind \"bullseye\"\nthe-trees false\nthe-sparrows his-eye\npoem\n# I don't know if you can hear me\n|His eyee\n# or if\n# you're even there\n|is on\n# I don't know if you can listen\n|The sparrow\n^\n\n# to a gypsy's prayer\n\nthis-should-still-work 15.0\nother\n|And I know\n|He's watching\n|Over me\n^\n\n   `force push` >I sing\n                >because\n                >I'm happy\n                ^\n\n   \"i am mordac\" true\n   \"I am web mistress ming\" false\n   \"you are so wrong\" null\n    wendover [\n            {\n            so 1\n            much -10\n            gambling 100\n            but 1000\n            also -1000\n            apparently 10000\n            paramedics -10000\n            and 1.01\n            }\n            {\n            die in\n            a fire\n            }\n            15\n            |this\n            |that\n            ^\n            \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"\n            ]\n}\n\n\n(parse-from t)\n# do\n# comments\n# work\n\n\n\n|#\n(defun parse-from (strm)\n  (declare (type streamable strm))\n  (extract-list-sep strm (peek-chr strm))\n  (extract-value strm (peek-chr strm)))\n\n\n\n#|\n(unprintable-p (code-char #x81))\n|#\n(defun unprintable-p (chr)\n  (declare (type streamed chr))\n  (and\n    (not (whitespace-p chr))\n    (let ((code (char-code chr)))\n      (or\n        (< code #x1f)\n        (= code #x7f)\n        (and\n          (>= code #x80)\n          (<= code #x9f))\n        (and\n          (>= code #xd800)\n          (<= code #xdfff))\n        (= code #xfeff)))))\n\n(defun bmp-p (chr)\n  (declare (type streamed chr))\n  (< (char-code chr) #x10000))\n\n(defun to-surrogates (chr)\n  (declare (type streamed chr))\n  (let* ((subject (char-code chr))\n      (residue (- subject #x10000))\n      (higher (prog1 (write (ash residue -10) :base 16) (terpri)))\n      (lower (prog1 (write (logand #x003ff residue) :base 16) (terpri))))\n      (list\n        (+ #xD800 higher)\n        (+ #xDc00 lower))))\n#|\n(inject-quoted\n  t\n  '(#\\ude6d #\\\\ #\\\" #\\c #\\n #\\Newline #\\Tab #\\Return #\\c #\\a #\\b))\n(inject-quoted t #\\\" \"asdf\n\u0016\n\t\\\\\\\"blarg\")\n=>\n\n* (inject-quoted\n      t '(#\\ude6d #\\\\ #\\\" #\\c #\\n #\\Newline #\\Tab #\\Return #\\c #\\a #\\b))\n\"\\uDE6D\\\\\\\"cn\\n\\t\\rcab\"\n(#\\UDE6D #\\\\ #\\\" #\\c #\\n #\\Newline #\\Tab #\\Return #\\c #\\a #\\b)\n* (inject-quoted t \"asdf\n                 ^V\n                         \\\\\\\"blarg\")\n\"asdf\\n\\u0016\\n\\t\\\\\\\"blarg\"\n\"asdf\n▬\n        \\\\\\\"blarg\"\n*\n\n\n\n|#\n\n(defparameter *escape-characters*\n  '((#\\Newline . #\\n)\n(#\\Page . #\\f)\n(#\\Backspace . #\\b)\n(#\\Return . #\\r)\n(#\\Tab . #\\t)\n(#\\\\ . #\\\\)))\n\n(defun inject-quoted (strm blob &optional (quote-char #\\\"))\n  (declare (type streamable strm)\n           (type string blob)\n           (type character quote-char))\n  (write-char quote-char strm)\n  (map nil (lambda (c)\n             (let ((mapped-char (cdr (assoc c *escape-characters*))))\n               (if mapped-char\n                 (progn\n                   (write-char #\\\\ strm)\n                   (write-char mapped-char strm))\n                 (cond\n                   ((unprintable-p c)\n                    (write-char #\\\\ strm)\n                    (write-char #\\u strm)\n                    (format strm \"~4,'0X\" (char-code c)))\n                   ((eql c quote-char)\n                    (write-char #\\\\ strm)\n                    (write-char quote-char strm))\n                   (t (write-char c strm))))))\n       blob)\n  (write-char quote-char strm)\n  blob)\n#|\n\n(subseq \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\" 0 78)\n(break-at-spaces 80 \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\")\n(break-at-spaces 40\n\"http://www.lispworks.com/documentation/HyperSpec/Body/26_glo_e.htm#element doof\")\n(break-at-spaces 40\n                 \"\")\n(break-up-blob 40\n\"http://www.lispworks.com/documentation/HyperSpec/Body/26_glo_e.htm#element \")\n(break-at-spaces 0 \"\")\n\n|#\n(defun blob-prose-break-spot (max-width blob)\n  (declare (type (integer 0 1024) max-width)\n           (type string blob))\n  (let ((break-spot nil))\n    (loop for c across blob\n          for pos from 0 to (- (length blob) 1)\n          do\n          (when (and\n                  (char= c #\\Space)\n                  (or\n                    (null break-spot)\n                    (< pos max-width)))\n            (setf break-spot pos)\n            )\n            (when (and (>= pos max-width)\n                       (not (null break-spot)))\n              (return break-spot))\n          finally\n          (return break-spot))))\n\n(defun blob-verbatim-break-spot (max-width blob)\n  (declare (type (integer 0 1024) max-width)\n           (type string blob)\n           (ignore max-width))\n  (position #\\Newline blob))\n\n(defun break-up-blob (max-width blob next-spot)\n  (declare (type (integer 0 1024) max-width)\n           (type string blob)\n           (type function next-spot))\n  (if (<= (length blob) 0)\n    blob\n    (loop with consumed = (copy-seq blob)\n          with chunks = nil\n          for spot = (funcall next-spot max-width consumed)\n          while (and\n                  (> (length consumed) 0)\n                  (not (null spot)))\n          do\n          (push (subseq consumed 0 spot) chunks)\n          (setf consumed\n                (if (> (length consumed) (+ 1 spot))\n                  (subseq consumed (+ 1 spot))\n                  (progn\n                    ;; Demonstrate that there should be a trailing newline\n                    (push \"\" chunks)\n                    (copy-seq \"\"))))\n          finally\n          (progn\n            (when (> (length consumed) 0)\n              (push consumed chunks))\n            (return (reverse chunks))))))\n\n(defun inject-linesep (strm)\n  (write-char #\\Newline strm))\n\n(defun inject-sep (strm indented-at &key json-mode)\n  (declare (type boolean json-mode)\n           (type streamable strm)\n           (type (or null (integer 0 1024)) indented-at))\n  (if (null indented-at)\n    (when (not json-mode)\n      (write-char #\\Space strm))\n    (progn\n      (inject-linesep strm)\n      (loop for i from 1 to indented-at\n            do\n            (write-char #\\Space strm)))))\n\n(defun suggest-line-width\n  (indented-at\n    &key\n    (break-min-width 30)\n    (doc-width 80))\n  (declare\n    (type (or null (integer 0 1024)) indented-at)\n    (type (integer 0 1024) break-min-width)\n    (type (integer 0 1024) doc-width))\n  (when (not (null indented-at))\n    (min\n      (max\n        (- doc-width\n           ;; Account for the prefix char\n           (+ indented-at 1))\n        break-min-width)\n      doc-width)))\n\n(defun determine-blob-form (blob line-width json-mode)\n  (declare (type string blob)\n           (type (or null (integer 0 1024)) line-width))\n  (if (or json-mode\n          (null line-width))\n    :quoted\n    (cond\n      ((> (count #\\Newline blob) 0)\n       :verbatim)\n      ((and\n         (> (length blob) line-width)\n         (> (count #\\Space blob) 0))\n       :prose)\n      (t\n        :quoted))))\n\n(defun inject-multiline-blob\n  (strm blob indented-at line-width prefix-char next-spot)\n  (declare (type streamable strm)\n           (type string blob)\n           (type (integer 0 1024) indented-at)\n           (type (integer 0 1024) line-width)\n           (type character prefix-char)\n           (type function next-spot))\n        (loop named line-printer\n              with spacious\n              for str in (break-up-blob line-width\n                                        blob\n                                        next-spot)\n              do\n              (write-char prefix-char strm)\n              (write-string str strm)\n              (inject-sep strm indented-at))\n        (write-char #\\^ strm))\n\n(defun inject-blob (strm blob indented-at\n                         &key\n                         json-mode\n                         line-width-args)\n  (declare (type streamable strm)\n           (type string blob)\n           (type (or null (integer 0 1024)) indented-at)\n           (type boolean json-mode)\n           (type list line-width-args))\n  (let* ((line-suggested-width (apply\n                                 #'suggest-line-width\n                                 (cons indented-at line-width-args)))\n         (dispatch (determine-blob-form blob line-suggested-width json-mode)))\n    (if (eql dispatch :quoted)\n      (inject-quoted\n        strm\n        blob\n        #\\\")\n      (inject-multiline-blob\n        strm\n        blob\n        indented-at\n        line-suggested-width\n        (if (eql dispatch :verbatim)\n          +start-verbatim+\n          +start-prose+)\n        (if (eql dispatch :verbatim)\n                 #'blob-verbatim-break-spot\n                 #'blob-prose-break-spot)))))\n\n;; The only place where I punt to the printer\n(defun inject-number (strm num)\n  (declare (type streamable strm)\n           (type number num))\n  (prin1 num strm))\n\n(defun escapable-p (chr quote-char)\n  (declare (type streamed chr)\n           (type character quote-char))\n  (or\n    (find chr (map 'list #'car *escape-characters*))\n    (unprintable-p chr)\n    (eql chr quote-char)))\n\n(defun inject-symbol-content (strm prop-content &key json-mode)\n  (declare (type string prop-content)\n           (type boolean json-mode))\n  (if json-mode\n    (inject-quoted strm prop-content #\\\")\n\n    (if (> (count-if (lambda (x)\n                       (or\n                         (digit-char-p x)\n                         (char= x #\\Space)\n                         (escapable-p x #\\`)))\n                     prop-content) 0)\n      (inject-quoted strm prop-content #\\`)\n      (write-string prop-content strm))))\n#|\n(inject-symbol t :argyle)\n=> [prints `argyle`]\n(inject-symbol t 'terrifying)\n=> [throws error, no symbols plz]\n(inject-symbol t 15)\n=> [throws error, no numbers plz]\n(inject-symbol t 't)\n=> [prints `true`]\n(inject-symbol t :|a b c|)\n=> [prints `'a b c'`]\n\n|#\n(defun inject-symbol (strm prop &key json-mode)\n  (declare (type streamable strm)\n           (type (or null boolean symbol) prop)\n           (type boolean json-mode))\n\n  (typecase prop\n    (null (write-string \"false\" strm))\n    (boolean (write-string \"true\" strm))\n    (keyword (inject-symbol-content\n               strm\n               (symbol-string prop)\n               :json-mode json-mode))\n    (symbol (cond ((eql (print prop) 'cl:null)\n                        (write-string \"null\" strm))\n                  (t (error\n                       \"Writing symbols to NRDL is undefined\"))))))\n\n(defun inject-array (strm seq pretty-indent indented-at\n                          &key json-mode)\n  (let ((array-indent (when (not (null pretty-indent))\n                           (+ indented-at pretty-indent))))\n    (write-char #\\[ strm)\n    (loop for r = seq then (cdr r)\n          for v = (car r)\n          while r\n          do\n          (inject-sep strm array-indent :json-mode json-mode)\n          (inject-value strm v pretty-indent array-indent\n                        :json-mode json-mode)\n          (when (and (cdr r)\n                     json-mode)\n            (write-char #\\, strm))))\n  (inject-sep strm indented-at :json-mode json-mode)\n  (write-char #\\] strm))\n\n(defun inject-object (strm object pretty-indent indented-at &key json-mode\n                           line-width-args)\n  (let* ((printable\n           (stable-sort\n             (alexandria:hash-table-alist object)\n             #'string<\n             :key\n             (lambda (thing)\n               (format nil \"~A\" (car thing)))))\n         (object-indent (when (not (null pretty-indent))\n                          (+ indented-at pretty-indent))))\n    (write-char #\\{ strm)\n    (loop for r = printable then (cdr r)\n          for k = (caar r) and v = (cdar r)\n          while r\n          do\n          (inject-sep strm object-indent :json-mode json-mode)\n          (inject-value strm k pretty-indent object-indent\n                        :json-mode json-mode)\n          (if\n              (and\n                (typep v 'string)\n                (not\n                  (eql\n                    :quoted\n                    (determine-blob-form\n                      v\n                      (apply\n                        #'suggest-line-width\n                        (cons\n                          (+ object-indent pretty-indent)\n                          line-width-args))\n                      json-mode))))\n              (let ((blob-indent (+ object-indent pretty-indent)))\n                (inject-sep strm blob-indent :json-mode json-mode)\n                (inject-blob strm v blob-indent :json-mode json-mode))\n              (progn\n                (if json-mode\n                  (progn\n                    (write-char #\\: strm)\n                    (when pretty-indent\n                      (write-char #\\Space strm)))\n                  (write-char #\\Space strm))\n                (inject-value strm v pretty-indent object-indent :json-mode json-mode)\n                (when (and\n                        json-mode\n                        (cdr r))\n                  (write-char #\\, strm)))))\n    (inject-sep strm indented-at :json-mode json-mode)\n    (write-char #\\} strm)))\n\n(defun inject-value (strm val pretty-indent indented-at &key json-mode)\n  (declare (type streamable strm)\n           (type (or null (integer 0 64)) pretty-indent)\n           (type (or null (integer 0 1024)) indented-at))\n  (typecase val\n    ((or null boolean symbol) (inject-symbol strm val :json-mode json-mode))\n    (number (inject-number strm val))\n    (string (inject-blob strm val indented-at :json-mode json-mode))\n    (hash-table (inject-object strm val pretty-indent indented-at :json-mode json-mode))\n    (sequence (inject-array strm val pretty-indent indented-at :json-mode json-mode)))\n  val)\n\n(defun generate-to (strm val &key (pretty-indent 0) json-mode)\n  (declare (type streamable strm)\n           (type (or null (integer 0 64)) pretty-indent)\n           (type boolean json-mode))\n  (inject-value strm val pretty-indent 0 :json-mode json-mode))\n\n(defun nested-to-alist\n  (value)\n  \"\n  Recursively changes value, converting all hash tables within the tree to an\n  alist.\n  \"\n  (cond\n    ((stringp value) value)\n    ((or (vectorp value) (listp value))\n     (map 'list #'nested-to-alist value))\n    ((hash-table-p value)\n     (let ((coll\n       (loop for k being the hash-key of value\n           using (hash-value v)\n           collect (cons k (nested-to-alist v)))))\n       (stable-sort coll #'string< :key (lambda (thing)\n                                          (format nil \"~A\" (car thing))))))\n    (t\n      value)))\n\n;;; (defun to-fset\n;;;   (value)\n;;;   \"\n;;;   Recursively changes value, converting all hash tables within the tree to a\n;;;   ... Whatever.\n;;;   \"\n;;;   (cond\n;;;     ((stringp value) value)\n;;;     ((vectorp value)\n;;;      (loop with collector = (fset:empty-seq)\n;;;            for v across value\n;;;            do\n;;;            (fset:push-last collector (to-fset v))\n;;;            finally\n;;;            (return collector)))\n;;;     ((listp value)\n;;;      (loop with collector = (fset:empty-seq)\n;;;            for v in value\n;;;            do\n;;;            (fset:push-last collector (to-fset v))\n;;;            finally\n;;;            (return collector)))\n;;;     ((hash-table-p value)\n;;;      (loop with collector = (fset:empty-map)\n;;;            for k being the hash-key of value\n;;;            using (hash-value v)\n;;;            do\n;;;            (fset:includef collector (to-fset k) (to-fset v))\n;;;            finally\n;;;            (return collector)))\n;;;     (:else\n;;;       value)))\n\n```\n","annotations":{"audience":["user"],"priority":0.0}}]}}]}
{"role":"assistant","created":1746300396,"content":[{"type":"text","text":"Ran into this error: Rate limit exceeded: Some(Object {\"error\": Object {\"message\": String(\"This request would exceed the rate limit for your organization (6423882b-6df1-42c8-b14f-420e11b0d690) of 40,000 input tokens per minute. For details, refer to: https://docs.anthropic.com/en/api/rate-limits. You can see the response headers for current usage. Please reduce the prompt length or the maximum tokens requested, or try again later. You may also contact sales at https://www.anthropic.com/contact-sales to discuss your options for a rate limit increase.\"), \"type\": String(\"rate_limit_error\")}, \"type\": String(\"error\")}).\n\nPlease retry if you think this is a transient or recoverable error."}]}
{"role":"user","created":1746300507,"content":[{"type":"text","text":"retry"}]}
{"role":"assistant","created":1746300521,"content":[{"type":"text","text":"Let me help you create a parser and library for the single-file tabular database in Common Lisp. Based on the specifications in the README and looking at NRDL as a template, I'll help structure this implementation.\n\nFirst, let's examine the requirements from the SCSD README:"},{"type":"toolRequest","id":"toolu_01QAUMDXQRRKhcC7wKdXhtUB","toolCall":{"status":"success","value":{"name":"developer__text_editor","arguments":{"command":"view","path":"/home/skin/Code/skin/scsd/README.md"}}}}]}
{"role":"user","created":1746300521,"content":[{"type":"toolResponse","id":"toolu_01QAUMDXQRRKhcC7wKdXhtUB","toolResult":{"status":"success","value":[{"type":"resource","resource":{"uri":"file:///home/skin/Code/skin/scsd/README.md","mime_type":"text","text":"# scsd\n\nSource-control-storable database.\n\nA text-based data format that is \"just markdown\". It is nearly a strict subset\nof [CommonMark (version 0.31.2)](https://spec.commonmark.org/0.31.2/) with \nthe [Pandoc](https://pandoc.org/) [pipe\ntables\nextension](https://www.uv.es/wikibase/doc/cas/pandoc_manual_2.7.3.wiki?95).\n\n## Example document\n\n```markdown\n-*- mode: markdown -*-\nvim: set filetype=markdown tabstop=2 shiftwidth=2 formatoptions+=cn expandtab\n\n# hospital\n\nACME hospital records. Distribution is expressly prohibited outside the\norganization by applicable law.\n\n## people\n\nThis table houses **all** the people in the database.\n\n|person_id|firstname|lastname|birth-year|birth-month|birth-day|\n|-:|-|-|-|-:|-:|-:|-:|\n|1|Daniel|Haskin|1901|01|01|\n|2|Joshua|Melburn|1982|04|06|\n|3|Fay|Bingham|2022|07|15|\n|4|Jordan|Slinger|1995|03|28|\n|5|Bo|Kent|1951|09|03|\n\n## departments\n\nA root list of department entities.\n\n|did|name|slug|\n|-:|-|:-|\n|1|Podiatry|pod_dept|\n|2|Pediatric Medicine|ped_dept|\n\n## doctors\n\nA *many-to-one* relation between doctors and departments.\n\n|doctor_id|person_id|department_id|\n|-:|-:|-:|\n|1|2|2|\n|2|5|2|\n\n## patients\n\nA *many-to-many* relation between doctors and patients.\n\n|patient_id|person_id|doctor_id|\n|-:|-:|-:|\n|1|1|1|\n|2|5|1|\n|3|3|2|\n|4|3|1|\n\n\n```\n\nShould look like this:\n\n\n> -*- mode: markdown -*-\n> vim: set filetype=markdown tabstop=2 shiftwidth=2 formatoptions+=cn expandtab\n> \n> # hospital\n> \n> ACME hospital records. Distribution is expressly prohibited outside the\n> organization by applicable law.\n> \n> ## people\n> \n> This table houses **all** the people in the database.\n> \n> |person_id|firstname|lastname|birth-year|birth-month|birth-day|\n> |-:|-|-|-|-:|-:|-:|-:|\n> |1|Daniel|Haskin|1901|01|01|\n> |2|Joshua|Melburn|1982|04|06|\n> |3|Fay|Bingham|2022|07|15|\n> |4|Jordan|Slinger|1995|03|28|\n> |5|Bo|Kent|1951|09|03|\n> \n> ## departments\n> \n> A root list of department entities.\n> \n> |did|name|slug|\n> |-:|-|:-|\n> |1|Podiatry|pod_dept|\n> |2|Pediatric Medicine|ped_dept|\n> \n> ## doctors\n> \n> A *many-to-one* relation between doctors and departments.\n> \n> |doctor_id|person_id|department_id|\n> |-:|-:|-:|\n> |1|2|2|\n> |2|5|2|\n> \n> ## patients\n> \n> A *many-to-many* relation between doctors and patients.\n> \n> |patient_id|person_id|doctor_id|\n> |-:|-:|-:|\n> |1|1|1|\n> |2|5|1|\n> |3|3|2|\n> |4|3|1|\n\n## Goals\n\n* Be a first-class citizen within a code SCM repository. Therefore, be\n  text-based way to record and manipulate data.\n\n* Support most \"normal\" SQL operations, particularly joins.\n\n* Support accurate recording of JSON data types within record fields.\n\n* Support whole-column types (rather than field-specific types).\n\n* Please the eye.\n\n* Follow the principle of least-surprise.\n\n* Don't make developers learn a new\n  format.\n\n* Support easy, single-character-lookahead parsing.\n\n* Support comments and descriptions.\n\n* Support the Lisp symbol type.\n\n## Non-Goals\n\n* No need to support all of SQL.\n  * No stored procedures\n  * No non-nullable columns\n\n## Description\n\nIt's just a subset of markdown as described above. Here is that subset:\n\n\n### Lines\n\nEverything is line-based. Lines are separated by one carriage return or one\nnewline character or one CR followed by one LF. This is called a \"line\nseparation\".\n\n### Comments\n\nComments are written as they would have to be in markdown:\n`<!-- Like this -->`. \n\n### One Document, One Database\n\nEach document starts with a single hash followed by a space (`# `). What follows\nthereafter is the database name until a line separation is found.\n\nAn optional set of lines may be present that do not start with either a pipe or\na hash character. These lines will be collected as a multi-line string\ncomprising the database description.\n\nA database consists of zero or more tables.\n\n### Tables\n\nA table has a name, a description, column names within a header, a columns type\nline, and zero or more rows. If there are zero rows, there must still be types\nand headers lines.\n\n#### Table name\n\nEach table starts with a line starting with two hashes followed by a space (`##\n`). What follows thereafter is the table name until a line separation is found.\n\nAn optional set of lines may be present that do not start with either a pipe or\na hash character. These lines will be collected as a multi-line string\ncomprising the table description.\n\n#### Table Header\n\nThereafter, there MUST be a line starting with a pipe character (`|`). This line\nis a pipe-separated list of column names in the table. Spaces are not trimmed or\nremoved; all characters between the pipes are taken literally as the table name.\nThe line must end with a pipe character followed by a line separation.\n\n#### Table Type Line\n\nThe next line is the dash line. It specifies the types that will be in different\ncolumns. It should start with the pipe character and have just as many\npipe-separated fields as the table header. Each field MUST be one of the\nfollowing:\n\n* The character `-` as a string indicator. This indicates the column is a\n  string.\n\n* `:-` as an atom or symbol character. This indicates the column is a keyword,\n  symbol, atom, or string, in that order, if the parsing language has a concept of\n  one of these.\n\n* `-:` means the field contains a number, as parsed like JSON.\n\n* `:-:` means the field contains a boolean value of `true` or `false`.\n\nAs previously stated, each field must be separated by others via the pipe\ncharacter. The line must end with a pipe character just before the line\nseparation.\n\n#### Table cell line\n\nEach subsequent line must start with a pipe. It must contain as many\npipe-separated fields as the header and table type lines. It must end with a\npipe before the line separation. Fields in the JSON number columns or JSON\nboolean columns must conform to that spec during parsing. Empty fields are\nalways allowed by the spec, and signify a JSON-like null value. \n\n### Strings\n\nStrings must not contain non-printables, tabs, or line separation characters.\nThey support backslash escaping of any ASCII punctuation character (to be\nconformant with CommonMark), `\\a` for alarm, `\\b` for backspace, `\\f` for form\nfeed, `\\n` for line feed, `\\r` for carriage return, `\\v` for vertical tab, `\\t`\nfor tab, and `\\uXXXX` for 16-bit unicode character encoding. In particular,\ndashes, colons, and pipes MUST be escaped. A single unescaped dash (`-`) in the\ntable cell lines indicates an empty string. All characters between the pipes of\nthe cell are considered part of the string; there is no trimming, whitespace or\notherwise. From an SQL perspective, all columns (even the first one) are\nconsidered nullable, at least for the purposes of the serialization format.\n\n### Keywords\n\nKeywords are serialized just as strings are, except that they indicate a\nkeyword, atom, or symbol. This string \"means something\".\n\n### Numbers\n\nJust like JSON numbers.\n\n### Booleans\n\nJust like JSON booleans.\n\n## ABNF\n\n```abnf\n\ncr = %0d\n\nlf = %0a\n\nline-sep = [cr] lf\n\npipe = %7c\n\ndash = %2d\n\ncolon = %3a\n\nhash = %23\n\nspace = %20\n\nbackslash = %5c\n\nascii-punct = %21 - %2f\n            / %3a - %40\n            / %5b - %60\n            / %7b - %7e\n\nnonzero-digit = %31 - %39\n\nzero = %30\n\ndigit = zero / nonzero-digit\n\npoint = %2e\n\nexp = %45 ; E\n    / %65 ; e\n\ninteger = zero\n        / [dash] nonzero-digit *digit\n\nnumber = integer [point *digit] [exp integer]\n\nhex = %30 - %39 ; digits\n    / %41 - %46 ; A-F\n\nescaped = %61 ; a (alarm/bell)\n        / %62 ; b (backspace)\n        / %6e ; n (newline)\n        / %76 ; v (vertical tab)\n        / %74 ; t (tab)\n        / %75 4hex ; u (unicode escape)\n        / ascii-punct\n\nunescaped-char = %32 - %2c   ; Up to dash\n               / %2e - %39   ; Past dash, up to colon\n               / %3b - %5b   ; Past colon, up to backslash\n               / %5d - %7b   ; Past backslash, up to pipe\n               / %7d - %ff   ; Past pipe\n\nstring-char = backslash escaped\n            / unescaped-char\n\nnonempty-string = 1*string-char\n\nempty-string = dash\n\nstring = nonempty-string\n       / empty-string\n\nboolean = \"true\"\n        / \"false\"\n\nnon-eol = %00 - %09 ; Up to line feed\n        / %0b - %0c ; Past line feed, up to carriage return\n        / %0e - %ff ; Past carriage return\n\ndescription-start = %00 - %09 ; Up to line feed\n                  / %0b - %0c ; Past line feed, up to carriage return\n                  / %0e - %22 ; Past carriage return, up to hash\n                  / %24 - %7b ; Past hash, up to pipe\n                  / %7d - %ff ; Past pipe\n\ndescription-line = *1( description-start *non-eol ) line-sep\n\ndescription = *description-line\n\ncolumn-name = nonempty-string\n\ntable-header = pipe 1*(column-name pipe) line-sep\n\ncolumn-type-string = dash\n\ncolumn-type-keyword = colon dash\n\ncolumn-type-boolean = colon dash colon\n\ncolumn-type-number = dash colon\n\ncolumn-type = column-type-string\n            / column-type-keyword\n            / column-type-boolean\n            / column-type-number\n\ntable-typespec = pipe 1*(column-type pipe) line-sep\n\nfield-data = *1( string\n           / keyword\n           / number\n           / boolean )\n\ntable-record = pipe 1*(field-data pipe) line-sep\n\ntable-name = 1*non-eol\n\ntable-title = hash hash space table-name line-sep\n\ntable-description = description\n\ntable-data = table-header table-typespec *table-record\n\ntable = table-title table-description table-data\n\ndatabase-name = 1*non-eol\n\ndatabase-title = hash space database-name line-sep\n\ndatabase-description = description\n\ndatabase = database-title database-description *table\n```\n"},"annotations":{"audience":["assistant"]}},{"type":"text","text":"### /home/skin/Code/skin/scsd/README.md\n```markdown\n# scsd\n\nSource-control-storable database.\n\nA text-based data format that is \"just markdown\". It is nearly a strict subset\nof [CommonMark (version 0.31.2)](https://spec.commonmark.org/0.31.2/) with \nthe [Pandoc](https://pandoc.org/) [pipe\ntables\nextension](https://www.uv.es/wikibase/doc/cas/pandoc_manual_2.7.3.wiki?95).\n\n## Example document\n\n```markdown\n-*- mode: markdown -*-\nvim: set filetype=markdown tabstop=2 shiftwidth=2 formatoptions+=cn expandtab\n\n# hospital\n\nACME hospital records. Distribution is expressly prohibited outside the\norganization by applicable law.\n\n## people\n\nThis table houses **all** the people in the database.\n\n|person_id|firstname|lastname|birth-year|birth-month|birth-day|\n|-:|-|-|-|-:|-:|-:|-:|\n|1|Daniel|Haskin|1901|01|01|\n|2|Joshua|Melburn|1982|04|06|\n|3|Fay|Bingham|2022|07|15|\n|4|Jordan|Slinger|1995|03|28|\n|5|Bo|Kent|1951|09|03|\n\n## departments\n\nA root list of department entities.\n\n|did|name|slug|\n|-:|-|:-|\n|1|Podiatry|pod_dept|\n|2|Pediatric Medicine|ped_dept|\n\n## doctors\n\nA *many-to-one* relation between doctors and departments.\n\n|doctor_id|person_id|department_id|\n|-:|-:|-:|\n|1|2|2|\n|2|5|2|\n\n## patients\n\nA *many-to-many* relation between doctors and patients.\n\n|patient_id|person_id|doctor_id|\n|-:|-:|-:|\n|1|1|1|\n|2|5|1|\n|3|3|2|\n|4|3|1|\n\n\n```\n\nShould look like this:\n\n\n> -*- mode: markdown -*-\n> vim: set filetype=markdown tabstop=2 shiftwidth=2 formatoptions+=cn expandtab\n> \n> # hospital\n> \n> ACME hospital records. Distribution is expressly prohibited outside the\n> organization by applicable law.\n> \n> ## people\n> \n> This table houses **all** the people in the database.\n> \n> |person_id|firstname|lastname|birth-year|birth-month|birth-day|\n> |-:|-|-|-|-:|-:|-:|-:|\n> |1|Daniel|Haskin|1901|01|01|\n> |2|Joshua|Melburn|1982|04|06|\n> |3|Fay|Bingham|2022|07|15|\n> |4|Jordan|Slinger|1995|03|28|\n> |5|Bo|Kent|1951|09|03|\n> \n> ## departments\n> \n> A root list of department entities.\n> \n> |did|name|slug|\n> |-:|-|:-|\n> |1|Podiatry|pod_dept|\n> |2|Pediatric Medicine|ped_dept|\n> \n> ## doctors\n> \n> A *many-to-one* relation between doctors and departments.\n> \n> |doctor_id|person_id|department_id|\n> |-:|-:|-:|\n> |1|2|2|\n> |2|5|2|\n> \n> ## patients\n> \n> A *many-to-many* relation between doctors and patients.\n> \n> |patient_id|person_id|doctor_id|\n> |-:|-:|-:|\n> |1|1|1|\n> |2|5|1|\n> |3|3|2|\n> |4|3|1|\n\n## Goals\n\n* Be a first-class citizen within a code SCM repository. Therefore, be\n  text-based way to record and manipulate data.\n\n* Support most \"normal\" SQL operations, particularly joins.\n\n* Support accurate recording of JSON data types within record fields.\n\n* Support whole-column types (rather than field-specific types).\n\n* Please the eye.\n\n* Follow the principle of least-surprise.\n\n* Don't make developers learn a new\n  format.\n\n* Support easy, single-character-lookahead parsing.\n\n* Support comments and descriptions.\n\n* Support the Lisp symbol type.\n\n## Non-Goals\n\n* No need to support all of SQL.\n  * No stored procedures\n  * No non-nullable columns\n\n## Description\n\nIt's just a subset of markdown as described above. Here is that subset:\n\n\n### Lines\n\nEverything is line-based. Lines are separated by one carriage return or one\nnewline character or one CR followed by one LF. This is called a \"line\nseparation\".\n\n### Comments\n\nComments are written as they would have to be in markdown:\n`<!-- Like this -->`. \n\n### One Document, One Database\n\nEach document starts with a single hash followed by a space (`# `). What follows\nthereafter is the database name until a line separation is found.\n\nAn optional set of lines may be present that do not start with either a pipe or\na hash character. These lines will be collected as a multi-line string\ncomprising the database description.\n\nA database consists of zero or more tables.\n\n### Tables\n\nA table has a name, a description, column names within a header, a columns type\nline, and zero or more rows. If there are zero rows, there must still be types\nand headers lines.\n\n#### Table name\n\nEach table starts with a line starting with two hashes followed by a space (`##\n`). What follows thereafter is the table name until a line separation is found.\n\nAn optional set of lines may be present that do not start with either a pipe or\na hash character. These lines will be collected as a multi-line string\ncomprising the table description.\n\n#### Table Header\n\nThereafter, there MUST be a line starting with a pipe character (`|`). This line\nis a pipe-separated list of column names in the table. Spaces are not trimmed or\nremoved; all characters between the pipes are taken literally as the table name.\nThe line must end with a pipe character followed by a line separation.\n\n#### Table Type Line\n\nThe next line is the dash line. It specifies the types that will be in different\ncolumns. It should start with the pipe character and have just as many\npipe-separated fields as the table header. Each field MUST be one of the\nfollowing:\n\n* The character `-` as a string indicator. This indicates the column is a\n  string.\n\n* `:-` as an atom or symbol character. This indicates the column is a keyword,\n  symbol, atom, or string, in that order, if the parsing language has a concept of\n  one of these.\n\n* `-:` means the field contains a number, as parsed like JSON.\n\n* `:-:` means the field contains a boolean value of `true` or `false`.\n\nAs previously stated, each field must be separated by others via the pipe\ncharacter. The line must end with a pipe character just before the line\nseparation.\n\n#### Table cell line\n\nEach subsequent line must start with a pipe. It must contain as many\npipe-separated fields as the header and table type lines. It must end with a\npipe before the line separation. Fields in the JSON number columns or JSON\nboolean columns must conform to that spec during parsing. Empty fields are\nalways allowed by the spec, and signify a JSON-like null value. \n\n### Strings\n\nStrings must not contain non-printables, tabs, or line separation characters.\nThey support backslash escaping of any ASCII punctuation character (to be\nconformant with CommonMark), `\\a` for alarm, `\\b` for backspace, `\\f` for form\nfeed, `\\n` for line feed, `\\r` for carriage return, `\\v` for vertical tab, `\\t`\nfor tab, and `\\uXXXX` for 16-bit unicode character encoding. In particular,\ndashes, colons, and pipes MUST be escaped. A single unescaped dash (`-`) in the\ntable cell lines indicates an empty string. All characters between the pipes of\nthe cell are considered part of the string; there is no trimming, whitespace or\notherwise. From an SQL perspective, all columns (even the first one) are\nconsidered nullable, at least for the purposes of the serialization format.\n\n### Keywords\n\nKeywords are serialized just as strings are, except that they indicate a\nkeyword, atom, or symbol. This string \"means something\".\n\n### Numbers\n\nJust like JSON numbers.\n\n### Booleans\n\nJust like JSON booleans.\n\n## ABNF\n\n```abnf\n\ncr = %0d\n\nlf = %0a\n\nline-sep = [cr] lf\n\npipe = %7c\n\ndash = %2d\n\ncolon = %3a\n\nhash = %23\n\nspace = %20\n\nbackslash = %5c\n\nascii-punct = %21 - %2f\n            / %3a - %40\n            / %5b - %60\n            / %7b - %7e\n\nnonzero-digit = %31 - %39\n\nzero = %30\n\ndigit = zero / nonzero-digit\n\npoint = %2e\n\nexp = %45 ; E\n    / %65 ; e\n\ninteger = zero\n        / [dash] nonzero-digit *digit\n\nnumber = integer [point *digit] [exp integer]\n\nhex = %30 - %39 ; digits\n    / %41 - %46 ; A-F\n\nescaped = %61 ; a (alarm/bell)\n        / %62 ; b (backspace)\n        / %6e ; n (newline)\n        / %76 ; v (vertical tab)\n        / %74 ; t (tab)\n        / %75 4hex ; u (unicode escape)\n        / ascii-punct\n\nunescaped-char = %32 - %2c   ; Up to dash\n               / %2e - %39   ; Past dash, up to colon\n               / %3b - %5b   ; Past colon, up to backslash\n               / %5d - %7b   ; Past backslash, up to pipe\n               / %7d - %ff   ; Past pipe\n\nstring-char = backslash escaped\n            / unescaped-char\n\nnonempty-string = 1*string-char\n\nempty-string = dash\n\nstring = nonempty-string\n       / empty-string\n\nboolean = \"true\"\n        / \"false\"\n\nnon-eol = %00 - %09 ; Up to line feed\n        / %0b - %0c ; Past line feed, up to carriage return\n        / %0e - %ff ; Past carriage return\n\ndescription-start = %00 - %09 ; Up to line feed\n                  / %0b - %0c ; Past line feed, up to carriage return\n                  / %0e - %22 ; Past carriage return, up to hash\n                  / %24 - %7b ; Past hash, up to pipe\n                  / %7d - %ff ; Past pipe\n\ndescription-line = *1( description-start *non-eol ) line-sep\n\ndescription = *description-line\n\ncolumn-name = nonempty-string\n\ntable-header = pipe 1*(column-name pipe) line-sep\n\ncolumn-type-string = dash\n\ncolumn-type-keyword = colon dash\n\ncolumn-type-boolean = colon dash colon\n\ncolumn-type-number = dash colon\n\ncolumn-type = column-type-string\n            / column-type-keyword\n            / column-type-boolean\n            / column-type-number\n\ntable-typespec = pipe 1*(column-type pipe) line-sep\n\nfield-data = *1( string\n           / keyword\n           / number\n           / boolean )\n\ntable-record = pipe 1*(field-data pipe) line-sep\n\ntable-name = 1*non-eol\n\ntable-title = hash hash space table-name line-sep\n\ntable-description = description\n\ntable-data = table-header table-typespec *table-record\n\ntable = table-title table-description table-data\n\ndatabase-name = 1*non-eol\n\ndatabase-title = hash space database-name line-sep\n\ndatabase-description = description\n\ndatabase = database-title database-description *table\n```\n\n```\n","annotations":{"audience":["user"],"priority":0.0}}]}}]}
{"role":"assistant","created":1746300531,"content":[{"type":"text","text":"Ran into this error: Rate limit exceeded: Some(Object {\"error\": Object {\"message\": String(\"This request would exceed the rate limit for your organization (6423882b-6df1-42c8-b14f-420e11b0d690) of 40,000 input tokens per minute. For details, refer to: https://docs.anthropic.com/en/api/rate-limits. You can see the response headers for current usage. Please reduce the prompt length or the maximum tokens requested, or try again later. You may also contact sales at https://www.anthropic.com/contact-sales to discuss your options for a rate limit increase.\"), \"type\": String(\"rate_limit_error\")}, \"type\": String(\"error\")}).\n\nPlease retry if you think this is a transient or recoverable error."}]}
{"role":"user","created":1746300640,"content":[{"type":"text","text":"retry"}]}
{"role":"assistant","created":1746300656,"content":[{"type":"text","text":"Let me help create the SCSD parser and library. Based on the requirements and ABNF specification, we'll need to implement:\n\n1. A parser for markdown-based tabular data\n2. Table and database representations\n3. Data type handling \n4. Basic SQL-like operations\n\nLet's start by creating the project structure following NRDL's template:"},{"type":"toolRequest","id":"toolu_01BkPxiCFDNp8CBAQpu7MkWT","toolCall":{"status":"success","value":{"name":"developer__shell","arguments":{"command":"cd skin/scsd && mkdir -p cl cl-tests"}}}}]}
{"role":"user","created":1746300656,"content":[{"type":"toolResponse","id":"toolu_01BkPxiCFDNp8CBAQpu7MkWT","toolResult":{"status":"success","value":[{"type":"text","text":"","annotations":{"audience":["assistant"]}},{"type":"text","text":"","annotations":{"audience":["user"],"priority":0.0}}]}}]}
{"role":"assistant","created":1746300668,"content":[{"type":"text","text":"Ran into this error: Rate limit exceeded: Some(Object {\"error\": Object {\"message\": String(\"This request would exceed the rate limit for your organization (6423882b-6df1-42c8-b14f-420e11b0d690) of 40,000 input tokens per minute. For details, refer to: https://docs.anthropic.com/en/api/rate-limits. You can see the response headers for current usage. Please reduce the prompt length or the maximum tokens requested, or try again later. You may also contact sales at https://www.anthropic.com/contact-sales to discuss your options for a rate limit increase.\"), \"type\": String(\"rate_limit_error\")}, \"type\": String(\"error\")}).\n\nPlease retry if you think this is a transient or recoverable error."}]}
{"role":"user","created":1746300750,"content":[{"type":"text","text":"retry"}]}
{"role":"assistant","created":1746300762,"content":[{"type":"text","text":"Let me help create the SCSD parser and library. I'll start by setting up the project structure and implementing the core components.\n\nFirst, let's create the necessary directories and files:"},{"type":"toolRequest","id":"toolu_01VPHqHyoX1Jps8CeoMDJde6","toolCall":{"status":"success","value":{"name":"developer__shell","arguments":{"command":"cd skin/scsd && mkdir -p cl cl-tests && touch com.djhaskin.scsd.asd cl/package.lisp cl/parser.lisp cl/types.lisp cl/database.lisp cl/table.lisp cl/main.lisp cl-tests/package.lisp cl-tests/main.lisp"}}}}]}
{"role":"user","created":1746300762,"content":[{"type":"toolResponse","id":"toolu_01VPHqHyoX1Jps8CeoMDJde6","toolResult":{"status":"success","value":[{"type":"text","text":"","annotations":{"audience":["assistant"]}},{"type":"text","text":"","annotations":{"audience":["user"],"priority":0.0}}]}}]}
{"role":"assistant","created":1746300767,"content":[{"type":"text","text":"Ran into this error: Rate limit exceeded: Some(Object {\"error\": Object {\"message\": String(\"This request would exceed the rate limit for your organization (6423882b-6df1-42c8-b14f-420e11b0d690) of 40,000 input tokens per minute. For details, refer to: https://docs.anthropic.com/en/api/rate-limits. You can see the response headers for current usage. Please reduce the prompt length or the maximum tokens requested, or try again later. You may also contact sales at https://www.anthropic.com/contact-sales to discuss your options for a rate limit increase.\"), \"type\": String(\"rate_limit_error\")}, \"type\": String(\"error\")}).\n\nPlease retry if you think this is a transient or recoverable error."}]}
{"role":"user","created":1746300893,"content":[{"type":"text","text":"retry"}]}
{"role":"assistant","created":1746300905,"content":[{"type":"text","text":"Let me help create the SCSD parser and library. I'll first set up the project structure and then implement the components one by one.\n\nFirst, let's create the project directories and initial files:"},{"type":"toolRequest","id":"toolu_013eP4REosJ7PtD5LewK2ruC","toolCall":{"status":"success","value":{"name":"developer__shell","arguments":{"command":"mkdir -p skin/scsd/cl skin/scsd/cl-tests"}}}}]}
{"role":"user","created":1746300905,"content":[{"type":"toolResponse","id":"toolu_013eP4REosJ7PtD5LewK2ruC","toolResult":{"status":"success","value":[{"type":"text","text":"","annotations":{"audience":["assistant"]}},{"type":"text","text":"","annotations":{"audience":["user"],"priority":0.0}}]}}]}
{"role":"assistant","created":1746300909,"content":[{"type":"text","text":"Ran into this error: Rate limit exceeded: Some(Object {\"error\": Object {\"message\": String(\"This request would exceed the rate limit for your organization (6423882b-6df1-42c8-b14f-420e11b0d690) of 40,000 input tokens per minute. For details, refer to: https://docs.anthropic.com/en/api/rate-limits. You can see the response headers for current usage. Please reduce the prompt length or the maximum tokens requested, or try again later. You may also contact sales at https://www.anthropic.com/contact-sales to discuss your options for a rate limit increase.\"), \"type\": String(\"rate_limit_error\")}, \"type\": String(\"error\")}).\n\nPlease retry if you think this is a transient or recoverable error."}]}
